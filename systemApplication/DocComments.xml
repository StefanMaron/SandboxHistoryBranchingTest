<?xml version="1.0"?>
<doc>
    <application>
        <id>63ca2fa4-4f03-4f2b-a480-172fef340d3f</id>
        <name>System Application</name>
        <publisher>Microsoft</publisher>
        <version>26.1.33404.36094</version>
    </application>
    <members>
        <member name="M:Codeunit::System#Agents#Agent Message.GetText(Agent Task Message@):Text">
            <summary>
            Get the message text for the given agent task message.
            </summary>
            <param name="AgentTaskMessage">Agent task message.</param>
            <returns>The body of the agent task message.</returns>
        </member>
        <member name="M:Codeunit::System#Agents#Agent Message.UpdateText(Agent Task Message@,Text)">
            <summary>
            Updates the message text.
            </summary>
            <param name="AgentTaskMessage">The message record to update.</param>
            <param name="NewMessageText">New message text to set.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent Message.IsEditable(Agent Task Message@):Boolean">
            <summary>
            Check if it is possible to edit the message.
            </summary>
            <param name="AgentTaskMessage">Agent task message to verify.</param>
            <returns>If it is possible to change the message.</returns>
        </member>
        <member name="M:Codeunit::System#Agents#Agent Message.SetStatusToSent(Agent Task Message@)">
            <summary>
            Sets the message status to sent.
            </summary>
            <param name="AgentTaskMessage">Agent task message to update status.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent Message.DownloadAttachments(Agent Task Message@)">
            <summary>
            Downloads the attachments for a specific message.
            </summary>
            <param name="AgentTaskMessage">Message to download attachments for.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent Task.TaskExists(Guid,Text):Boolean">
            <summary>
            Check if a task exists for the given agent user and conversation
            </summary>
            <param name="AgentUserSecurityID">The user security ID of the agent.</param>
            <param name="ConversationId">The conversation ID to check.</param>
            <returns>True if task exists, false if not.</returns>
        </member>
        <member name="M:Codeunit::System#Agents#Agent Task.CreateTaskMessage(Text[250],Text,Text[2048],Agent Task@)">
            <summary>
            Create a new task message for the given agent user and conversation.
            If task does not exist, it will be created.
            </summary>
            <param name="From">Specifies from address.</param>
            <param name="MessageText">The message text for the task.</param>
            <param name="CurrentAgentTask">Current Agent Task to which the message will be added.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent Task.CreateTaskWithoutMessage(Guid,Text[150],Text[2048],Agent Task@)">
            <summary>
            Create a new task  for the given agent user. No message is added to the task.
            </summary>
            <param name="AgentSecurityID">The security ID of the agent to create the task for.</param>
            <param name="TaskTitle">The title of the task.</param>
            <param name="ExternalId">The external ID of the task. This field is used to connect to external systems, like Message ID for emails.</param>
            <param name="NewAgentTask">The new agent task record that was created.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.Create(Enum::System#Agents#Agent Metadata Provider,Code[50],Text[80],Agent Access Control@):Guid">
            <summary>
            Creates a new agent.
            The agent will be in the disabled state, with the users that can interact with the agent setup.
            </summary>
            <param name="AgentMetadataProvider">The metadata provider of the agent.</param>
            <param name="UserName">User name for the agent.</param>
            <param name="UserDisplayName">Display name for the agent.</param>
            <param name="Instructions">Instructions for the agent that will be used to complete the tasks.</param>
            <param name="TempAgentAccessControl">The list of users that can configure or interact with the agent.</param>
            <returns>The ID of the agent.</returns>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.Activate(Guid)">
            <summary>
            Activates the agent
            </summary>
            <param name="AgentUserSecurityID">The user security ID of the agent.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.Deactivate(Guid)">
            <summary>
            Deactivates the agent
            </summary>
            <param name="AgentUserSecurityID">The user security ID of the agent.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.GetDisplayName(Guid):Text[80]">
            <summary>
            Get the display name of the agent.
            </summary>
            <param name="AgentUserSecurityID">The user security ID of the agent.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.GetUserName(Guid):Code[50]">
            <summary>
            Get the user name of the agent.
            </summary>
            <param name="AgentUserSecurityID">The user security ID of the agent.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.SetDisplayName(Guid,Text[80])">
            <summary>
            Sets the display name of the agent.
            </summary>
            <param name="AgentUserSecurityID">The user security ID of the agent.</param>
            <param name="DisplayName">The display name of the agent.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.SetInstructions(Guid,SecretText)">
            <summary>
            Set the instructions which agent will use to complete the tasks.
            </summary>
            <param name="Agent">The agent which instructions will be set.</param>
            <param name="Instructions">Instructions for the agent that will be used to complete the tasks.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.IsActive(Guid):Boolean">
            <summary>
            Checks if the agent is active.
            </summary>
            <param name="AgentUserSecurityID">The user security ID of the agent.</param>
            <returns>If the agent is active.</returns>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.SetProfile(Guid,All Profile@)">
            <summary>
            Assigns the permission set to the agent.
            </summary>
            <param name="AgentUserSecurityID">The user security ID of the agent.</param>
            <param name="AllProfile">Profile to set to the agent.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.AssignPermissionSet(Guid,Aggregate Permission Set@)">
            <summary>
            Assigns the permission set to the agent.
            </summary>
            <param name="AgentUserSecurityID">The user security ID of the agent.</param>
            <param name="AggregatePermissionSet">Permission sets to assign</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.GetUserAccess(Guid,Agent Access Control@)">
            <summary>
            Gets the users that can manage or give tasks to the agent.
            </summary>
            <param name="AgentUserSecurityID">Security ID of the agent.</param>
            <param name="TempAgentAccessControl">List of users that can manage or give tasks to the agent.</param>
        </member>
        <member name="M:Codeunit::System#Agents#Agent.UpdateAccess(Guid,Agent Access Control@)">
            <summary>
            Sets the users that can manage or give tasks to the agent. Existing set of users will be replaced with a new set.
            </summary>
            <param name="AgentUserSecurityID">Security ID of the agent.</param>
            <param name="TempAgentAccessControl">List of users that can manage or give tasks to the agent.</param>
        </member>
        <member name="O:Codeunit::System#Azure#Functions#Azure Functions">
            <summary>
            Provides functionality for connecting to Azure functions.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions.SendGetRequest(Interface::System#Azure#Functions#Azure Functions Authentication,Dictionary of [Text,Text]):Codeunit::System#Azure#Functions#Azure Functions Response">
            <summary>
            Sends a get request to Azure function.
            </summary>
            <param name="AzureFunctionAuthentication">Authentication interface.</param>
            <param name="QueryDict">Dictionary of query parameters for the request.</param>
            <returns>Instance of Azure function response object.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions.SendPostRequest(Interface::System#Azure#Functions#Azure Functions Authentication,Text,Text):Codeunit::System#Azure#Functions#Azure Functions Response">
            <summary>
            Sends a post request to Azure function.
            </summary>
            <param name="AzureFunctionAuthentication">Authentication interface</param>
            <param name="Body">Body of the request message.</param>
            <param name="ContentTypeHeader">Content type of the body to add to the request header.</param>
            <returns>Instance of Azure function response object.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions.Send(Interface::System#Azure#Functions#Azure Functions Authentication,Enum::System#Security#Authentication#Http Request Type,Dictionary of [Text,Text],Text,Text):Codeunit::System#Azure#Functions#Azure Functions Response">
            <summary>
            Sends a request to Azure function.
            </summary>
            <param name="AzureFunctionAuthentication">Authentication interface</param>
            <param name="RequestType">HTTP request method.</param>
            <param name="QueryDict">Dictionary of query parameters for the request.</param>
            <param name="Body">Body of the request message.</param>
            <param name="ContentTypeHeader">Content type of the body to add to the request header.</param>
            <returns>Instance of Azure function response object.</returns>
        </member>
        <member name="O:Codeunit::System#Azure#Functions#Azure Functions Authentication">
            <summary>
            Provides functionality for setting authentication parameters to Azure function.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions Authentication.CreateOAuth2(Text,Text,Text,Text,Text,Text,Text):Interface::System#Azure#Functions#Azure Functions Authentication">
            <summary>
            Creates OAuth2 authentication instance of Azure function interface.
            </summary>
            <param name="Endpoint">Azure function endpoint</param>
            <param name="AuthenticationCode">Azure function authentication code, empty if anonymous.</param>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, for azure function this could be empty</param>
            <param name="ResourceURL">The Application ID URI</param>
            <returns>Instance of Azure function response object.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions Authentication.CreateOAuth2(Text,Text,Text,SecretText,Text,Text,Text):Interface::System#Azure#Functions#Azure Functions Authentication">
            <summary>
            Creates OAuth2 authentication instance of Azure function interface.
            </summary>
            <param name="Endpoint">Azure function endpoint</param>
            <param name="AuthenticationCode">Azure function authentication code, empty if anonymous.</param>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, for azure function this could be empty</param>
            <param name="ResourceURL">The Application ID URI</param>
            <returns>Instance of Azure function response object.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions Authentication.CreateCodeAuth(Text,Text):Interface::System#Azure#Functions#Azure Functions Authentication">
            <summary>
            Creates code authentication instance of Azure function interface.
            </summary>
            <param name="Endpoint">Azure function endpoint</param>
            <param name="AuthenticationCode">Azure function authentication code, empty if anonymous.</param>
            <returns>Instance of Azure function response object.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions Authentication.CreateOAuth2WithCert(Text,Text,Text,SecretText,Text,Text,Text):Interface::System#Azure#Functions#Azure Functions Authentication">
            <summary>
            Creates an instance of OAuth2 authentication with certificate of Azure function interface.
            </summary>
            <param name="Endpoint">Azure function endpoint</param>
            <param name="AuthenticationCode">Azure function authentication code, empty if anonymous.</param>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Cert">The Application (client) certificate configured in the Azure Portal.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, for azure function this could be empty</param>
            <param name="Scope">The scope for the token, example: "api://(app id)/.default"</param>
            <returns>Instance of Azure function response object.</returns>
        </member>
        <member name="O:Interface::System#Azure#Functions#Azure Functions Authentication">
            <summary>
            Common interface for different authentication options.
            </summary>
        </member>
        <member name="M:Interface::System#Azure#Functions#Azure Functions Authentication.Authenticate(HttpRequestMessage@):Boolean">
            <summary>
            Exposes interface to authenticate request message to azure function.
            </summary>
            <param name="RequestMessage">Request message used to communicate with Azure function.</param>
            <returns>True if authentication was successful; otherwise - false.</returns>
        </member>
        <member name="O:Codeunit::System#Azure#Functions#Azure Functions Response">
            <summary>
            Holder object for holding for Azure Function request result.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions Response.IsSuccessful:Boolean">
            <summary>
            Checks whether the request was successful.
            </summary>
            <returns>True if the request was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions Response.GetError:Text">
            <summary>
            Gets the error (if any) of the response.
            </summary>
            <returns>Text representation of the error that occurred during the request.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions Response.GetError(Text@)">
            <summary>
            Gets the error content
            </summary>
            <returns>Text representation of the detailed error message.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions Response.GetResultAsText(Text@):Boolean">
            <summary>
            Gets the result of Azure function request as text.
            </summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions Response.GetResultAsStream(InStream@):Boolean">
            <summary>
            Gets the result of Azure function request as stream.
            </summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Functions#Azure Functions Response.GetHttpResponse(HttpResponseMessage@)">
            <summary>
            Gets the result of Azure function request as HTTPResponseMessage.
            </summary>
            <returns>The HTTP response object.</returns>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Azure AD Graph">
            <summary>
            Exposes functionality to query Microsoft Entra.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetUser(Text,DotNetTypeDeclaration::System#UserInfo@)">
            <summary>
            Gets the user with the specified user principal name from Microsoft Entra.
            </summary>
            <param name="UserPrincipalName">The user principal name.</param>
            <param name="UserInfo">The user to return.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetCurrentUser(DotNetTypeDeclaration::System#UserInfo@)">
            <summary>
            Gets the current user from Microsoft Entra.
            </summary>
            <param name="UserInfo">The user to return.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetUserByAuthorizationEmail(Text,DotNetTypeDeclaration::System#UserInfo@)">
            <summary>
            Gets the user with the specified authorization email from Microsoft Entra.
            </summary>
            <param name="AuthorizationEmail">The user's authorization email.</param>
            <param name="UserInfo">The user to return.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetUserByObjectId(Text,DotNetTypeDeclaration::System#UserInfo@)">
            <summary>
            Gets the user with the specified object ID from Microsoft Entra.
            </summary>
            <param name="ObjectId">The object ID assigned to the user.</param>
            <param name="UserInfo">The user to return.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.TryGetUserByObjectId(Text,DotNetTypeDeclaration::System#UserInfo@):Boolean">
            <summary>
            Tries to return the user with the specified object ID from Microsoft Entra.
            </summary>
            <param name="ObjectId">The object ID assigned to the user.</param>
            <param name="UserInfo">The user to return.</param>
            <returns>A boolean that indicates whether the user was retrieved.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetUserAssignedPlans(DotNetTypeDeclaration::System#UserInfo,DotNetTypeDeclaration::System#GenericList1@)">
            <summary>
            Gets the assigned plans for the specified user from Microsoft Entra.
            </summary>
            <param name="UserInfo">The user.</param>
            <param name="UserAssignedPlans">The assigned plans for the user.</param>
            <remarks>If the provided user is null, the output parameter holding the assigned plans remains unchanged.</remarks>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetUserRoles(DotNetTypeDeclaration::System#UserInfo,DotNetTypeDeclaration::System#GenericIEnumerable1@)">
            <summary>
            Gets the roles assigned to the user from Microsoft Entra.
            </summary>
            <param name="UserInfo">The user for whom to retrieve the roles.</param>
            <param name="UserRoles">The user's roles.</param>
            <remarks>If the provided user is null, the output parameter holding the user roles remains unchanged.</remarks>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetDirectorySubscribedSkus(DotNetTypeDeclaration::System#GenericIEnumerable1@)">
            <summary>
            Gets the list of subscriptions owned by the tenant.
            </summary>
            <param name="DirectorySubscribedSkus">The list of subscriptions to return.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetDirectoryRoles(DotNetTypeDeclaration::System#GenericIEnumerable1@)">
            <summary>
            Gets the directory roles from Microsoft Entra.
            </summary>
            <param name="DirectoryRoles">The directory roles to return.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetTenantDetail(DotNetTypeDeclaration::System#TenantInfo@)">
            <summary>
            Gets details about the tenant from Microsoft Entra.
            </summary>
            <param name="TenantInfo">The tenant details to return.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.IsM365CollaborationEnabled:Boolean">
            <summary>
            Gets the value of whether M365 collaboration is enabled.
            </summary>
            <returns>True, if M365 collaboration is enabled, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetEnvironmentSecurityGroupId:Text">
            <summary>
            Gets the name of the Microsoft Entra security group defined in tenant admin center.
            For more info, see https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/administration/tenant-admin-center-environments#manage-access-using-azure-active-directory-groups
            </summary>
            <returns>The name of the Microsoft Entra security group defined in tenant admin center.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.IsEnvironmentSecurityGroupDefined:Boolean">
            <summary>
            Returns if the Microsoft Entra security group is defined in tenant admin center.
            </summary>
            <returns>True if defined.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetUsersPage(Integer,DotNetTypeDeclaration::System#UserInfoPage@)">
            <summary>
            Gets a list of users.
            </summary>
            <param name="NumberOfUsers">The number of users to return.</param>
            <param name="UserInfoPage">The list of users to return.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetLicensedUsersPage(DotNetTypeDeclaration::System#StringArray,Integer,DotNetTypeDeclaration::System#UserInfoPage@)">
            <summary>
            Gets a list of licensed users.
            </summary>
            <param name="AssignedPlans">The assigned plans (licenses) to filter to.</param>
            <param name="NumberOfUsers">The number of users per page to return.</param>
            <param name="UserInfoPage">The list of users to return.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetGroupMembers(Text,DotNetTypeDeclaration::System#IEnumerable@)">
            <summary>
            Gets a list of users who are members of the specified Microsoft Entra group.
            </summary>
            <param name="GroupDisplayName">The name of the Microsoft Entra group.</param>
            <param name="GroupMembers">A list of UserInfo objects identifying users that are members of the specified group.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetMembersPageForGroupId(Text,Integer,DotNetTypeDeclaration::System#UserInfoPage@)">
            <summary>
            Gets a list of users who are members of the specified Microsoft Entra group.
            </summary>
            <param name="GroupId">The object ID of the Microsoft Entra security group.</param>
            <param name="NumberOfUsers">The number of users per page to return.</param>
            <param name="UserInfoPage">A list of UserInfo objects identifying users that are members of the specified group.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetMemberIdsPageForGroupId(Text,Integer,DotNetTypeDeclaration::System#UserIdsPage@)">
            <summary>
            Gets a list of user IDs of users who are members of the specified Microsoft Entra group.
            </summary>
            <param name="GroupId">The object ID of the Microsoft Entra security group.</param>
            <param name="NumberOfUsers">The number of user IDs per page to return.</param>
            <param name="UserInfoPage">A list of User ID objects identifying users that are members of the specified group.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.IsGroupMember(Text,DotNetTypeDeclaration::System#UserInfo):Boolean">
            <summary>
            Checks if a given user is a member of a Microsoft Entra security group.
            </summary>
            <param name="GroupDisplayName">The name of the Microsoft Entra security group.</param>
            <param name="GraphUserInfo">The user.</param>
            <returns>True if the user is member of the Microsoft Entra security group; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.IsMemberOfGroupWithId(Text,DotNetTypeDeclaration::System#UserInfo):Boolean">
            <summary>
            Checks if a given user is a member of a Microsoft Entra security group.
            </summary>
            <param name="GroupId">The object ID of the Microsoft Entra security group.</param>
            <param name="GraphUserInfo">The user.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetGroupName(Text):Text">
            <summary>
            Gets the group's display name
            </summary>
            <param name="GroupId">The object ID of the Microsoft Entra security group.</param>
            <returns>The display name of the group.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetFirstGroupIdWithName(Text):Text">
            <summary>
            Gets the first Microsoft Entra group object ID that matches the provided display name.
            </summary>
            <param name="GroupName">The display name of the group.</param>
            <returns>The object ID of the Microsoft Entra security group.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.GetGroups:Dictionary of [Text,Text]">
            <summary>
            Gets all of the Microsoft Entra security groups.
            </summary>
            <returns>A dictionary of group object ID and group display name.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph.IsGraphUserAccountEnabled(Text,Boolean@):Boolean">
            <summary>
            Checks if the Microsoft 365 user account for the specified principal name is enabled.
            Note: Even if the graph user is enabled, the account may be disabled in Business Central.
            </summary>
            <param name="UserPrincipalName">The user principal name.</param>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Azure AD Licensing">
            <summary>
            Access information about the subscribed SKUs and the corresponding service plans.
            You can retrieve information such as the SKU Object ID, SKU ID, number of licenses assigned, the license state (enabled, suspended, or warning), and the SKU part number.
            For the corresponding service plans, you can retrieve the ID, the capability status, or the name.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.ResetSubscribedSKU:Boolean">
            <summary>
            Sets the enumerator for the subscribed SKUs to its initial position, which is before the first subscribed SKU in the collection.
            </summary>
            <returns> True if the enumerator was successfully reset and otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.NextSubscribedSKU:Boolean">
            <summary>
            Advances the enumerator to the next subscribed SKU in the collection. If only known service plans should be included, it advances to the next SKU known in Business Central.
            </summary>
            <returns> True if the enumerator was successfully advanced to the next SKU; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.SubscribedSKUCapabilityStatus:Text">
            <summary>
            Gets the capability status of the subscribed SKU that the enumerator is currently pointing to in the collection.
            </summary>
            <returns> The capability status of the subscribed SKU, or an empty string if the subscribed SKUs enumerator was not initialized.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.SubscribedSKUConsumedUnits:Integer">
            <summary>
            Gets the number of licenses assigned to the subscribed SKU that the enumerator is currently pointing to in the collection.
            </summary>
            <returns> The number of licenses that are assigned to the subscribed SKU, or 0 if the subscribed SKUs enumerator was not initialized.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.SubscribedSKUObjectId:Text">
            <summary>
            Gets the object ID of the subscribed SKU that the enumerator is currently pointing to in the collection.
            </summary>
            <returns> The object ID of the current SKU. If the subscribed SKUs enumerator was not initialized, it will return an empty string.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.SubscribedSKUPrepaidUnitsInEnabledState:Integer">
            <summary>
            Gets the number of prepaid licenses that are enabled for the subscribed SKU that the enumerator is currently pointing to in the collection.
            </summary>
            <returns> The number of prepaid licenses that are enabled for the subscribed SKU. If the subscribed SKUs enumerator was not initialized it will return 0.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.SubscribedSKUPrepaidUnitsInSuspendedState:Integer">
            <summary>
            Gets the number of prepaid licenses that are suspended for the subscribed SKU that the enumerator is currently pointing to in the collection.
            </summary>
            <returns>The number of prepaid licenses that are suspended for the subscribed SKU. If the subscribed SKUs enumerator was not initialized it will return 0.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.SubscribedSKUPrepaidUnitsInWarningState:Integer">
            <summary>
            Gets the number of prepaid licenses that are in warning status for the subscribed SKU that the enumerator is currently pointing to in the collection.
            </summary>
            <returns> The number of prepaid licenses that are in warning status for the subscribed SKU. If the subscribed SKUs enumerator was not initialized it will return 0.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.SubscribedSKUId:Text">
            <summary>
            Gets the unique identifier (GUID) for the subscribed SKU that the enumerator is currently pointing to in the collection.
            </summary>
            <returns> The unique identifier (GUID) of the subscribed SKU; empty string if the subscribed SKUs enumerator was not initialized.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.SubscribedSKUPartNumber:Text">
            <summary>
            Gets the part number of the subscribed SKU that the enumerator is currently pointing to in the collection. For example, "AAD_PREMIUM" OR "RMSBASIC."
            </summary>
            <returns> The part number of the subscribed SKU or an empty string if the subscribed SKUs enumerator was not initialized.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.ResetServicePlans">
            <summary>
            Sets the enumerator for service plans to its initial position, which is before the first service plan in the collection.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.NextServicePlan:Boolean">
            <summary>
            Advances the enumerator to the next service plan in the collection.
            </summary>
            <returns> True if the enumerator was successfully advanced to the next service plan; false if the enumerator has passed the end of the collection or it was not initialized.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.ServicePlanCapabilityStatus:Text">
            <summary>
            Gets the service plan capability status.
            </summary>
            <returns> The capability status of the service plan, or an empty string if the service plan enumerator was not initialized.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.ServicePlanId:Text">
            <summary>
            Gets the service plan ID.
            </summary>
            <returns> The ID of the service plan, or an empty string if the service plan enumerator was not initialized.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.ServicePlanName:Text">
            <summary>
            Gets the service plan name.
            </summary>
            <returns> The name of the service plan, or an empty string if the service plan enumerator was not initialized.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.IncludeUnknownPlans:Boolean">
            <summary>
            Checks whether to include unknown plans when moving to the next subscribed SKU in the subscribed SKUs collection.
            </summary>
            <returns> True if the unknown service plans should be included. Otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Licensing.SetIncludeUnknownPlans(Boolean)">
            <summary>
            Sets whether to include unknown plans when moving to the next subscribed SKU in subscribed SKUs collection.
            </summary>
            <param name="NewIncludeUnknownPlans">The value to be set to the flag.</param>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Azure AD Plan">
            <summary>
            Retrieve plans in Microsoft Entra and manage plans
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.IsPlanAssigned(Guid):Boolean">
            <summary>
            Checks if the plan is assigned to any user.
            </summary>
            <param name="PlanGUID">the plan GUID.</param>
            <returns>true if the given plan has users assigned to it.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.IsPlanAssignedToUser(Guid):Boolean">
            <summary>
            Checks if the plan is assigned to the current user.
            </summary>
            <param name="PlanGUID">the plan GUID.</param>
            <returns>true if the given plan is assigned to the current user.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.IsPlanAssignedToUser(Guid,Guid):Boolean">
            <summary>
            Checks if the plan is assigned to a specific user.
            </summary>
            <param name="PlanGUID">the plan GUID.</param>
            <param name="UserGUID">the user GUID.</param>
            <returns>true if the given plan is assigned to the given user.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.IsGraphUserEntitledFromServicePlan(DotNetTypeDeclaration::System#UserInfo@):Boolean">
            <summary>
            Returns true if the given user is entitled from the service plan.
            </summary>
            <param name="GraphUserInfo">the user to check.</param>
            <returns>True if the given user is entitled from the service plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.AssignPlanToUserWithDelegatedRole(Guid)">
            <summary>
            Assigns a plan to the user based on their delegated role.
            </summary>
            <param name="UserSecurityId">The security ID of the user</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.UpdateUserPlans(Guid,DotNetTypeDeclaration::System#UserInfo@)">
            <summary>
            Updates license plans for a user.
            </summary>
            <raises>OnUpdateUserAccessForSaaS</raises>
            <param name="UserSecurityId">The user for whom to update license information.</param>
            <param name="GraphUserInfo">The graph user corresponding to the user to update, and containing the information about the plans assigned to the user.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.UpdateUserPlans(Guid,DotNetTypeDeclaration::System#UserInfo@,Boolean,Boolean)">
            <summary>
            Updates license plans for a user.
            </summary>
            <raises>OnUpdateUserAccessForSaaS</raises>
            <param name="UserSecurityId">The user for whom to update license information.</param>
            <param name="GraphUserInfo">The graph user corresponding to the user to update, and containing the information about the plans assigned to the user.</param>
            <param name="AppendPermissionsOnNewPlan">Append permissions from the new plan to the user.</param>
            <param name="RemovePermissionsOnDeletePlan">Remove permissions when removing the plan for the user.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.UpdateUserPlans(Guid)">
            <summary>
            Updates license plans for a user.
            </summary>
            <raises>OnUpdateUserAccessForSaaS</raises>
            <param name="UserSecurityId">The user for whom to update license information.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.UpdateUserPlans(Guid,Boolean,Boolean,Boolean)">
            <summary>
            Updates license plans for a user.
            </summary>
            <raises>OnUpdateUserAccessForSaaS</raises>
            <param name="UserSecurityId">The user for whom to update license information.</param>
            <param name="AppendPermissionsOnNewPlan">Add permissions from the new license plan to the user. Existing permissions will not be affected.</param>
            <param name="RemovePermissionsOnDeletePlan">Remove permissions when removing a license plan for a user.</param>
            <param name="RemovePlansOnDeleteUser">Remove license plans when a user is deleted in Office 365.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.UpdateUserPlans">
            <summary>
            Updates plans for all users.
            </summary>
            <raises>OnUpdateUserAccessForSaaS</raises>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.RefreshUserPlanAssignments(Guid)">
            <summary>
            Refreshes the user plans assigned to the given user.
            </summary>
            <raises>OnUpdateUserAccessForSaaS</raises>
            <param name="UserSecurityId">The user to update.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.TryGetAzureUserPlanRoleCenterId(Integer@,Guid):Boolean">
            <summary>
            Returns the plan roleCenterID for the given user.
            </summary>
            <param name="RoleCenterID">The roleCenterID to return.</param>
            <param name="UserSecurityId">The user GUID.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.DoPlansExist:Boolean">
            <summary>
            Returns true if at least one plan exists.
            </summary>
            <returns>Returns true if at least one plan exist.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.DoUserPlansExist:Boolean">
            <summary>
            Returns true if at least one user is assigned to a plan.
            </summary>
            <returns>Returns true if at least one user is assigned to a plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.DoesPlanExist(Guid):Boolean">
            <summary>
            Returns true if the given plan exists.
            </summary>
            <param name="PlanGUID">The plan GUID.</param>
            <returns>Returns true if the given plan exists.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.DoesUserHavePlans(Guid):Boolean">
            <summary>
            Returns true if the given user has at least one plan.
            </summary>
            <param name="UserSecurityId">The user GUID.</param>
            <returns>Returns true if the given user has at least one plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.GetAvailablePlansCount:Integer">
            <summary>
            Gets the total number of available plans.
            </summary>
            <returns>Returns the total number of available plans.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.GetAllPlanIds:List of [Guid]">
            <summary>
            Returns the list of all valid Business Central plan IDs.
            </summary>
            <returns>The list of all valid Business Central plan IDs.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.GetUserPlanExperience:Enum::System#Azure#Identity#User Plan Experience">
            <summary>
            Returns the user plan experience of the user. Either Basic, Essentials, Premium or Other.
            </summary>
            <returns>The the user plan experience.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.CheckMixedPlans">
            <summary>
            Checks whether the plan configuration mixes different plans.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.CheckMixedPlans(Dictionary of [Text,List],Boolean)">
            <summary>
            Checks whether the plan configuration mixes different plans.
            </summary>
            <param name="PlanNamesPerUser">A mapping of new plans for user identifiers.</param>
            <param name="ErrorOutForAdmin">Specifies if an error (instead of a message) should be shown for an admin when this function is called.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.CheckMixedPlans(Dictionary of [Text,List])">
            <summary>
            Checks whether the plan configuration mixes different plans.
            </summary>
            <param name="PlanNamesPerUser">A mapping of new plans for user identifiers.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.CheckMixedPlansExist:Boolean">
            <summary>
            Checks whether the plan configuration mixes different plans.
            Returns true if there are incompatible plans in the system. Only checks when conditions for plan check is met, otherwise returns false.
            </summary>
            <returns>Returns true if there are incompatible plans in the system.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.MixedPlansExist:Boolean">
            <summary>
            Returns true if there are incompatible plans in the system.
            </summary>
            <returns>Returns true if there are incompatible plans in the system. </returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.GetPlanNames(DotNetTypeDeclaration::System#UserInfo,List of [Text]@)">
            <summary>
            Gets plans that are assigned to a user in Office 365.
            </summary>
            <param name="GraphUserInfo">The Graph user to get plans for.</param>
            <param name="PlanNames">The names of the plans that are assigned to the user in Office 365.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.GetPlanNames(Guid,List of [Text]@)">
            <summary>
            Gets plans that are assigned to a Business Central user.
            </summary>
            <param name="UserSecID">The security ID of the user whose plans we are getting.</param>
            <param name="PlanNames">The plan names of plans assigned to the Office 365 user.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.GetPlanIDs(DotNetTypeDeclaration::System#UserInfo,List of [Guid]@)">
            <summary>
            Gets plans that are assigned to a user in Office 365.
            </summary>
            <param name="GraphUserInfo">The Graph user to get plans for.</param>
            <param name="PlanIDs">The IDs of the plans that are assigned to the user in Office 365.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.CheckIfPlansDifferent(DotNetTypeDeclaration::System#UserInfo,Guid):Boolean">
            <summary>
            Checks whether a user is assigned to different plans in Business Central and Graph.
            </summary>
            <param name="GraphUserInfo">The user in Graph to check plans for.</param>
            <param name="UserSecID">The security ID of the user to get plans for.</param>
            <returns>True, if the plans differ, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.IsBCServicePlan(Guid):Boolean">
            <summary>
            Checks whether a given service plan is a Business Central service Plan
            </summary>
            <param name="ServicePlanId">The plan to check.</param>
            <returns>True, if the service plan is a Business Central Plan, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Plan.OnUpdateUserAccessForSaaS(Guid,Boolean@)">
            <summary>
            Integration event, raised from <see cref="UpdateUserPlans"/>.
            Subscribe to this event to update the user groups
            </summary>
            <param name="UserSecurityID">The user to update.</param>
            <param name="UserGroupsAdded">Whether the user groups were updated</param>
        </member>
        <member name="O:Query::System#Azure#Identity#Plan">
            <summary>
            Displays a list of plans.
            </summary>
        </member>
        <member name="O:Table::System#Azure#Identity#Plan">
            <summary>
            Displays a list of plans.
            </summary>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Plan Ids">
            <summary>
            Exposes functionality to get plan IDs.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetBasicPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central Basic Financials plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central Basic Financials plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetTeamMemberPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central Team Member plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central Team Member plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetMicrosoft365PlanId:Guid">
            <summary>
            Returns the ID for the Microsoft 365 plan.
            </summary>
            <returns>The ID for the Microsoft 365 plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetEssentialPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central Essentials plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central Essentials plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetPremiumPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central Premium plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central Premium plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetViralSignupPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central for IWs plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central for IWs plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetExternalAccountantPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central External Accountant plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central External Accountant plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetDelegatedAdminPlanId:Guid">
            <summary>
            Returns the ID for the Delegated Admin agent - Partner plan.
            </summary>
            <returns>The ID for the Delegated Admin agent - Partner plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetDelegatedBCAdminPlanId:Guid">
            <summary>
            Returns the ID for the Delegated BC Admin agent - Partner plan.
            </summary>
            <returns>The ID for the Delegated BC Admin agent - Partner plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetBCAdminPlanId:Guid">
            <summary>
            Returns the ID for the Internal BC Administrator plan.
            </summary>
            <returns>The ID for the Internal BC Administrator plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetD365AdminPartnerPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Admin - Partner plan.
            </summary>
            <returns>The ID for the Dynamics 365 Admin - Partner plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetD365AdminPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Administrator plan.
            </summary>
            <returns>The ID for the Dynamics 365 Administrator plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetGlobalAdminPlanId:Guid">
            <summary>
            Returns the ID for the Global Administrator plan.
            </summary>
            <returns>The ID for the Global Administrator plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetTeamMemberISVPlanId:Guid">
            <summary>
            Returns the ID for the D365 Business Central Team Member - Embedded plan.
            </summary>
            <returns>The ID for the D365 Business Central Team Member - Embedded plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetEssentialISVPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central Essential - Embedded plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central Essential - Embedded plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetPremiumISVPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central Premium - Embedded plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central Premium - Embedded plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetEssentialAttachPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central Essential - Attach plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central Essential - Attach plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetDeviceISVPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central Device - Embedded plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central Device - Embedded plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetDevicePlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central Device plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central Device plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetBasicFinancialsISVPlanId:Guid">
            <summary>
            Returns the ID for the Dynamics 365 Business Central Basic Financials - Embedded plan.
            </summary>
            <returns>The ID for the Dynamics 365 Business Central Basic Financials - Embedded plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetAccountantHubPlanId:Guid">
            <summary>
            Returns the ID for the Microsoft Dynamics 365 - Accountant Hub plan.
            </summary>
            <returns>The ID for the Microsoft Dynamics 365 - Accountant Hub plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetHelpDeskPlanId:Guid">
            <summary>
            Returns the ID for the Delegated Helpdesk agent - Partner plan.
            </summary>
            <returns>The ID for the Delegated Helpdesk agent - Partner plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetInfrastructurePlanId:Guid">
            <summary>
            Returns the ID for the D365 Business Central Infrastructure plan.
            </summary>
            <returns>The ID for the D365 Business Central Infrastructure plan.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Ids.GetPremiumPartnerSandboxPlanId:Guid">
            <summary>
            Returns the ID for the D365 Business Central Premium Partner Sandbox plan.
            </summary>
            <returns>The ID for the D365 Business Central Premium Partner Sandbox plan.</returns>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Plan Installer">
            <summary>
            Adds plans to the Plan table.
            </summary>
        </member>
        <member name="O:Page::System#Azure#Identity#Plans">
            <summary>
            List page that contains all plans that can be assigned to users.
            </summary>
        </member>
        <member name="M:Page::System#Azure#Identity#Plans.SetSelectedPlan(Guid)">
            <summary>
            Set selected plan when the page is used in lookup mode.
            </summary>
            <param name="PlanId">The ID of the plan to select.</param>
        </member>
        <member name="M:Page::System#Azure#Identity#Plans.GetSelectedPlan(Guid@,Text[50]@)">
            <summary>
            Gets the selected plan.
            </summary>
            <param name="PlanId">The ID of the selected plan.</param>
            <param name="PlanName">The name of the selected plan.</param>
        </member>
        <member name="O:Page::System#Azure#Identity#Plans FactBox">
            <summary>
            ListPart page that contains all the plans.
            </summary>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Plan Upgrade">
            <summary>
            Codeunit to upgrade the Plan table.
            </summary>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Plan Upgrade Tag">
            <summary>
            Exposes functionality to retrieve the device upgrade tag.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Upgrade Tag.GetAddDeviceISVEmbUpgradeTag:Code[250]">
            <summary>
            Returns the device upgrade tag.
            </summary>
            <returns>The device upgrade tag.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Upgrade Tag.GetRenamePlansUpgradeTag:Code[250]">
            <summary>
            Returns the rename plans upgrade tag.
            </summary>
            <returns>The rename plans upgrade tag.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Upgrade Tag.GetRenameTeamMemberPlanUpgradeTag:Code[250]">
            <summary>
            Returns the rename team member plan upgrade tag.
            </summary>
            <returns>The rename team member plan upgrade tag.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Upgrade Tag.GetRenameDevicePlanUpgradeTag:Code[250]">
            <summary>
            Returns the rename device plan upgrade tag.
            </summary>
            <returns>The rename device plan upgrade tag.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Upgrade Tag.GetPremiumPartnerSandboxUpgradeTag:Code[250]">
            <summary>
            Returns the Premium Partner Sandbox upgrade tag.
            </summary>
            <returns>The Premium Partner Sandbox upgrade tag.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Upgrade Tag.GetMicrosoft365UpgradeTag:Code[250]">
            <summary>
            Returns the Microsoft 365 upgrade tag.
            </summary>
            <returns>The Microsoft365 upgrade tag.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Upgrade Tag.GetEssentialAttachUpgradeTag:Code[250]">
            <summary>
            Returns the Essential Attach upgrade tag.
            </summary>
            <returns>The Essential Attach upgrade tag.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Upgrade Tag.GetMD365AdminUpgradeTag:Code[250]">
            <summary>
            Returns the Dynamics 365 Administrator upgrade tag.
            </summary>
            <returns>The Dynamics 365 Administrator upgrade tag.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Upgrade Tag.GetDelegatedD365AdminUpgradeTag:Code[250]">
            <summary>
            Returns the Delegated Dynamics 365 Administrator upgrade tag.
            </summary>
            <returns>The Dynamics 365 Administrator upgrade tag.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Upgrade Tag.GetBCAdminUpgradeTag:Code[250]">
            <summary>
            Returns the BC Administrator upgrade tag.
            </summary>
            <returns>The BC Administrator upgrade tag.</returns>
        </member>
        <member name="O:Query::System#Azure#Identity#Role Center from Plans">
            <summary>
            Displays a list of the Role Center Ids assigned to users through plans.
            </summary>
        </member>
        <member name="O:Table::System#Azure#Identity#User Plan">
            <summary>
            Displays a list of the plans assigned to users.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Identity#User Plan Experience">
            <summary>
            User plan experience. 
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#User Plan Experience.Essentials">
            <summary>
            Essentials plan.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#User Plan Experience.Premium">
            <summary>
            Premium plan.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#User Plan Experience.Basic">
            <summary>
            Basic plan.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#User Plan Experience.Other">
            <summary>
            Other license type.
            </summary>
        </member>
        <member name="O:Page::System#Azure#Identity#User Plan Members">
            <summary>
            List page that contains all users and the plans that they are assigned to.
            </summary>
        </member>
        <member name="O:Page::System#Azure#Identity#User Plan Members FactBox">
            <summary>
            ListPart page that contains all the user plan members.
            </summary>
        </member>
        <member name="O:Page::System#Azure#Identity#User Plans FactBox">
            <summary>
            ListPart page that contains the plans assigned to users.
            </summary>
        </member>
        <member name="O:Query::System#Azure#Identity#Users in Plans">
            <summary>
            Displays a list of the plans assigned to users.
            </summary>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Azure AD Tenant">
            <summary>
            Exposes functionality to fetch attributes concerning the current tenant.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Tenant.GetAadTenantId:Text">
            <summary>
            Gets the Microsoft Entra tenant ID.
            </summary>
            <returns>If the Entra tenant ID is a valid GUID, it will be returned in lowercase format and without brackets or parentheses (as per RFC4122 section 3), such as "f81d4fae-7dec-11d0-a765-00a0c91e6bf6". If it cannot be found, an empty string is returned.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Tenant.GetAadTenantDomainName:Text">
            <summary>
            Gets the Microsoft Entra tenant domain name.
            If the Microsoft Graph API cannot be reached, the error is displayed.
            </summary>
            <returns>The Microsoft Entra tenant Domain Name.</returns>
            <error>Cannot retrieve the Microsoft Entra tenant domain name.</error>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Tenant.GetCountryLetterCode:Code[2]">
            <summary>
            Gets the current Microsoft Entra tenant registered country letter code.
            Visit Microsoft Admin Cententer to view or edit Organizational Information.
            If the Microsoft Graph API cannot be reached, the error is displayed.
            </summary>
            <returns>Country or region abbreviation for the organization in ISO 3166-2 format.</returns>
            <error>Cannot retrieve the Microsoft Entra tenant country letter code.</error>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Tenant.GetPreferredLanguage:Code[2]">
            <summary>
            Gets the current Microsoft Entra tenant registered preferred language.
            Visit Microsoft Admin Cententer to view or edit Organizational Information.
            If the Microsoft Graph API cannot be reached, the error is displayed.
            </summary>
            <returns>The preferred language for the organization. Should follow ISO 639-1 Code; for example, en.</returns>
            <error>Cannot retrieve the Microsoft Entra tenant preferred language.</error>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Azure AD Graph User">
            <summary>
            Exposes functionality to retrieve and update Microsoft Entra users.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.GetGraphUser(Guid,DotNetTypeDeclaration::System#UserInfo@):Boolean">
            <summary>
            Gets the Microsoft Entra user with the given security ID.
            </summary>
            <param name="UserSecurityId">The user's security ID.</param>
            <param name="User">The Microsoft Entra user.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.GetGraphUser(Guid,Boolean,DotNetTypeDeclaration::System#UserInfo@):Boolean">
            <summary>
            Gets the Microsoft Entra user with the given security ID.
            </summary>
            <param name="UserSecurityId">The user's security ID.</param>
            <param name="ForceFetchFromGraph">Forces a graph call to get the latest details for the user.</param>
            <param name="User">The Microsoft Entra user.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.GetObjectId(Guid):Text">
            <summary>
            Retrieves the user’s unique identifier, which is its object ID, from Microsoft Entra.
            </summary>
            <param name="UserSecurityId">The user's security ID.</param>
            <returns>
            The object ID of the Microsoft Entra user, or an empty string if the user cannot be found.
            </returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.GetUserAuthenticationObjectId(Guid):Text">
            <summary>
            Gets the user's authentication object ID.
            </summary>
            <param name="UserSecurityId">The user's security ID.</param>
            <error>User with Security ID UserSecurityId does not exist.</error>
            <returns>The user's authentication object ID.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.TryGetUserAuthenticationObjectId(Guid,Text@):Boolean">
            <summary>
            Tries to get the user's authentication object ID.
            </summary>
            <param name="UserSecurityId">The user's security ID.</param>
            <param name="AuthenticationObjectId">Var parameter that hold the user's authention object ID.</param>
            <returns>True if the call was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.GetUser(Text,User@):Boolean">
            <summary>
            Gets the user from a given Authentication object ID.
            </summary>
            <param name="AuthenticationObjectID">The user's Authentication object ID.</param>
            <param name="User">The user that has provided Authentication object ID.</param>
            <returns>True if the user was found, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.IsUserDelegatedAdmin:Boolean">
            <summary>
            Returns whether the current user is Delegated Admin.
            </summary>
            <returns>True if the current user is Delegated Admin, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.IsUserDelegatedHelpdesk:Boolean">
            <summary>
            Returns whether the current user is Delegated Helpdesk.
            </summary>
            <returns>True if the current user is Delegated Helpdesk, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.UpdateUserFromAzureGraph(User@,DotNetTypeDeclaration::System#UserInfo@):Boolean">
            <summary>
            Updates the user record with information from Microsoft Entra.
            </summary>
            <param name="User">The user record to update.</param>
            <param name="AzureADUser">The Microsoft Entra user.</param>
            <returns>True if the user record has been updated. Otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.GetAuthenticationEmail(DotNetTypeDeclaration::System#UserInfo):Text[250]">
            <summary>
            Gets the authentication email of the provided Graph user.
            </summary>
            <remarks>Authentication email corresponds to userPrincipalName property on the Graph user.</remarks>
            <param name="GraphUserInfo">The Microsoft Entra user.</param>
            <returns>The authentication email of the provided Graph user. Can be used to assign to "Authentication Email" field on the User table.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.GetDisplayName(DotNetTypeDeclaration::System#UserInfo):Text[50]">
            <summary>
            Gets the display name of the provided Graph user.
            </summary>
            <remarks>Display name corresponds to displayName property on the Graph user.</remarks>
            <param name="GraphUserInfo">The Microsoft Entra user.</param>
            <returns>The display name of the provided Graph user. Can be used to assign to "User Name" field on the User table.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.GetContactEmail(DotNetTypeDeclaration::System#UserInfo):Text[250]">
            <summary>
            Gets the contact email of the provided Graph user.
            </summary>
            <remarks>Contact email corresponds to Mail property on the Graph user.</remarks>
            <param name="GraphUserInfo">The Microsoft Entra user.</param>
            <returns>The contact email of the provided Graph user. Can be used to assign to "Contact Email" field on the User table.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.GetFullName(DotNetTypeDeclaration::System#UserInfo):Text[80]">
            <summary>
            Gets the full name of the provided Graph user.
            </summary>
            <remarks>Full name is composed from the combination of givenName and surname properties on the Graph user.</remarks>
            <param name="GraphUserInfo">The Microsoft Entra user.</param>
            <returns>The full name of the provided Graph user. Can be used to assign to "Full Name" field on the User table.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.GetPreferredLanguageID(DotNetTypeDeclaration::System#UserInfo):Integer">
            <summary>
            Gets the preferred language ID of the provided Graph user.
            </summary>
            <remarks>
            Preferred language ID is derived from preferredLanguage property on the Graph user.
            If the preferred language is not set or it is set to a language that is not supported in Business Central, the function returns 0.
            </remarks>
            <param name="GraphUserInfo">The Microsoft Entra user.</param>
            <returns>The preferred language ID of the provided Graph user. Can be used to set the preferred language using the Language module.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD Graph User.EnsureAuthenticationEmailIsNotInUse(Text)">
            <summary>
            Ensures that an email address specified for authorization is not already in use by another database user.
            If it is, all the database users with this authentication email address are updated and their email
            addresses are updated the ones that are specified in Microsoft Entra.
            </summary>
            <param name="AuthenticationEmail">The authentication email address.</param>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Azure AD User Management">
            <summary>
            Exposes functionality to manage Microsoft Entra users.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD User Management.CreateNewUsersFromAzureAD">
            <summary>
            Retrieves all the users from Microsoft Entra. If the users already exist in the database,
            they are updated to match the ones from Microsoft Entra; otherwise new users are inserted in the database.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD User Management.CreateNewUserFromGraphUser(DotNetTypeDeclaration::System#UserInfo)">
            <summary>
            Creates a new user from a Microsoft Entra user.
            </summary>
            <param name="GraphUserInfo">The Microsoft Entra user.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD User Management.SynchronizeLicensedUserFromDirectory(Text):Boolean">
            <summary>
            Synchronizes a user with the Microsoft Entra user corresponding to the authentication
            email that is passed as a parameter. If the user record does not exist, it gets created.
            </summary>
            <param name="AuthenticationEmail">The user's authentication email.</param>
            <returns>True if there is a user in Microsoft Entra corresponding to the authentication email; otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD User Management.SynchronizeAllLicensedUsersFromDirectory">
            <summary>
            Synchronizes all the users from the database with the ones from Microsoft Entra.
            Microsoft Entra users that do not exist in the database are created.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD User Management.IsUserTenantAdmin:Boolean">
            <summary>
            Checks if the user is a tenant admin.
            </summary>
            <returns>True if the user is a tenant admin; otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD User Management.ArePermissionsCustomized(Guid):Boolean">
            <summary>
            Checks whether custom permissions are assigned to the user.
            </summary>
            <param name="UserSecurityId">The security ID of the user to check for.</param>
            <returns>True if the user with the given user security ID has custom permissions; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD User Management.IsUserDelegated(Guid):Boolean">
            <summary>
            Checks if the user is a delegated user.
            </summary>
            <returns>True if the user is a delegated user; otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Azure AD User Management.OnRestoreDefaultPermissions(Guid)">
            <summary>
            Integration event, raised from "Azure AD User Update Wizard" page when the changes are applied.
            </summary>
            <param name="UserSecurityID">The ID of the user whose permission sets will be restored.</param>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Microsoft 365 License">
            <summary>
            Provides functionality to operate the Microsoft 365 License.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Microsoft 365 License.AssignMicrosoft365ReadPermission(Boolean)">
            <summary>
            Assign D365 Read Permission.
            </summary>
            <param name="ShowNotification">Show notification about license information regarding users in BC.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Microsoft 365 License.OpenBCAdminCenter">
            <summary>
            Opens the Business Central admin center.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Microsoft 365 License.OpenM365AdminCenter">
            <summary>
            Opens the M365 admin center.
            </summary>
        </member>
        <member name="O:Table::System#Azure#Identity#Permission Set In Plan Buffer">
            <summary>
            The container used for fetching permission sets associated with plans.
            </summary>
            <remarks>
            Default plan permission sets will never have the "Company Name" filled in,
            the actual company name assigned to users will be the first sign-in company.
            </remarks>
        </member>
        <member name="O:Codeunit::System#Azure#Identity#Plan Configuration">
            <summary>
            Provides functionality to operation with plan configurations and customized permission sets related to a plan.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.IsCustomized(Guid):Boolean">
            <summary>
            Checks if a plan configuration was customized.
            </summary>
            <param name="PlanId">The ID of the plan for which to check.</param>
            <returns>True if the plan configuration was customized; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.AddCustomPermissionSetToPlan(Guid,Code[20],Guid,Option,Text[30])">
            <summary>
            Adds a permission set to a plan.
            </summary>
            <param name="PlanId">The ID of the plan.</param>
            <param name="RoleId">The ID of the role(permission set).</param>
            <param name="AppId">The ID of the app from which the permission set originates.</param>
            <param name="Scope">The scope of the permission set.</param>
            <param name="Company">The company for which to add the permission set.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.RemoveCustomPermissionSetFromPlan(Guid,Code[20],Guid,Option,Text)">
            <summary>
            Removes a permissions set from a plan.
            </summary>
            <param name="PlanId">The ID of the plan.</param>
            <param name="RoleId">The ID of the role(permission set).</param>
            <param name="AppId">The ID of the app from which the permission set originates.</param>
            <param name="Scope">The scope of the permission set.</param>
            <param name="Company">The company for which to remove the permission set.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.AssignCustomPermissionsToUser(Guid,Guid)">
            <summary>
            Assigns all custom permission sets for a plan to a user.
            </summary>
            <param name="PlanId">The ID of the plan for which to look for custom permissions.</param>
            <param name="UserSecurityId">The security ID for the user to whom to assign the custom permission sets.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.RemoveCustomPermissionsFromUser(Guid,Guid)">
            <summary>
            Removes custom permission sets for a plan from a user.
            If the permission set is also associated with another plan, it is not deleted.
            </summary>
            <param name="PlanId">The ID of the plan for which to look for custom permissions.</param>
            <param name="UserSecurityId">The security ID for the user from whom to remove the custom permission sets.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.GetCustomPermissions(Permission Set In Plan Buffer@)">
            <summary>
            Gets the list of all custom permission sets for a plan.
            </summary>
            <param name="PermissionSetInPlanBuffer">The resulting table containing the custom permission sets.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.AddDefaultPermissionSetToPlan(Guid,Code[20],Guid,Option)">
            <summary>
            Adds a permission set to a plan.
            </summary>
            <param name="PlanId">The ID of the plan.</param>
            <param name="RoleId">The ID of the role(permission set).</param>
            <param name="AppId">The ID of the app from which the permission set originates.</param>
            <param name="Scope">The scope of the permission set.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.RemoveDefaultPermissionSetFromPlan(Guid,Code[20],Guid,Option)">
            <summary>
            Removes a permissions set from a plan.
            </summary>
            <param name="PlanId">The ID of the plan.</param>
            <param name="RoleId">The ID of the role(permission set).</param>
            <param name="AppId">The ID of the app from which the permission set originates.</param>
            <param name="Scope">The scope of the permission set.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.AssignDefaultPermissionsToUser(Guid,Guid,Text[30])">
            <summary>
            Assigns all default permission sets for a plan to a user.
            </summary>
            <param name="PlanId">The ID of the plan for which to look for default permissions.</param>
            <param name="UserSecurityId">The security ID for the user to whom to assign the default permission sets.</param>
            <param name="Company">The company for which to assign the permission sets.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.RemoveDefaultPermissionsFromUser(Guid,Guid)">
            <summary>
            Removes default permission sets for a plan from a user.
            If the permission set is also associated with another plan, it is not deleted.
            </summary>
            <param name="PlanId">The ID of the plan for which to look for default permissions.</param>
            <param name="UserSecurityId">The security ID for the user from whom to remove the default permission sets.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.GetDefaultPermissions(Permission Set In Plan Buffer@)">
            <summary>
            Gets the list of all default permission sets for a plan.
            </summary>
            <param name="PermissionSetInPlanBuffer">The resulting table containing the default permission sets.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Identity#Plan Configuration.VerifyUserHasRequiredPermissionSet(Code[20],Guid,Option,Text)">
            <summary>
            Checks whether the current user has enough permissions to assign or de-assign a permission set from plan.
            </summary>
            <error>When the user doesn't have neither SUPER, not SECURITY</error>
            <error>When the user has either SUPER or SECURITY, but does not have the permissions set assigned.</error>
            <param name="RoleId">The ID of the role(permission set).</param>
            <param name="AppId">The ID of the app from which the permission set originates.</param>
            <param name="Scope">The scope of the permission set.</param>
            <param name="Company">The company for which to check.</param>
        </member>
        <member name="O:Page::System#Azure#Identity#Plan Configuration Card">
            <summary>
            Card page to show the permissions for a plan configuration.
            </summary>
        </member>
        <member name="O:Page::System#Azure#Identity#Plan Configuration List">
            <summary>
            List page to show all available plan configurations.
            </summary>
        </member>
        <member name="O:Page::System#Azure#Identity#Plan Configurations Part">
            <summary>
            List part page to integrate the plan configurations.
            </summary>
        </member>
        <member name="O:PageExtension::System#Azure#Identity#Plan User Details">
            <summary>
            A page extension that adds details about plans to the User Details page
            </summary>
        </member>
        <member name="O:TableExtension::System#Azure#Identity#Plan User Details">
            <summary>
            Adds information about user plans to the user details module.
            </summary>
        </member>
        <member name="F:TableExtension::System#Azure#Identity#Plan User Details.User Plans[2048]">
            <summary>
            A semicolon-separated list of user's plan names
            </summary>
        </member>
        <member name="F:TableExtension::System#Azure#Identity#Plan User Details.Is Delegated">
            <summary>
            True if the user has Delegated Admin or Delegated Helpdesk plans, false otherwise.
            </summary>
        </member>
        <member name="F:TableExtension::System#Azure#Identity#Plan User Details.Has M365 Plan">
            <summary>
            True if the user has a Microsoft 365 plan, false otherwise.
            </summary>
        </member>
        <member name="F:TableExtension::System#Azure#Identity#Plan User Details.Has Essential Plan">
            <summary>
            True if the user an Essential, false otherwise.
            </summary>
        </member>
        <member name="F:TableExtension::System#Azure#Identity#Plan User Details.Has Premium Plan">
            <summary>
            True if the user has a Premium plan, false otherwise.
            </summary>
        </member>
        <member name="F:TableExtension::System#Azure#Identity#Plan User Details.Has Essential Or Premium Plan">
            <summary>
            True if the user has any "full" licenses, such as Essential or Premium, false otherwise.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Identity#Azure AD Permission Change Action">
            <summary>
            The types of the action to take in response to permission conflicts arising out of changes to plans in Office users.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#Azure AD Permission Change Action.Select">
            <summary>
            Represents the case when either no action is needed or no action has been provided by the user.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#Azure AD Permission Change Action.Keep Current">
            <summary>
            Represents the case when the user wants to keep the current configuration.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#Azure AD Permission Change Action.Append">
            <summary>
            Represents the case when the user wants to append a new configuration to one that already exists.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Identity#Azure AD Update Type">
            <summary>Types of updates from users in the Office 365.</summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#Azure AD Update Type.New">
            <summary>
            Represents a value that is present in the Office 365 portal but not in Business Central.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#Azure AD Update Type.Change">
            <summary>
            Represents a value that is different in the Office 365 portal compared to Business Central.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#Azure AD Update Type.Remove">
            <summary>
            Represents a value that is removed in the Office 365 portal but present in Business Central.
            </summary>
        </member>
        <member name="O:Table::System#Azure#Identity#Azure AD User Update Buffer">
            <summary>
            Stores information about properties changed for users in Office 365 in-memory.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Identity#Azure AD User Update Entity">
            <summary>
            The entities that are updated in Business Central from Office 365.
            </summary>
            <remarks>
            The order in which the update is processed must be in the following order.
            Authentication email must be updated before Plan, and Plan must be updated before Language ID.
            </remarks>
        </member>
        <member name="E:Enum::System#Azure#Identity#Azure AD User Update Entity.Authentication Email">
            <summary>
            Represents an update to the authentication email property of a user.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#Azure AD User Update Entity.Contact Email">
            <summary>
            Represents an update to the contact email property of a user.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#Azure AD User Update Entity.Full Name">
            <summary>
            Represents an update to the full name property of a user.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#Azure AD User Update Entity.Plan">
            <summary>
            Represents an update to the assigned plans for a user.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Identity#Azure AD User Update Entity.Language ID">
            <summary>
            Represents an update to the language setting of a user.
            </summary>
        </member>
        <member name="O:Page::System#Azure#Identity#Azure AD User Updates Part">
            <summary>
            A list part page to view and remove synchronized user updates.
            </summary>
        </member>
        <member name="O:Page::System#Azure#Identity#Azure AD User Update Wizard">
            <summary>
            Administrators can use this page to synchronize information about users from Microsoft 365 to Business Central.
            </summary>
        </member>
        <member name="O:Page::System#Azure#Identity#Custom Permission Set In Plan">
            <summary>
            List part that holds the custom permission sets assigned to a plan.
            </summary>
        </member>
        <member name="O:Page::System#Azure#Identity#Default Permission Set In Plan">
            <summary>
            List part that holds the default permission sets assigned to a plan.
            </summary>
        </member>
        <member name="O:Table::System#Azure#Storage#Files#AFS Directory Content">
            <summary>
            Holds information about directory content in a storage account.
            </summary>
        </member>
        <member name="O:Codeunit::System#Azure#Storage#Files#AFS File Client">
            <summary>
            Provides functionality to access the Azure File Storage.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.Initialize(Text,Text,Interface::System#Azure#Storage#Storage Service Authorization)">
            <summary>
            Initializes the AFS Client.
            </summary>
            <param name="StorageAccount">The name of the storage account to use.</param>
            <param name="FileShare">The name of the file share to use.</param>
            <param name="Authorization">The authorization to use.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.Initialize(Text,Text,Interface::System#Azure#Storage#Storage Service Authorization,Enum::System#Azure#Storage#Storage Service API Version)">
            <summary>
            Initializes the AFS Client.
            </summary>
            <param name="StorageAccount">The name of the storage account to use.</param>
            <param name="FileShare">The name of the file share to use.</param>
            <param name="Authorization">The authorization to use.</param>
            <param name="APIVersion">The API Version to use.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.SetBaseUrl(Text)">
            <summary>
            The base URL to use when constructing the final URI.
            If not set, the base URL is https://%1.file.core.windows.net where %1 is the storage account name.
            </summary>
            <remarks>Use %1 as a placeholder for the storage account name.</remarks>
            <param name="BaseUrl">A valid URL string</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.CreateFile(Text,InStream):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Creates a file in the file share.
            This does not fill in the file content, it only initializes the file.
            </summary>
            <param name="FilePath">The path where the file will be created.</param>
            <param name="InStream">The file content, only used to check file size.</param>
            <returns>An operation response object.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.CreateFile(Text,InStream,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Creates a file in the file share.
            This does not fill in the file content, it only initializes the file.
            </summary>
            <param name="FilePath">The path where the file will be created.</param>
            <param name="InStream">The file content, only used to check file size.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.CreateFile(Text,Integer):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Creates a file in the file share.
            This does not fill in the file content, it only initializes the file.
            </summary>
            <param name="FilePath">The path where the file will be created.</param>
            <param name="FileSize">The size of the file to initialize, in bytes.</param>
            <returns>An operation response object.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.CreateFile(Text,Integer,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Creates a file in the file share.
            This does not fill in the file content, it only initializes the file.
            </summary>
            <param name="FilePath">The path where the file will be created.</param>
            <param name="FileSize">The size of the file to initialize, in bytes.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.GetFileAsFile(Text):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Receives a file as a File from a file share.
            The file will be downloaded through the browser.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.GetFileAsFile(Text,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Receives a file as a File from a file share.
            The file will be downloaded through the browser.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.GetFileAsStream(Text,InStream@):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Receives a file as a stream from a file share.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="TargetInStream">The result instream containing the content of the file.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.GetFileAsStream(Text,InStream@,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Receives a file as a stream from a file share.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="TargetInStream">The result instream containing the  content of the file.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.GetFileAsText(Text,Text@):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Receives a file as a text from a file share.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="TargetText">The result text containing the content of the file.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.GetFileAsText(Text,Text@,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Receives a file as a text from a file share.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="TargetText">The result text containing the content of the file.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.GetFileMetadata(Text,Dictionary of [Text,Text]@):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Receives file metadata as dictionary from a file share.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="TargetMetadata">The result dictionary containing the metadata of the file in the form of metadata key and a value.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.GetFileMetadata(Text,Dictionary of [Text,Text]@,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Receives file metadata as dictionary from a file share.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="TargetMetadata">The result dictionary containing the metadata of the file in the form of metadata key and a value.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.SetFileMetadata(Text,Dictionary of [Text,Text]):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Sets the file metadata.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="Metadata">The dictionary containing the metadata of the file in the form of metadata key and a value.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.SetFileMetadata(Text,Dictionary of [Text,Text]@,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Sets the file metadata.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="Metadata">The dictionary containing the metadata of the file in the form of metadata key and a value.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.PutFileUI:Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Uploads a file to the file share.
            User will be prompted to specify the file to send.
            </summary>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.PutFileUI(Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Uploads a file to the file share.
            User will be prompted to specify the file to send.
            </summary>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.PutFileStream(Text,InStream@):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Uploads a file to the file share from instream.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="SourceInStream">The source instream containing the content of the file.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.PutFileStream(Text,InStream@,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Uploads a file to the file share from instream.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="SourceInStream">The source instream containing the content of the file.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.PutFileText(Text,Text):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Uploads a file to the file share from text.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="SourceText">The source text containing the content of the file.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.PutFileText(Text,Text,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Uploads a file to the file share from text.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="SourceText">The source text containing the content of the file.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.DeleteFile(Text):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Deletes a file from the file share.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.DeleteFile(Text,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Deletes a file from the file share.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.ListDirectory(Text[2048],AFS Directory Content@):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Lists files and directories from the file share.
            </summary>
            <param name="DirectoryPath">The path of the directory to list.</param>
            <param name="AFSDirectoryContent">The result collection with contents of the directory (temporary)</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.ListDirectory(Text[2048],AFS Directory Content@,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Lists files and directories from the file share.
            </summary>
            <param name="DirectoryPath">The path of the directory to list.</param>
            <param name="AFSDirectoryContent">The result collection with contents of the directory (temporary)</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.ListDirectory(Text[2048],Boolean,AFS Directory Content@):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Lists files and directories from the file share.
            </summary>
            <param name="DirectoryPath">The path of the directory to list.</param>
            <param name="PreserveDirectoryContent">Specifies if the result collection should be cleared before filling it with the response data.</param>
            <param name="AFSDirectoryContent">The result collection with contents of the directory (temporary)</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.ListDirectory(Text[2048],Boolean,AFS Directory Content@,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Lists files and directories from the file share.
            </summary>
            <param name="DirectoryPath">The path of the directory to list.</param>
            <param name="PreserveDirectoryContent">Specifies if the result collection should be cleared before filling it with the response data.</param>
            <param name="AFSDirectoryContent">The result collection with contents of the directory (temporary)</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.CreateDirectory(Text):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Creates directory on the file share.
            </summary>
            <param name="DirectoryPath">The path of the directory to create.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.CreateDirectory(Text,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Creates directory on the file share.
            </summary>
            <param name="DirectoryPath">The path of the directory to create.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.DeleteDirectory(Text):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Deletes an empty directory from the file share.
            </summary>
            <param name="DirectoryPath">The path of the directory to delete.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.DeleteDirectory(Text,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Deletes an empty directory from the file share.
            </summary>
            <param name="DirectoryPath">The path of the directory to delete.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.CopyFile(Text,Text):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Copies a file on the file share.
            </summary>
            <param name="SourceFileURI">The URI to the source file. If the source file is on a different share than the destination file, the URI needs to be authorized.</param>
            <param name="DestinationFilePath">The path where to destination file should be created.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.CopyFile(Text,Text,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Copies a file on the file share.
            </summary>
            <param name="SourceFileURI">The URI to the source file. If the source file is on a different share than the destination file, the URI needs to be authorized.</param>
            <param name="DestinationFilePath">The path where to destination file should be created.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.AbortCopyFile(Text,Text):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Stops a file copy operation that is in progress.
            </summary>
            <param name="DestinationFilePath">The path where to destination file should be created.</param>
            <param name="CopyID">The ID of the copy opeartion to abort.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.AbortCopyFile(Text,Text,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Stops a file copy operation that is in progress.
            </summary>
            <param name="DestinationFilePath">The path where to destination file should be created.</param>
            <param name="CopyID">The ID of the copy opeartion to abort.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.ListHandles(Text,AFS Handle@):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Lists all the open handles to the file.
            </summary>
            <param name="Path">The path to the file.</param>
            <param name="AFSHandle">The result collection containing all the handles to the file (temporary).</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.ListHandles(Text,AFS Handle@,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Lists all the open handles to the file.
            </summary>
            <param name="Path">The path to the file.</param>
            <param name="AFSHandle">The result collection containing all the handles to the file (temporary).</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.RenameFile(Text,Text):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Renames a file on the file share.
            </summary>
            <param name="SourceFilePath">The path to the source file.</param>
            <param name="DestinationFilePath">The path to which the file will be renamed.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.RenameFile(Text,Text,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Renames a file on the file share.
            </summary>
            <param name="SourceFilePath">The path to the source file.</param>
            <param name="DestinationFilePath">The path to which the file will be renamed.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.AcquireLease(Text,Guid,Guid@):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Requests a new lease. If the file does not have an active lease, the file service creates a lease on the file.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="ProposedLeaseId">The proposed id for the new lease.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation reponse object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.AcquireLease(Text,Guid,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters,Guid@):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Requests a new lease. If the file does not have an active lease, the file service creates a lease on the file.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="ProposedLeaseId">The proposed id for the new lease.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation reponse object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.ChangeLease(Text,Guid,Guid@):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Changes a lease id to a new lease id.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="ProposedLeaseId">The proposed id for the new lease.</param>
            <param name="LeaseId">Previous lease id. Will be replaced by a new lease id if the request is successful.</param>
            <returns>Return value of type Codeunit "AFS Operation Response".</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.ChangeLease(Text,Guid,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters,Guid@):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Changes a lease id to a new lease id.
            </summary>
            <param name="FilePath">The path to the file.</param>
            <param name="ProposedLeaseId">The proposed id for the new lease.</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <param name="LeaseId">Previous lease id. Will be replaced by a new lease id if the request is successful.</param>
            <returns>Return value of type Codeunit "AFS Operation Response".</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.ReleaseLease(Text,Guid):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Releases a lease on a File if it is no longer needed so that another client may immediately acquire a lease against the file.
            </summary>
            <param name="FilePath">The path to the file.</param>  
            <param name="LeaseId">The Guid for the lease that should be released</param>
            <returns>An operation reponse object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.ReleaseLease(Text,Guid,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Releases a lease on a File if it is no longer needed so that another client may immediately acquire a lease against the file.
            </summary>
            <param name="FilePath">The path to the file.</param>  
            <param name="LeaseId">The Guid for the lease that should be released</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation reponse object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.BreakLease(Text,Guid):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Breaks a lease on a file.
            </summary>
            <param name="FilePath">The path to the file.</param>  
            <param name="LeaseId">The Guid for the lease that should be broken</param>
            <returns>An operation reponse object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS File Client.BreakLease(Text,Guid,Codeunit::System#Azure#Storage#Files#AFS Optional Parameters):Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Breaks a lease on a file.
            </summary>
            <param name="FilePath">The path to the file.</param>  
            <param name="LeaseId">The Guid for the lease that should be broken</param>
            <param name="AFSOptionalParameters">Optional parameters to pass with the request.</param>
            <returns>An operation reponse object</returns>
        </member>
        <member name="O:Table::System#Azure#Storage#Files#AFS Handle">
            <summary>
            Holds information about file handles that are currently open.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Operation Payload Impl#.ConstructUri:Text">
            <summary>
            Creates the Uri for this object, based on given values
            </summary>
            <returns>An Uri (as Text) for this API Operation</returns>
        </member>
        <member name="O:Codeunit::System#Azure#Storage#Files#AFS Operation Response">
            <summary>
            Stores the response of an AFS client operation.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Operation Response.IsSuccessful:Boolean">
            <summary>
            Checks whether the operation was successful.
            </summary>    
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Operation Response.GetError:Text">
            <summary>
            Gets the error (if any) of the response.
            </summary>
            <returns>Text representation of the error that occurred during the operation.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Operation Response.GetHeaders:HttpHeaders">
            <summary>
            Gets the HttpHeaders (if any) of the response.
            </summary>
            <returns>HttpHeaders of the response.</returns>
        </member>
        <member name="O:Codeunit::System#Azure#Storage#Files#AFS Operation Response Impl#">
            <summary>
            Stores the response of an AFS client operation.
            </summary>
        </member>
        <member name="O:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters">
            <summary>
            Holds procedures to format headers and parameters to be used in requests.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.Range(Integer,Integer)">
            <summary>
            Sets the value for 'x-ms-range' HttpHeader for a request.
            </summary>
            <param name="BytesStartValue">Integer value specifying the Bytes start range value</param>
            <param name="BytesEndValue">Integer value specifying the Bytes end range value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.Write(Enum::System#Azure#Storage#Files#AFS Write)">
            <summary>
            Sets the value for 'x-ms-write' HttpHeader for a request.
            </summary>
            <param name="Value">Enum "AFS Write" value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.LeaseId(Guid)">
            <summary>
            Sets the value for 'x-ms-lease-id' HttpHeader for a request.
            </summary>
            <param name="Value">Guid value specifying the LeaseID</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.LeaseAction(Enum::System#Azure#Storage#Files#AFS Lease Action)">
            <summary>
            Sets the value for 'x-ms-lease-action' HttpHeader for a request.
            </summary>
            <param name="Value">Enum "AFS Lease Action" value specifying the LeaseAction</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.LeaseDuration(Integer)">
            <summary>
            Sets the value for 'x-ms-lease-duration' HttpHeader for a request.
            </summary>
            <param name="Value">Integer value specifying the LeaseDuration in seconds</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.ProposedLeaseId(Guid)">
            <summary>
            Sets the value for 'x-ms-proposed-lease-id' HttpHeader for a request.
            </summary>
            <param name="Value">Guid value specifying the ProposedLeaseId in seconds</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.ClientRequestId(Text)">
            <summary>
            Sets the value for 'x-ms-client-request-id' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FileLastWriteTime(Enum::System#Azure#Storage#Files#AFS File Last Write Time)">
            <summary>
            Sets the value for 'x-ms-file-last-write-time' HttpHeader for a request.
            </summary>
            <param name="Value">Enum "AFS File Last Write Time" value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FileRequestIntent(Text)">
            <summary>
            Sets the value for 'x-ms-file-request-intent' HttpHeader for a request, 'backup' is an acceptable value.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FilePermission(Text)">
            <summary>
            Sets the value for 'x-ms-file-permission' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FilePermissionKey(Text)">
            <summary>
            Sets the value for 'x-ms-file-permission-key' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FileAttributes(List of [AFS File Attribute])">
            <summary>
            Sets the value for 'x-ms-file-attributes' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FileCreationTime(DateTime)">
            <summary>
            Sets the value for 'x-ms-file-creation-time' HttpHeader for a request.
            </summary>
            <param name="Value">Datetime of the file creation</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FileLastWriteTime(DateTime)">
            <summary>
            Sets the value for 'x-ms-file-last-write-time' HttpHeader for a request.
            </summary>
            <param name="Value">Datetime of the file last write time</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FileChangeTime(DateTime)">
            <summary>
            Sets the value for 'x-ms-file-change-time' HttpHeader for a request.
            </summary>
            <param name="Value">Datetime of the file last change time</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.Meta(Text,Text)">
            <summary>
            Sets the value for 'x-ms-meta-name' HttpHeader for a request. name should adhere to C# identifiers naming convention.
            </summary>
            <param name="Key">Text value specifying the metadata name key</param>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FilePermissionCopyMode(Enum::System#Azure#Storage#Files#AFS File Permission Copy Mode)">
            <summary>
            Sets the value for 'x-ms-file-permission-copy-mode' HttpHeader for a request.
            </summary>
            <param name="Value">Enum "AFS File Permission Copy Mode" value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.CopySource(Text)">
            <summary>
            Sets the value for 'x-ms-copy-source' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.AllowTrailingDot(Boolean)">
            <summary>
            Sets the value for 'x-ms-allow-trailing-dot' HttpHeader for a request.
            </summary>
            <param name="Value">Boolean value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FileRenameReplaceIfExists(Boolean)">
            <summary>
            Sets the value for 'x-ms-file-rename-replace-if-exists' HttpHeader for a request.
            </summary>
            <param name="Value">Boolean value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FileRenameIgnoreReadOnly(Boolean)">
            <summary>
            Sets the value for 'x-ms-file-rename-ignore-readonly' HttpHeader for a request.
            </summary>
            <param name="Value">Boolean value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.SourceLeaseId(Guid)">
            <summary>
            Sets the value for 'x-ms-source-lease-id' HttpHeader for a request.
            </summary>
            <param name="Value">Guid value specifying the SourceLeaseID</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.DestinationLeaseId(Guid)">
            <summary>
            Sets the value for 'x-ms-destination-lease-id' HttpHeader for a request.
            </summary>
            <param name="Value">Guid value specifying the DestinationLeaseID</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FileCopyIgnoreReadOnly(Boolean)">
            <summary>
            Sets the value for 'x-ms-file-copy-ignore-readonly' HttpHeader for a request.
            </summary>
            <param name="Value">Boolean value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FileCopySetArchive(Boolean)">
            <summary>
            Sets the value for 'x-ms-file-copy-set-archive' HttpHeader for a request.
            </summary>
            <param name="Value">Boolean value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.FileExtendedInfo(Boolean)">
            <summary>
            Sets the value for 'x-ms-file-extended-info' HttpHeader for a request.
            </summary>
            <param name="Value">Boolean value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.RangeGetContentMD5(Boolean)">
            <summary>
            Sets the value for 'x-ms-range-get-content-md5' HttpHeader for a request.
            </summary>
            <param name="Value">Boolean value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.Recursive(Boolean)">
            <summary>
            Sets the value for 'x-ms-recursive' HttpHeader for a request.
            </summary>
            <param name="Value">Boolean value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.Timeout(Integer)">
            <summary>
            Sets the optional timeout value for the request.
            </summary>
            <param name="Value">Timeout in seconds. Most operations have a max. limit of 30 seconds. For more Information see: https://go.microsoft.com/fwlink/?linkid=2210591</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.Prefix(Text)">
            <summary>
            Filters the results to return only blobs whose names begin with the specified prefix.
            </summary>
            <param name="Value">Prefix to search for</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.ShareSnapshot(DateTime)">
            <summary>
            Specifies the share snapshot to query for the list of files and directories.
            </summary>
            <param name="Value">Datetime of the snapshot to query</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.Marker(Text)">
            <summary>
            A string value that identifies the portion of the list to be returned with the next list operation.
            </summary>
            <param name="Value">Text marker that was returned in previous operation</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.MaxResults(Integer)">
            <summary>
            Specifies the maximum number of files or directories to return
            </summary>
            <param name="Value">Max. number of results to return. Must be positive, must not be greater than 5000</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters.Include(List of [AFS Property])">
            <summary>
            Specifies one or more properties to include in the response.
            </summary>
            <param name="Value">List of properties to include.</param>
        </member>
        <member name="O:Codeunit::System#Azure#Storage#Files#AFS Optional Parameters Impl#">
            <summary>
            Holds procedures to format headers and parameters to be used in requests.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#Files#AFS File Attribute">
            <summary>
            Describes possible values for file attributes.
            For the list of possible values see: https://learn.microsoft.com/en-us/rest/api/storageservices/create-file#file-system-attributes
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Attribute.Read Only">
            <summary>
            Indicates that the file is read-only.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Attribute.Hidden">
            <summary>
            Indicates that the file is hidden, and thus is not included in an ordinary directory listing.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Attribute.System">
            <summary>
            Indicates that the file is used by the operating system.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Attribute.None">
            <summary>
            Indicates that the there are no attributes.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Attribute.Archive">
            <summary>
            Indicates that the file is an archive file. Applications use this attribute to mark files for backup or removal.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Attribute.Temporary">
            <summary>
            Indicates that the file is temporary. File systems attempt to keep all of the data in memory for quicker access rather than flushing the data back to mass storage. A temporary file should be deleted by the application as soon as it is no longer needed.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Attribute.Offline">
            <summary>
            Indicates that the file is offline. The data of the file is not immediately available.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Attribute.Not Content Indexed">
            <summary>
            Indicates that the file will not be indexed by the content indexing service.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Attribute.No Scrub Data">
            <summary>
            Indicates that the file should not be read by background data integrity scanner.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#Files#AFS File Last Write Time">
            <summary>
            Describes possible values for File Last Write Time header.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Last Write Time.Now">
            <summary>
            The file last write time is set to the current time.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Last Write Time.Preserve">
            <summary>
            The file last write time is preserved.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#Files#AFS File Permission Copy Mode">
            <summary>
            Describes possible values for File Permission Copy Mode header.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Permission Copy Mode.Source">
            <summary>
            Copy file permissions from source to destination.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Permission Copy Mode.Override">
            <summary>
            Override file permissions on destination with permissions from the request.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#Files#AFS File Resource Type">
            <summary>
            Indicator of what type the resource is.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Resource Type.File">
            <summary>
             Indicates entry is of file type.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS File Resource Type.Directory">
            <summary>
             Indicates entry is of directory type.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#Files#AFS Lease Action">
            <summary>
            Defines possible actions for opearations relating to leases.
            See more: https://learn.microsoft.com/en-us/rest/api/storageservices/lease-file
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS Lease Action.Acquire">
            <summary>
            Requests a new lease.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS Lease Action.Renew">
            <summary>
            Renews the lease.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS Lease Action.Change">
            <summary>
            Changes the lease ID of an active lease.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS Lease Action.Release">
            <summary>
            Releases the lease
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS Lease Action.Break">
            <summary>
            Breaks the lease, if the file has an active lease
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#Files#AFS Operation">
            <summary>
            Defines possible operations to the azure file share API.
            Operations are divided into operations on:
            - file (https://learn.microsoft.com/en-us/rest/api/storageservices/operations-on-files)
            - directory (https://learn.microsoft.com/en-us/rest/api/storageservices/operations-on-directories)
            - file share (https://learn.microsoft.com/en-us/rest/api/storageservices/operations-on-shares--file-service-)
            - file service (https://learn.microsoft.com/en-us/rest/api/storageservices/operations-on-the-account--file-service-)
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#Files#AFS Property">
            <summary>
            Describes possible values of the additional AFS properties.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS Property.Timestamps">
            <summary>
            Indicates the the Timestamps should be included in the response.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS Property.ETag">
            <summary>
            Indicates the the ETag should be included in the response.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS Property.Attributes">
            <summary>
            Indicates the the Attributes should be included in the response.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS Property.PermissionKey">
            <summary>
            Indicates the the PermissionKey should be included in the response.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#Files#AFS Write">
            <summary>
            Describes possible values for the Write header.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS Write.Update">
            <summary>
            Indicates that the data should be updated.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#Files#AFS Write.Clear">
            <summary>
            Indicates that the data should be cleared.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS HttpContent Helper.ContentSet(HttpContent):Boolean">
            <summary>
            Checks if the HttpContent is empty
            </summary>
            <param name="HttpContent">The HttpContent to check.</param>
            <returns>true if the content is not empty, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS HttpContent Helper.GetContentLength(InStream@):Integer">
            <summary>
            Retrieves the length of the given stream (used for "HttpContent-Length" header in PUT-operations)
            </summary>
            <param name="SourceInStream">The InStream for Request Body.</param>
            <returns>The length of the current stream</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS HttpContent Helper.GetContentLength(Text):Integer">
            <summary>
            Retrieves the length of the given stream (used for "HttpContent-Length" header in PUT-operations)
            </summary>
            <param name="SourceText">The Text for Request Body.</param>
            <returns>The length of the current stream</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Files#AFS HttpContent Helper.GetMaxRange:Integer">
            <summary>
            Retrieves the max range available to update with PutRange request.
            </summary>
            <returns>The max range available to update.</returns>
        </member>
        <member name="O:Codeunit::System#Azure#Storage#ABS Blob Client">
            <summary>
            Provides functionality for using operations on blobs in Azure Blob storage.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.Initialize(Text,Text,Interface::System#Azure#Storage#Storage Service Authorization)">
            <summary>
            Initializes the Azure Blob storage client.
            </summary>
            <param name="StorageAccount">The name of Storage Account to use.</param>
            <param name="Container">The name of the container to use.</param>
            <param name="Authorization">The authorization to use.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.Initialize(Text,Text,Interface::System#Azure#Storage#Storage Service Authorization,Enum::System#Azure#Storage#Storage Service API Version)">
            <summary>
            Initializes the Azure BLOB Storage BLOB client.
            </summary>
            <param name="StorageAccount">The name of Storage Account to use.</param>
            <param name="Container">The name of the container to use.</param>
            <param name="Authorization">The authorization to use.</param>
            <param name="APIVersion">The used API version to use.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.SetBaseUrl(Text)">
            <summary>
            The base URL to use when constructing the final URI.
            If not set, the base URL is https://%1.blob.core.windows.net where %1 is the storage account name.
            </summary>
            <remarks>Use %1 as a placeholder for the storage account name.</remarks>
            <param name="BaseUrl">A valid URL string</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.ListBlobs(ABS Container Content@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Lists the blobs in a specific container.
            see: https://go.microsoft.com/fwlink/?linkid=2210588
            </summary>
            <param name="ABSContainerContent">Collection of the result (temporary record).</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.ListBlobs(ABS Container Content@,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Lists the blobs in a specific container.
            see: https://go.microsoft.com/fwlink/?linkid=2210588
            </summary>
            <param name="ABSContainerContent">Collection of the result (temporary record).</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.ListBlobs(Dictionary of [Text,XmlNode]@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Lists the blobs in a specific container.
            see: https://go.microsoft.com/fwlink/?linkid=2210588
            </summary>
            <param name="BlobList">Collection of the result (BlobList of [Text, XmlNode]).
            The key in the dictionary is the full blob path and the value is the complete blob xmlnode from the response</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.ListBlobs(Dictionary of [Text,XmlNode]@,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Lists the blobs in a specific container.
            see: https://go.microsoft.com/fwlink/?linkid=2210588
            </summary>
            <param name="BlobList">Collection of the result (BlobList of [Text, XmlNode]).
            The key in the dictionary is the full blob path and the value is the complete blob xmlnode from the response</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobBlockBlobUI:Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Uploads a file as a BlockBlob (with File Selection Dialog).
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobBlockBlobUI(Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Uploads a file as a BlockBlob (with File Selection Dialog).
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobBlockBlobStream(Text,InStream@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Uploads the content of an InStream as a BlockBlob
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceInStream">The Content of the Blob as InStream.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobBlockBlobStream(Text,InStream@,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Uploads the content of an InStream as a BlockBlob
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceInStream">The Content of the Blob as InStream.</param>
            <param name="ContentType">Value for Content-Type HttpHeader (e.g. 'text/plain; charset=UTF-8')</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobBlockBlobStream(Text,InStream@,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Uploads the content of an InStream as a BlockBlob.
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceInStream">The Content of the Blob as InStream.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobBlockBlobStream(Text,InStream@,Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Uploads the content of an InStream as a BlockBlob.
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceInStream">The Content of the Blob as InStream.</param>
            <param name="ContentType">Value for Content-Type HttpHeader (e.g. 'text/plain; charset=UTF-8')</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobBlockBlobText(Text,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Uploads text as a BlockBlob.
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceText">The Content of the Blob as Text.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobBlockBlobText(Text,Text,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Uploads text as a BlockBlob.
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceText">The Content of the Blob as Text.</param>
            <param name="ContentType">Value for Content-Type HttpHeader (e.g. 'text/plain; charset=UTF-8')</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobBlockBlobText(Text,Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Uploads text as a BlockBlob.
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceText">The Content of the Blob as Text.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobBlockBlobText(Text,Text,Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Uploads text as a BlockBlob.
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceText">The Content of the Blob as Text.</param>
            <param name="ContentType">Value for Content-Type HttpHeader (e.g. 'text/plain; charset=UTF-8')</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobPageBlob(Text,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Creates a PageBlob.
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ContentType">Value for Content-Type HttpHeader (e.g. 'text/plain; charset=UTF-8')</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobPageBlob(Text,Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Creates a PageBlob.
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ContentType">Value for Content-Type HttpHeader (e.g. 'text/plain; charset=UTF-8')</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobAppendBlobStream(Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Blob operation creates a new append blob
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            Uses 'application/octet-stream' as Content-Type
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobAppendBlobStream(Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Blob operation creates a new append blob
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            Uses 'application/octet-stream' as Content-Type
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobAppendBlobText(Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Blob operation creates a new append blob
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            Uses 'text/plain; charset=UTF-8' as Content-Type
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlobAppendBlob(Text,Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Blob operation creates a new append blob
            see: https://go.microsoft.com/fwlink/?linkid=2210387
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ContentType">Value for Content-Type HttpHeader (e.g. 'text/plain; charset=UTF-8')</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AppendBlockText(Text,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Append Block operation commits a new block of data to the end of an existing append blob.
            see: https://go.microsoft.com/fwlink/?linkid=2211404
            Uses 'text/plain; charset=UTF-8' as Content-Type
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ContentAsText">Text-variable containing the content that should be added to the Blob</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AppendBlockText(Text,Text,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Append Block operation commits a new block of data to the end of an existing append blob.
            see: https://go.microsoft.com/fwlink/?linkid=2211404
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ContentAsText">Text-variable containing the content that should be added to the Blob</param>
            <param name="ContentType">Value for Content-Type HttpHeader (e.g. 'text/plain; charset=UTF-8')</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AppendBlockText(Text,Text,Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Append Block operation commits a new block of data to the end of an existing append blob.
            see: https://go.microsoft.com/fwlink/?linkid=2211404
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ContentAsText">Text-variable containing the content that should be added to the Blob</param>
            <param name="ContentType">Value for Content-Type HttpHeader (e.g. 'text/plain; charset=UTF-8')</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AppendBlockStream(Text,InStream):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Append Block operation commits a new block of data to the end of an existing append blob.
            see: https://go.microsoft.com/fwlink/?linkid=2211404
            Uses 'application/octet-stream' as Content-Type
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ContentAsInStream">InStream containing the content that should be added to the Blob</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AppendBlockStream(Text,InStream,Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Append Block operation commits a new block of data to the end of an existing append blob.
            see: https://go.microsoft.com/fwlink/?linkid=2211404
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ContentAsInStream">InStream containing the content that should be added to the Blob</param>
            <param name="ContentType">Value for Content-Type HttpHeader (e.g. 'text/plain; charset=UTF-8')</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AppendBlock(Text,Text,Variant,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Append Block operation commits a new block of data to the end of an existing append blob.
            see: https://go.microsoft.com/fwlink/?linkid=2211404
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ContentType">Value for Content-Type HttpHeader (e.g. 'text/plain; charset=UTF-8')</param>
            <param name="SourceContentVariant">Variant containing the content that should be added to the Blob</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AppendBlockFromURL(Text,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Append Block From URL operation commits a new block of data to the end of an existing append blob.
            see: https://go.microsoft.com/fwlink/?linkid=2211405
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceUri">Specifies the name of the source blob.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AppendBlockFromURL(Text,Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Append Block From URL operation commits a new block of data to the end of an existing append blob.
            see: https://go.microsoft.com/fwlink/?linkid=2211405
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceUri">Specifies the name of the source blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobAsFile(Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Receives a Blob as a File from a Container.
            see: https://go.microsoft.com/fwlink/?linkid=2210388
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobAsFile(Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Receives a Blob as a File from a Container.
            see: https://go.microsoft.com/fwlink/?linkid=2210388
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobAsStream(Text,InStream@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Receives a Blob as a InStream from a Container.
            see: https://go.microsoft.com/fwlink/?linkid=2210388
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="TargetInStream">The result InStream containg the content of the Blob.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobAsStream(Text,InStream@,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Receives a Blob as a InStream from a Container.
            see: https://go.microsoft.com/fwlink/?linkid=2210388
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="TargetInStream">The result InStream containg the content of the Blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobAsText(Text,Text@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Receives a Blob as Text from a Container.
            see: https://go.microsoft.com/fwlink/?linkid=2210388
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="TargetText">The result Text containg the content of the Blob.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobAsText(Text,Text@,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Receives a Blob as Text from a Container.
            see: https://go.microsoft.com/fwlink/?linkid=2210388
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="TargetText">The result Text containg the content of the Blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.SetBlobExpiryRelativeToCreation(Text,Integer):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Set Blob Expiry operation sets an expiry time on an existing blob. This operation is only allowed on Hierarchical Namespace enabled accounts
            Sets the expiry time relative to the file creation time, x-ms-expiry-time must be specified as the number of milliseconds to elapse from creation time.
            see: https://go.microsoft.com/fwlink/?linkid=2210389
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ExpiryTime">Number if miliseconds (Integer) until the expiration.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.SetBlobExpiryRelativeToNow(Text,Integer):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Set Blob Expiry operation sets an expiry time on an existing blob. This operation is only allowed on Hierarchical Namespace enabled accounts
            Sets the expiry relative to the current time, x-ms-expiry-time must be specified as the number of milliseconds to elapse from now.
            see: https://go.microsoft.com/fwlink/?linkid=2210389
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ExpiryTime">Number if miliseconds (Integer) until the expiration.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.SetBlobExpiryAbsolute(Text,DateTime):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Set Blob Expiry operation sets an expiry time on an existing blob. This operation is only allowed on Hierarchical Namespace enabled accounts
            Sets the expiry to an absolute DateTime
            see: https://go.microsoft.com/fwlink/?linkid=2210389
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ExpiryTime">Absolute DateTime for the expiration.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.SetBlobExpiryNever(Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Set Blob Expiry operation sets an expiry time on an existing blob. This operation is only allowed on Hierarchical Namespace enabled accounts
            Sets the file to never expire or removes the current expiry time, x-ms-expiry-time must not to be specified.
            see: https://go.microsoft.com/fwlink/?linkid=2210389
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.SetBlobTags(Text,Dictionary of [Text,Text]):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Set Blob Tags operation sets user-defined tags for the specified blob as one or more key-value pairs.
            see: https://go.microsoft.com/fwlink/?linkid=2211407
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="Tags">A Dictionary of [Text, Text] which contains the Tags you want to set.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.FindBlobsByTags(Dictionary of [Text,Text],XmlDocument@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Find Blobs By Tags operation retrieves blobs based on user-defined tags for the specified blob, represented as one or more key-value pairs.
            see: https://learn.microsoft.com/nl-nl/rest/api/storageservices/find-blobs-by-tags?tabs=azure-ad
            </summary>
            <param name="SearchTags">A Dictionary of [Text, Text] with tags to search on.</param>
            <param name="FoundBlobs">An XmlDocument containing the results of the identified blobs.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.FindBlobsByTags(Dictionary of [Text,Text],XmlDocument@,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Find Blobs By Tags operation retrieves blobs based on user-defined tags for the specified blob, represented as one or more key-value pairs.
            see: https://learn.microsoft.com/rest/api/storageservices/find-blobs-by-tags?tabs=azure-ad
            </summary>
            <param name="SearchTags">A Dictionary of [Text, Text] with tags to search on.</param>
            <param name="FoundBlobs">An XmlDocument containing the results of the identified blobs.</param>
            <param name="OptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobTags(Text,XmlDocument@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Get Blob Tags operation gets user-defined tags for the specified blob as XmlDocument.
            see: https://go.microsoft.com/fwlink/?linkid=2211502
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="Tags">The result XmlDocument with blob tags.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobTags(Text,XmlDocument@,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Get Blob Tags operation gets user-defined tags for the specified blob as XmlDocument.
            see: https://go.microsoft.com/fwlink/?linkid=2211502
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="Tags">The result XmlDocument with blob tags.</param>
            <param name="OptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobTags(Text,Dictionary of [Text,Text]@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Get Blob Tags operation gets user-defined tags for the specified blob as one or more key-value pairs.
            see: https://go.microsoft.com/fwlink/?linkid=2211502
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="Tags">The result Dictionary of [Text, Text] with blob tags.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobTags(Text,Dictionary of [Text,Text]@,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Get Blob Tags operation gets user-defined tags for the specified blob as one or more key-value pairs.
            see: https://go.microsoft.com/fwlink/?linkid=2211502
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="Tags">The result Dictionary of [Text, Text] with blob tags.</param>
            <param name="OptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobProperties(Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Get Blob Properties operation returns all user-defined metadata, standard HTTP properties, and system properties for the blob. It doesn't return the content of the blob.
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/get-blob-properties?tabs=azure-ad
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <returns>An operation response object. The Blob properties are in the response headers.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobProperties(Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Get Blob Properties operation returns all user-defined metadata, standard HTTP properties, and system properties for the blob. It doesn't return the content of the blob.
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/get-blob-properties?tabs=azure-ad
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object. The Blob properties are in the response headers.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.BlobExists(Text):Boolean">
            <summary>
            The Blob Exists operation returns true if a blob exists, or false if the blob does not exist.
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <returns>True if the blob exists, false if not.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.BlobExists(Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Boolean">
            <summary>
            The Blob Exists operation returns true if a blob exists, or false if the blob does not exist.
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>True if the blob exists, false if not.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.DeleteBlob(Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Delete Blob operation marks the specified blob or snapshot for deletion. The blob is later deleted during garbage collection.
            see: https://go.microsoft.com/fwlink/?linkid=2211408
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.DeleteBlob(Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Delete Blob operation marks the specified blob or snapshot for deletion. The blob is later deleted during garbage collection.
            see: https://go.microsoft.com/fwlink/?linkid=2211408
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.UndeleteBlob(Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Undelete Blob operation restores the contents and metadata of a soft deleted blob and any associated soft deleted snapshots (version 2017-07-29 or later)
            see: https://go.microsoft.com/fwlink/?linkid=2210390
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.UndeleteBlob(Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Undelete Blob operation restores the contents and metadata of a soft deleted blob and any associated soft deleted snapshots (version 2017-07-29 or later)
            see: https://go.microsoft.com/fwlink/?linkid=2210390
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.CopyBlob(Text,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Copy Blob operation copies a blob to a destination within the storage account.
            see: https://go.microsoft.com/fwlink/?linkid=2210589
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceName">Specifies the name of the source blob or file.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.CopyBlob(Text,Text,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Copy Blob operation copies a blob to a destination within the storage account.
            see: https://go.microsoft.com/fwlink/?linkid=2210589
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceName">Specifies the name of the source blob or file.</param>
            <param name="LeaseId">Required if the destination blob has an active lease. The lease ID specified must match the lease ID of the destination blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlockList(Dictionary of [Text,Integer],Dictionary of [Text,Integer]):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Block List operation writes a blob by specifying the list of block IDs that make up the blob.
            see: https://go.microsoft.com/fwlink/?linkid=2210392
            </summary>
            <param name="CommitedBlocks">Dictionary of [Text, Integer] containing the list of commited blocks that should be put to the Blob</param>
            <param name="UncommitedBlocks">Dictionary of [Text, Integer] containing the list of uncommited blocks that should be put to the Blob</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlockList(Text,Dictionary of [Text,Integer],Dictionary of [Text,Integer]):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Block List operation writes a blob by specifying the list of block IDs that make up the blob.
            see: https://go.microsoft.com/fwlink/?linkid=2210392
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="CommitedBlocks">Dictionary of [Text, Integer] containing the list of commited blocks that should be put to the Blob</param>
            <param name="UncommitedBlocks">Dictionary of [Text, Integer] containing the list of uncommited blocks that should be put to the Blob</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlockText(Text,Text,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Block operation creates a new block to be committed as part of a blob.
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/put-block
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceText">The Content of the Block as Text.</param>
            <param name="BlockId">Specifies the BlockId that should be put.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlockText(Text,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Block operation creates a new block to be committed as part of a blob.
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/put-block
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceText">The Content of the Block as Text.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlockStream(Text,InStream):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Block operation creates a new block to be committed as part of a blob.
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/put-block
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceInStream">The Content of the Block as InStream.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlockStream(Text,InStream,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Block operation creates a new block to be committed as part of a blob.
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/put-block
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceInStream">The Content of the Block as InStream.</param>
            <param name="BlockId">Specifies the BlockId that should be put.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlockFromURL(Text,Text,Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Block From URL operation creates a new block to be committed as part of a blob where the contents are read from a URL.
            see: https://go.microsoft.com/fwlink/?linkid=2211409
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceUri">Specifies the name of the source block blob.</param>
            <param name="BlockId">Specifies the BlockId that should be put.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.PutBlockFromURL(Text,Text,Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The Put Block From URL operation creates a new block to be committed as part of a blob where the contents are read from a URL.
            see: https://go.microsoft.com/fwlink/?linkid=2211409
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="SourceUri">Specifies the name of the source block blob.</param>
            <param name="BlockId">Specifies the BlockId that should be put.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AcquireLease(Text,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the blob does not have an active lease, the Blob service creates a lease on the blob. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AcquireLease(Text,Codeunit::System#Azure#Storage#ABS Optional Parameters,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the blob does not have an active lease, the Blob service creates a lease on the blob. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AcquireLease(Text,Integer,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the blob does not have an active lease, the Blob service creates a lease on the blob. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="DurationSeconds">Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AcquireLease(Text,Integer,Codeunit::System#Azure#Storage#ABS Optional Parameters,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the blob does not have an active lease, the Blob service creates a lease on the blob. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="DurationSeconds">Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AcquireLease(Text,Guid,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the blob does not have an active lease, the Blob service creates a lease on the blob. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ProposedLeaseId">Proposed lease ID, in a GUID string format</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AcquireLease(Text,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the blob does not have an active lease, the Blob service creates a lease on the blob. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="ProposedLeaseId">Proposed lease ID, in a GUID string format</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.AcquireLease(Text,Integer,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the blob does not have an active lease, the Blob service creates a lease on the blob. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="DurationSeconds">Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires</param>
            <param name="ProposedLeaseId">Proposed lease ID, in a GUID string format</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.ReleaseLease(Text,Guid):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Releases a lease on a Blob if it is no longer needed so that another client may immediately acquire a lease against the blob
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="LeaseId">The Guid for the lease that should be released</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.ReleaseLease(Text,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Releases a lease on a Blob if it is no longer needed so that another client may immediately acquire a lease against the blob
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="LeaseId">The Guid for the lease that should be released</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.RenewLease(Text,Guid):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Renews a lease on a Blob to keep it locked again for the same amount of time as before
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="LeaseId">The Guid for the lease that should be renewed</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.RenewLease(Text,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Renews a lease on a Blob to keep it locked again for the same amount of time as before
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="LeaseId">The Guid for the lease that should be renewed</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.BreakLease(Text,Guid):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Breaks a lease on a blob but ensures that another client cannot acquire a new lease until the current lease period has expired
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="LeaseId">The Guid for the lease that should be broken</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.BreakLease(Text,Guid,Integer):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Breaks a lease on a blob but ensures that another client cannot acquire a new lease until the current lease period has expired
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="LeaseId">The Guid for the lease that should be broken</param>
            <param name="LeaseBreakPeriod">The proposed duration the lease should continue before it is broken, in seconds, between 0 and 60.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.BreakLease(Text,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Breaks a lease on a blob but ensures that another client cannot acquire a new lease until the current lease period has expired
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="LeaseId">The Guid for the lease that should be broken</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.BreakLease(Text,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters,Integer):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Breaks a lease on a blob but ensures that another client cannot acquire a new lease until the current lease period has expired
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="LeaseId">The Guid for the lease that should be broken</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <param name="LeaseBreakPeriod">The proposed duration the lease should continue before it is broken, in seconds, between 0 and 60.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.ChangeLease(Text,Guid@,Guid):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Changes the lease ID of an active lease
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="LeaseId">The Guid for the lease that should be changed. Will contain the updated Guid after successful operation.</param>
            <param name="ProposedLeaseId">The Guid that should be used in future</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.ChangeLease(Text,Guid,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Changes the lease ID of an active lease
            see: https://go.microsoft.com/fwlink/?linkid=2210391
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="LeaseId">The Guid for the lease that should be changed</param>
            <param name="ProposedLeaseId">The Guid that should be used in future</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobMetadata(Text,Dictionary of [Text,Text]@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The GetBlobMetadata operation gets user-defined Metadata for the specified blob as one or more key-value pairs.
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/get-blob-metadata?tabs=microsoft-entra-id
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="Metadata">The result Dictionary of [Text, Text] with blob metadata.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.GetBlobMetaData(Text,Dictionary of [Text,Text]@,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The GetBlobMetadata operation gets user-defined Metadata for the specified blob as one or more key-value pairs.
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/get-blob-metadata?tabs=microsoft-entra-id
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="Metadata">The result Dictionary of [Text, Text] with blob metadata.</param>
            <param name="OptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Blob Client.SetBlobMetadata(Text,Dictionary of [Text,Text]):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            The SetBlobMetadata operation sets user-defined Metadata for the specified blob as one or more key-value pairs.
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata?tabs=microsoft-entra-id
            </summary>
            <param name="BlobName">The name of the blob.</param>
            <param name="Metadata">The result Dictionary of [Text, Text] with blob metadata.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="O:Table::System#Azure#Storage#ABS Container">
            <summary>
            Holds information about containers in a storage account.
            </summary>
        </member>
        <member name="O:Codeunit::System#Azure#Storage#ABS Container Client">
            <summary>
            Provides functionality to use operations on containers in Azure BLOB Services.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.Initialize(Text,Interface::System#Azure#Storage#Storage Service Authorization)">
            <summary>
            Initializes the Azure BLOB Storage container client.
            </summary>
            <param name="StorageAccount">The name of Storage Account to use.</param>
            <param name="Authorization">The authorization to use.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.Initialize(Text,Interface::System#Azure#Storage#Storage Service Authorization,Enum::System#Azure#Storage#Storage Service API Version)">
            <summary>
            Initializes the Azure BLOB Storage container client.
            </summary>
            <param name="StorageAccount">The Storage Account to use.</param>
            <param name="ApiVersion">The API version to use.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.SetBaseUrl(Text)">
            <summary>
            The base URL to use when constructing the final URI.
            If not set, the base URL is https://%1.blob.core.windows.net where %1 is the storage account name.
            </summary>
            <remarks>Use %1 as a placeholder for the storage account name.</remarks>
            <param name="BaseUrl">A valid URL string</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.ListContainers(ABS Container@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            List all containers in specific Storage Account.
            see: https://go.microsoft.com/fwlink/?linkid=2211410
            </summary>
            <param name="Container">Collection of the result (temporary record).</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.ListContainers(ABS Container@,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            List all containers in specific Storage Account.
            see: https://go.microsoft.com/fwlink/?linkid=2211410
            </summary>
            <param name="Container">Collection of the result (temporary record).</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.CreateContainer(Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Creates a new container in the Storage Account.
            see: https://go.microsoft.com/fwlink/?linkid=2211411
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.CreateContainer(Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Creates a new container in the Storage Account.
            see: https://go.microsoft.com/fwlink/?linkid=2211411
            </summary>
            <param name="ContainerName">The name of the container to create.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.DeleteContainer(Text):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Deletes a container from the Storage Account.
            see: https://go.microsoft.com/fwlink/?linkid=2210393
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.DeleteContainer(Text,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Deletes a container from the Storage Account.
            see: https://go.microsoft.com/fwlink/?linkid=2210393
            </summary>
            <param name="ContainerName">The name of the container to delete.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.AcquireLease(Text,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the container does not have an active lease, the blob service creates a lease on the container. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.AcquireLease(Text,Codeunit::System#Azure#Storage#ABS Optional Parameters,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the container does not have an active lease, the blob service creates a lease on the container. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.AcquireLease(Text,Integer,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the container does not have an active lease, the blob service creates a lease on the container. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="DurationSeconds">Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.AcquireLease(Text,Integer,Codeunit::System#Azure#Storage#ABS Optional Parameters,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the container does not have an active lease, the blob service creates a lease on the container. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="DurationSeconds">Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.AcquireLease(Text,Guid,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the container does not have an active lease, the blob service creates a lease on the container. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="ProposedLeaseId">Proposed lease ID, in a GUID string format</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.AcquireLease(Text,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the container does not have an active lease, the blob service creates a lease on the container. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="ProposedLeaseId">Proposed lease ID, in a GUID string format</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.AcquireLease(Text,Integer,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters,Guid@):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Requests a new lease. If the container does not have an active lease, the blob service creates a lease on the container. The lease duration can be 15 to 60 seconds or can be infinite
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="DurationSeconds">Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires</param>
            <param name="ProposedLeaseId">Proposed lease ID, in a GUID string format</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <param name="LeaseId">Guid containing the response value from x-ms-lease-id HttpHeader</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.ReleaseLease(Text,Guid):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Releases a lease on a container if it is no longer needed so that another client may immediately acquire a lease against the blob
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="LeaseId">The Guid for the lease that should be released</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.ReleaseLease(Text,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Releases a lease on a container if it is no longer needed so that another client may immediately acquire a lease against the blob
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="LeaseId">The Guid for the lease that should be released</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.RenewLease(Text,Guid):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Renews a lease on a container to keep it locked again for the same amount of time as before
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="LeaseId">The Guid for the lease that should be renewed</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.RenewLease(Text,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Renews a lease on a container to keep it locked again for the same amount of time as before
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="LeaseId">The Guid for the lease that should be renewed</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.BreakLease(Text,Guid):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Breaks a lease on a container but ensures that another client cannot acquire a new lease until the current lease period has expired
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="LeaseId">The Guid for the lease that should be broken</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.BreakLease(Text,Guid,Integer):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Breaks a lease on a container but ensures that another client cannot acquire a new lease until the current lease period has expired
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="LeaseId">The Guid for the lease that should be broken</param>
            <param name="LeaseBreakPeriod">The proposed duration the lease should continue before it is broken, in seconds, between 0 and 60.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.BreakLease(Text,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Breaks a lease on a container but ensures that another client cannot acquire a new lease until the current lease period has expired
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="LeaseId">The Guid for the lease that should be broken</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.BreakLease(Text,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters,Integer):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Breaks a lease on a container but ensures that another client cannot acquire a new lease until the current lease period has expired
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="LeaseId">The Guid for the lease that should be broken</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <param name="LeaseBreakPeriod">The proposed duration the lease should continue before it is broken, in seconds, between 0 and 60.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.ChangeLease(Text,Guid@,Guid):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Changes the lease ID of an active lease
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="LeaseId">The Guid for the lease that should be changed. Will contain the updated Guid after successful operation.</param>
            <param name="ProposedLeaseId">The Guid that should be used in future</param>
            <returns>An operation response object</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Client.ChangeLease(Text,Guid,Guid,Codeunit::System#Azure#Storage#ABS Optional Parameters):Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Changes the lease ID of an active lease
            see: https://go.microsoft.com/fwlink/?linkid=2211318
            </summary>
            <param name="ContainerName">The name of the container.</param>
            <param name="LeaseId">The Guid for the lease that should be changed</param>
            <param name="ProposedLeaseId">The Guid that should be used in future</param>
            <param name="ABSOptionalParameters">Optional parameters to pass.</param>
            <returns>An operation response object</returns>
        </member>
        <member name="O:Table::System#Azure#Storage#ABS Container Content">
            <summary>
            Holds information about container content in a storage account.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Operation Payload.ConstructUri:Text">
            <summary>
            Creates the Uri for this object, based on given values
            </summary>
            <returns>An Uri (as Text) for this API Operation</returns>
        </member>
        <member name="O:Codeunit::System#Azure#Storage#ABS Operation Response">
            <summary>
            Holder object for holding for ABS client operations result.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Operation Response.IsSuccessful:Boolean">
            <summary>
            Checks whether the operation was successful.
            </summary>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Operation Response.GetError:Text">
            <summary>
            Gets the error (if any) of the response.
            </summary>
            <returns>Text representation of the error that occurred during the operation.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Operation Response.GetNextMarker:Text">
            <summary>
            Gets the NextMarker (if any) of the response.
            </summary>
            <returns>Text representation of the NextMarker that is returned during the operation.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Operation Response.GetResultAsText(Text@):Boolean">
            <summary>
            Gets the result of a ABS client operation as text,
            </summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Operation Response.GetResultAsStream(InStream@):Boolean">
            <summary>
            Gets the result of a ABS client operation as stream,
            </summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="O:Enum::System#Azure#Storage#Storage Service API Version">
            <summary>
            Defines the available API versions for Azure Storage Services.
            See: https://go.microsoft.com/fwlink/?linkid=2210598
            </summary>
        </member>
        <member name="O:Codeunit::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Exposes methods to create different kinds of authorizations for HTTP Request made to Azure Storage Services.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Storage Service Authorization.CreateAccountSAS(Text,Enum::System#Azure#Storage#Storage Service API Version,List of [SAS Service Type],List of [SAS Resource Type],List of [SAS Permission],DateTime):Interface::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Creates an account SAS (Shared Access Signature) for authorizing HTTP request to Azure Storage Services.
            see: https://go.microsoft.com/fwlink/?linkid=2210398
            </summary>
            <param name="SigningKey">The signing key to use.</param>
            <param name="SignedVersion">Specifies the signed storage service version to use to authorize requests made with this account SAS. Must be set to version 2015-04-05 or later.</param>
            <param name="SignedServices">Specifies the signed services accessible with the account SAS.</param>
            <param name="SignedPermissions">Specifies the signed permissions for the account SAS. Permissions are only valid if they match the specified signed resource type; otherwise they are ignored.</param>
            <param name="SignedExpiry">The time at which the shared access signature becomes invalid.</param>
            <returns>An account SAS authorization.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Storage Service Authorization.CreateAccountSAS(Text,Enum::System#Azure#Storage#Storage Service API Version,List of [SAS Service Type],List of [SAS Resource Type],List of [SAS Permission],DateTime,SAS Parameters):Interface::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Creates an account SAS (Shared Access Signature) for authorizing HTTP request to Azure Storage Services.
            see: https://go.microsoft.com/fwlink/?linkid=2210398
            </summary>
            <param name="SigningKey">The signing key to use.</param>
            <param name="SignedVersion">Specifies the signed storage service version to use to authorize requests made with this account SAS. Must be set to version 2015-04-05 or later.</param>
            <param name="SignedServices">Specifies the signed services accessible with the account SAS.</param>
            <param name="SignedPermissions">Specifies the signed permissions for the account SAS. Permissions are only valid if they match the specified signed resource type; otherwise they are ignored.</param>
            <param name="SignedExpiry">The time at which the shared access signature becomes invalid.</param>
            <param name="OptionalSASParameters">See table "Stor. Serv. SAS Parameters".</param>
            <returns>An account SAS authorization.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Storage Service Authorization.CreateAccountSAS(SecretText,Enum::System#Azure#Storage#Storage Service API Version,List of [SAS Service Type],List of [SAS Resource Type],List of [SAS Permission],DateTime):Interface::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Creates an account SAS (Shared Access Signature) for authorizing HTTP request to Azure Storage Services.
            see: https://go.microsoft.com/fwlink/?linkid=2210398
            </summary>
            <param name="SigningKey">The signing key to use.</param>
            <param name="SignedVersion">Specifies the signed storage service version to use to authorize requests made with this account SAS. Must be set to version 2015-04-05 or later.</param>
            <param name="SignedServices">Specifies the signed services accessible with the account SAS.</param>
            <param name="SignedPermissions">Specifies the signed permissions for the account SAS. Permissions are only valid if they match the specified signed resource type; otherwise they are ignored.</param>
            <param name="SignedExpiry">The time at which the shared access signature becomes invalid.</param>
            <returns>An account SAS authorization.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Storage Service Authorization.CreateAccountSAS(SecretText,Enum::System#Azure#Storage#Storage Service API Version,List of [SAS Service Type],List of [SAS Resource Type],List of [SAS Permission],DateTime,SAS Parameters):Interface::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Creates an account SAS (Shared Access Signature) for authorizing HTTP request to Azure Storage Services.
            see: https://go.microsoft.com/fwlink/?linkid=2210398
            </summary>
            <param name="SigningKey">The signing key to use.</param>
            <param name="SignedVersion">Specifies the signed storage service version to use to authorize requests made with this account SAS. Must be set to version 2015-04-05 or later.</param>
            <param name="SignedServices">Specifies the signed services accessible with the account SAS.</param>
            <param name="SignedPermissions">Specifies the signed permissions for the account SAS. Permissions are only valid if they match the specified signed resource type; otherwise they are ignored.</param>
            <param name="SignedExpiry">The time at which the shared access signature becomes invalid.</param>
            <param name="OptionalSASParameters">See table "Stor. Serv. SAS Parameters".</param>
            <returns>An account SAS authorization.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Storage Service Authorization.CreateSharedKey(Text):Interface::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Creates a Shared Key authorization mechanism for HTTP requests to Azure Storage Services.
            See: https://go.microsoft.com/fwlink/?linkid=2210396
            </summary>
            <param name="SharedKey">The shared key to use.</param>
            <returns>A Shared Key authorization.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Storage Service Authorization.CreateSharedKey(Text,Enum::System#Azure#Storage#Storage Service API Version):Interface::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Creates a Shared Key authorization mechanism for HTTP requests to Azure Storage Services.
            See: https://go.microsoft.com/fwlink/?linkid=2210396
            </summary>
            <param name="SharedKey">The shared key to use.</param>
            <param name="ApiVersion">The API version to use.</param>
            <returns>A Shared Key authorization.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Storage Service Authorization.CreateSharedKey(SecretText):Interface::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Creates a Shared Key authorization mechanism for HTTP requests to Azure Storage Services.
            See: https://go.microsoft.com/fwlink/?linkid=2210396
            </summary>
            <param name="SharedKey">The shared key to use.</param>
            <returns>A Shared Key authorization.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Storage Service Authorization.CreateSharedKey(SecretText,Enum::System#Azure#Storage#Storage Service API Version):Interface::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Creates a Shared Key authorization mechanism for HTTP requests to Azure Storage Services.
            See: https://go.microsoft.com/fwlink/?linkid=2210396
            </summary>
            <param name="SharedKey">The shared key to use.</param>
            <param name="ApiVersion">The API version to use.</param>
            <returns>A Shared Key authorization.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Storage Service Authorization.UseReadySAS(Text):Interface::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Uses a pre-generated account SAS (Shared Access Signature) for authorizing HTTP request to Azure Storage Services.
            see: https://go.microsoft.com/fwlink/?linkid=2210398
            </summary>
            <param name="SASToken">A pre-generated SAS token.</param>
            <returns>An account SAS authorization.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Storage Service Authorization.UseReadySAS(SecretText):Interface::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Uses a pre-generated account SAS (Shared Access Signature) for authorizing HTTP request to Azure Storage Services.
            see: https://go.microsoft.com/fwlink/?linkid=2210398
            </summary>
            <param name="SASToken">A pre-generated SAS token.</param>
            <returns>An account SAS authorization.</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#Storage Service Authorization.GetDefaultAPIVersion:Enum::System#Azure#Storage#Storage Service API Version">
            <summary>
            Get the default Storage Service API Version.
            </summary>
            <returns>The default Storage Service API Version</returns>
        </member>
        <member name="O:Interface::System#Azure#Storage#Storage Service Authorization">
            <summary>
            Common interface for different authorization options.
            </summary>
        </member>
        <member name="M:Interface::System#Azure#Storage#Storage Service Authorization.Authorize(HttpRequestMessage@,Text)">
            <summary>
            Authorizes an HTTP request by providing the needed authorization information to it.
            </summary>
            <param name="HttpRequest">The HTTP request to authorize.</param>
            <param name="StorageAccount">The name of the storage account to authorize against.</param>
        </member>
        <member name="O:Enum::System#Azure#Storage#ABS Blob Access Tier">
            <summary>
            Azure storage offers different access tiers.
            Azure Blog storage offers access tiers that let you manage the cost of storing large amounts of unstructured data, such as text or binary data.allowing you to store blob object data in the most cost-effective manner.
            See: https://go.microsoft.com/fwlink/?linkid=2210394
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Blob Access Tier.Hot">
            <summary>
            Optimized for storing data that is accessed frequently.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Blob Access Tier.Cool">
            <summary>
            Optimized for storing data that is infrequently accessed and stored for at least 30 days.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Blob Access Tier.Archive">
            <summary>
            Optimized for storing data that is rarely accessed and stored for at least 180 days with flexible latency requirements, on the order of hours.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#ABS Blob Expiry Option">
            <summary>
            See https://go.microsoft.com/fwlink/?linkid=2211406
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#ABS Blob Public Access">
            <summary>
            Indicator of whether data in the container may be accessed publicly and the level of access.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Blob Public Access.Container">
            <summary>
             Indicates full public read access for container and blob data. Clients can use anonymous requests to enumerate blobs in the container, but cannot enumerate containers in the storage account.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Blob Public Access.Blob">
             <summary>
            Indicates public read access to blob data in this container. The blob data can be read via anonymous request, but container data is not available. Clients cannot enumerate blobs in the container via anonymous request.
             </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#ABS Blob Resource Type">
            <summary>
            Indicator of what type the resource is.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Blob Resource Type.File">
            <summary>
             Indicates blob is of file type.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Blob Resource Type.Directory">
            <summary>
             Indicates blob is of directory type.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#ABS Blob Type">
            <summary>
            The types of BLOBs supported in Azure Blob Storage.
            See: https://go.microsoft.com/fwlink/?linkid=2210594
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Blob Type.BlockBlob">
            <summary>
            Optimized for streaming.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Blob Type.PageBlob">
            <summary>
            Optimized for random read/write operations and provides the ability to write to a range of bytes in a blob.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Blob Type.AppendBlob">
            <summary>
            Optimized for append operations.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#ABS Block List Type">
            <summary>
            Specifies whether to return the list of committed blocks, the list of uncommitted blocks, or both lists together
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#ABS Lease Action">
            <summary>
            The types of allowed lease operations
            See: https://go.microsoft.com/fwlink/?linkid=2210594
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Lease Action.Acquire">
            <summary>
            Requests a new lease.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Lease Action.Renew">
            <summary>
            Renews the lease.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Lease Action.Change">
            <summary>
            Changes the lease ID of an active lease.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Lease Action.Release">
            <summary>
            Releases the lease
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Lease Action.Break">
            <summary>
            Breaks the lease, if the blob has an active lease
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#ABS Rehydrate Priority">
            <summary>
            Indicates the priority with which to rehydrate an archived blob.
            The priority can be set on a blob only one time. This header will be ignored on subsequent requests to the same blob. The default priority without this header is Standard.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Rehydrate Priority.Standard">
            <summary>
            Standard priority. Default value.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#ABS Rehydrate Priority.High">
            <summary>
            High priority
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Container Content Helper.GetFullNameFromXML(ABS Container Content@):Text">
            <summary>
            The name will be shortened if it has more than 250 characters
            Use this function to retrieve the original name of the blob (read from saved XmlNode)
            </summary>
            <returns>The Full name of the Blob, recovered from saved XmlNode</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS HttpContent Helper.GetContentLength(InStream@):BigInteger">
            <summary>
            Retrieves the length of the given stream (used for "HttpContent-Length" header in PUT-operations)
            </summary>
            <param name="SourceInStream">The InStream for Request Body.</param>
            <returns>The length of the current stream</returns>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS HttpContent Helper.GetContentLength(Text):Integer">
            <summary>
            Retrieves the length of the given stream (used for "HttpContent-Length" header in PUT-operations)
            </summary>
            <param name="SourceText">The Text for Request Body.</param>
            <returns>The length of the current stream</returns>
        </member>
        <member name="O:Codeunit::System#Azure#Storage#ABS Optional Parameters">
            <summary>
            Holder for the optional Azure Blob Storage HTTP headers and URL parameters.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.LeaseId(Guid)">
            <summary>
            Sets the value for 'x-ms-lease-id' HttpHeader for a request.
            </summary>
            <param name="Value">Guid value specifying the LeaseID</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.SourceLeaseId(Text)">
            <summary>
            Sets the value for 'x-ms-source-lease-id' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the source LeaseID</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.Origin(Text)">
            <summary>
            Sets the value for 'Origin' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.AccessControlRequestMethod(Enum::System#Security#Authentication#Http Request Type)">
            <summary>
            Sets the value for 'Access-Control-Request-Method' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.AccessControlRequestHeaders(Text)">
            <summary>
            Sets the value for 'Access-Control-Request-Headers' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.ClientRequestId(Text)">
            <summary>
            Sets the value for 'x-ms-client-request-id' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.BlobPublicAccess(Enum::System#Azure#Storage#ABS Blob Public Access)">
            <summary>
            Sets the value for 'x-ms-blob-public-access' HttpHeader for a request.
            </summary>
            <param name="Value">Enum "Blob Public Access" value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.Metadata(Text,Text)">
            <summary>
            Sets the value for 'x-ms-meta-[MetaName]' HttpHeader for a request.
            </summary>
            <param name="MetaName">The name of the Metadata-value.</param>
            <param name="Value">Text value specifying the Metadata value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.TagsValue(Text)">
            <summary>
            Sets the value for 'x-ms-tags' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.SourceIfModifiedSince(DateTime)">
            <summary>
            Sets the value for 'x-ms-source-if-modified-since' HttpHeader for a request.
            </summary>
            <param name="Value">DateTime value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.SourceIfUnmodifiedSince(DateTime)">
            <summary>
            Sets the value for 'x-ms-source-if-unmodified-since' HttpHeader for a request.
            </summary>
            <param name="Value">DateTime value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.SourceIfMatch(Text)">
            <summary>
            Sets the value for 'x-ms-source-if-match' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.SourceIfNoneMatch(Text)">
            <summary>
            Sets the value for 'x-ms-source-if-none-match' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.CopySourceName(Text)">
            <summary>
            Sets the value for 'x-ms-copy-source' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.RehydratePriority(Enum::System#Azure#Storage#ABS Rehydrate Priority)">
            <summary>
            Sets the value for 'x-ms-rehydrate-priority' HttpHeader for a request.
            </summary>
            <param name="Value">Enum "Rehydrate Priority" value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.BlobExpiryOption(Enum::System#Azure#Storage#ABS Blob Expiry Option)">
            <summary>
            Sets the value for 'x-ms-expiry-option' HttpHeader for a request.
            </summary>
            <param name="Value">Enum "Blob Expiry Option" value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.BlobExpiryTime(Integer)">
            <summary>
            Sets the value for 'x-ms-expiry-time' HttpHeader for a request.
            </summary>
            <param name="Value">Integer value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.BlobExpiryTime(DateTime)">
            <summary>
            Sets the value for 'x-ms-expiry-time' HttpHeader for a request.
            </summary>
            <param name="Value">DateTime value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.BlobAccessTier(Enum::System#Azure#Storage#ABS Blob Access Tier)">
            <summary>
            Sets the value for 'x-ms-access-tier' HttpHeader for a request.
            </summary>
            <param name="Value">Enum "Blob Access Tier" value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.Range(Integer,Integer)">
            <summary>
            Sets the value for 'x-ms-range' HttpHeader for a request.
            </summary>
            <param name="BytesStartValue">Integer value specifying the Bytes start range value</param>
            <param name="BytesEndValue">Integer value specifying the Bytes end range value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.SourceRange(Integer,Integer)">
            <summary>
            Sets the value for 'x-ms-source-range' HttpHeader for a request.
            </summary>
            <param name="BytesStartValue">Integer value specifying the Bytes start range value</param>
            <param name="BytesEndValue">Integer value specifying the Bytes end range value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.RequiresSync(Boolean)">
            <summary>
            Sets the value for 'x-ms-requires-sync' HttpHeader for a request.
            </summary>
            <param name="Value">Boolean value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.LeaseAction(Enum::System#Azure#Storage#ABS Lease Action)">
            <summary>
            Sets the value for 'x-ms-lease-action' HttpHeader for a request.
            </summary>
            <param name="Value">Enum "ABS Lease Action" value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.LeaseBreakPeriod(Integer)">
            <summary>
            Sets the value for 'x-ms-lease-break-period' HttpHeader for a request.
            </summary>
            <param name="Value">Integer value specifying the HttpHeader value.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.LeaseDuration(Integer)">
            <summary>
            Sets the value for 'x-ms-lease-duration' HttpHeader for a request.
            </summary>
            <param name="Value">Integer value specifying the HttpHeader value.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.ProposedLeaseId(Guid)">
            <summary>
            Sets the value for 'x-ms-proposed-lease-id' HttpHeader for a request.
            </summary>
            <param name="Value">Guid value specifying the HttpHeader value.</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.ReturnUserPrincipalName(Boolean)">
            <summary>
            Sets the value for 'x-ms-upn' HttpHeader for a request.
            Version 2020-06-12 and later.
            Valid for accounts with hierarchical namespace enabled.
            If the user identity values that are returned in the x-ms-owner are true, they're transformed from Azure Active Directory object IDs to user principal names.
            If the values are false, they're returned as Azure Active Directory object IDs. The default value is false.
            Note that group and application object IDs are not translated, because they don't have unique friendly names.
            </summary>
            <param name="Value">Boolean value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.Timeout(Integer)">
            <summary>
            Sets the optional timeout value for the request.
            </summary>
            <param name="Value">Timeout in seconds. Most operations have a max. limit of 30 seconds. For more Information see: https://go.microsoft.com/fwlink/?linkid=2210591</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.VersionId(DateTime)">
            <summary>
            The versionid parameter is an opaque DateTime value that, when present, specifies the Version of the blob to retrieve.
            </summary>
            <param name="Value">The DateTime identifying the version</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.Snapshot(DateTime)">
            <summary>
            The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve.
            </summary>
            <param name="Value">The DateTime identifying the Snapshot</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.Snapshot(Text)">
            <summary>
            The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve.
            </summary>
            <param name="Value">The DateTime identifying the Snapshot</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.Prefix(Text)">
            <summary>
            Filters the results to return only blobs whose names begin with the specified prefix.
            </summary>
            <param name="Value">Prefix to search for</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.Delimiter(Text)">
            <summary>
            When the request includes this parameter, the operation returns a BlobPrefix element in the response body
            that acts as a placeholder for all blobs with names that begin with the same substring until the delimiter character is reached.
            The delimiter may be a single character or a string.
            </summary>
            <param name="Value">Delimiting character/string</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.MaxResults(Integer)">
            <summary>
            Specifies the maximum number of blobs to be fetch, from 1 to 5000 if not defined it will fetch 5000
            If more than 5000 blobs then use NextMarker to fetch the next set of blobs.
            In certain cases, the service might return fewer results than specified by maxresults, and also return a continuation token.
            Setting maxresults to a value less than or equal to zero results in error response code 400 (Bad Request).
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/list-blobs?tabs=azure-ad#uri-parameters
            </summary>
            <param name="Value">Max. number of results to fetch. Must be positive between 1 - 5000</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.NextMarker(Text)">
            <summary>
            Specifies the NextMarker of blobs to fetch
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/list-blobs?tabs=azure-ad#uri-parameters
            </summary>
            <param name="Value">NextMarker From previous response to fetch the next 5000 or what you have defined in MaxResults</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.BlockId(Text)">
            <summary>
            Identifiers the ID of a Block in BlockBlob
            </summary>
            <param name="Value">A valid Base64 string value that identifies the block. Prior to encoding, the string must be less than or equal to 64 bytes</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.Include(Text)">
            <summary>
            Specifies one or more datasets to include in the response.
            </summary>
            see: https://learn.microsoft.com/en-us/rest/api/storageservices/list-blobs?tabs=azure-ad#uri-parameters
            <param name="Value">The dataset(s) to include in text</param>
        </member>
        <member name="M:Codeunit::System#Azure#Storage#ABS Optional Parameters.ShowOnly(Text)">
            <summary>
            Specifies the datasets to be returned in the response.
            </summary>
            see: https://learn.microsoft.com/rest/api/storageservices/list-blobs?tabs=microsoft-entra-id#uri-parameters
            <param name="Value">The dataset to include in text</param>
        </member>
        <member name="O:Table::System#Azure#Storage#SAS Parameters">
            <summary>
            Optional parameters for Shared Access Signature authorization for Azure Storage Services.
            see: https://go.microsoft.com/fwlink/?linkid=2210398
            </summary>
        </member>
        <member name="F:Table::System#Azure#Storage#SAS Parameters.ApiVersion">
            <summary>
            Specifies the storage service version to use to execute the request made using the account SAS URI.
            </summary>
        </member>
        <member name="F:Table::System#Azure#Storage#SAS Parameters.SignedStart">
            <summary>
            The time at which the SAS becomes valid, expressed in one of the accepted ISO 8601 UTC formats. If omitted, the start time is assumed to be the time when the storage service receives the request.
            </summary>
        </member>
        <member name="F:Table::System#Azure#Storage#SAS Parameters.SignedIp[2048]">
            <summary>
            Specifies an IP address or a range of IP addresses from which to accept requests. When specifying a range, note that the range is inclusive.
            </summary>
        </member>
        <member name="F:Table::System#Azure#Storage#SAS Parameters.SignedProtocol">
            <summary>
            Specifies the protocol permitted for a request made with the account SAS. Possible values are both HTTPS and HTTP (https,http) or HTTPS only (https)
            </summary>
            <remarks>Note that HTTP only is not a permitted value.</remarks>
        </member>
        <member name="F:Table::System#Azure#Storage#SAS Parameters.SignedEncryptionScope[63]">
            <summary>
            Indicates the encryption scope to use to encrypt the request contents.
            This field is supported with version 2020-12-06 and later.
            See also: https://learn.microsoft.com/en-us/rest/api/storageservices/create-account-sas#specify-the-encryption-scope
            The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only
            Every dash (-) character must be immediately preceded and followed by a letter or number.
            See also: https://learn.microsoft.com/en-us/rest/api/storagerp/encryption-scopes/put?tabs=HTTP#uri-parameters
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#SAS Permission">
            <summary>
            Defines the possible permissions for account SAS.
            See: https://go.microsoft.com/fwlink/?linkid=2211413
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#SAS Permission.Tag">
            <summary>
            Valid for the following Object resource type only: blobs. Permits blob tag operations.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#SAS Permission.Filter">
            <summary>
            Valid for the following Object resource type only: blob. Permits filtering by blob tag.
            </summary>
        </member>
        <member name="E:Enum::System#Azure#Storage#SAS Permission.Set Immutability Policy">
            <summary>
            Valid for the following Object resource type only: blob. Permits set/delete immutability policy and legal hold on a blob.
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#SAS Resource Type">
            <summary>
            Defines the possible resource types for account SAS.
            See: https://go.microsoft.com/fwlink/?linkid=2210398
            </summary>
        </member>
        <member name="O:Enum::System#Azure#Storage#SAS Service Type">
            <summary>
            Defines the possible service types for account SAS
            More Information: https://go.microsoft.com/fwlink/?linkid=2210398
            </summary>
        </member>
        <member name="O:Codeunit::System#Azure#Storage#Stor# Serv# Auth# Shared Key">
            <summary>
            Exposes functionality to handle the creation of a signature to sign requests to the Storage Services REST API
            More Information:
            </summary>
        </member>
        <member name="O:Codeunit::System#Azure#KeyVault#Azure Key Vault">
            <summary>
            Exposes functionality to handle the retrieval of azure key vault secrets, along with setting the provider and clear the secrets cache used.
            </summary>
        </member>
        <member name="M:Codeunit::System#Azure#KeyVault#Azure Key Vault.GetAzureKeyVaultSecret(Text,Text@):Boolean">
            <summary>
            Retrieves a secret from the key vault.
            </summary>
            <remarks>This is a try function.</remarks>
            <param name="SecretName">The name of the secret to retrieve.</param>
            <param name="Secret">Out parameter that holds the secret that was retrieved from the key vault.</param>
            <remarks>As a best practice, you should only store secrets in a key vault. For example, avoid storing information that can be available elsewhere, such as configuration details or URLs.</remarks>
        </member>
        <member name="M:Codeunit::System#Azure#KeyVault#Azure Key Vault.GetAzureKeyVaultSecret(Text,SecretText@):Boolean">
            <summary>
            Retrieves a secret from the key vault.
            </summary>
            <remarks>This is a try function.</remarks>
            <param name="SecretName">The name of the secret to retrieve.</param>
            <param name="Secret">Out parameter that holds the secret that was retrieved from the key vault.</param>
            <remarks>As a best practice, you should only store secrets in a key vault. For example, avoid storing information that can be available elsewhere, such as configuration details or URLs.</remarks>
        </member>
        <member name="M:Codeunit::System#Azure#KeyVault#Azure Key Vault.GetAzureKeyVaultCertificate(Text,Text@):Boolean">
            <summary>
            Retrieves a certificate from the key vault.
            </summary>
            <remarks>This is a try function.</remarks>
            <param name="CertificateName">The name of the secret to retrieve.</param>
            <param name="Certificate">Out parameter that holds the certificate as a base 64 encoded string that was retrieved from the key vault.</param>
            <remarks>As a best practice, you should only store secrets in a key vault. For example, avoid storing information that can be available elsewhere, such as configuration details or URLs.</remarks>
        </member>
        <member name="M:Codeunit::System#Azure#KeyVault#Azure Key Vault.GetAzureKeyVaultCertificate(Text,SecretText@):Boolean">
            <summary>
            Retrieves a certificate from the key vault.
            </summary>
            <remarks>This is a try function.</remarks>
            <param name="CertificateName">The name of the secret to retrieve.</param>
            <param name="Certificate">Out parameter that holds the certificate as a base 64 encoded string that was retrieved from the key vault.</param>
            <remarks>As a best practice, you should only store secrets in a key vault. For example, avoid storing information that can be available elsewhere, such as configuration details or URLs.</remarks>
        </member>
        <member name="O:Codeunit::System#Azure#KeyVault#Azure Key Vault Impl#">
             <summary>
            
             </summary>
        </member>
        <member name="O:PermissionSet::System#Environment#Configuration#Feature Key - Admin">
            <summary>
            This permission set is required to turn a feature on or off.
            </summary>
        </member>
        <member name="O:PermissionSet::System#Environment#Configuration#Feature Key - Admin">
            <summary>
            This permission set is required to turn a feature on or off.
            </summary>
        </member>
        <member name="O:PermissionSet::System#Environment#Configuration#Feature Key - Admin">
            <summary>
            This permission set is required to turn a feature on or off.
            </summary>
        </member>
        <member name="O:PermissionSet::System#Environment#Configuration#Feature Key - Admin">
            <summary>
            This permission set is required to turn a feature on or off.
            </summary>
        </member>
        <member name="O:PermissionSet::System#Environment#Configuration#Feature Key - Admin">
            <summary>
            This permission set is required to turn a feature on or off.
            </summary>
        </member>
        <member name="O:PermissionSet::System#Environment#Configuration#Feature Key - Admin">
            <summary>
            This permission set is required to turn a feature on or off.
            </summary>
        </member>
        <member name="O:Query::System#Security#AccessControl#Device">
            <summary>
            Displays a list of devices.
            </summary>
        </member>
        <member name="O:Report::System#Security#AccessControl#Change Password">
            <summary>
            Report to change the current user's login password for OnPrem scenarios.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Password Dialog">
            <summary>
            A Page that allows the user to enter a password.
            </summary>
        </member>
        <member name="M:Page::System#Security#AccessControl#Password Dialog.GetPasswordValue:Text">
            <summary>
            Gets the password value typed on the page.
            </summary>
            <returns>The password value typed on the page.</returns>
        </member>
        <member name="M:Page::System#Security#AccessControl#Password Dialog.GetOldPasswordValue:Text">
            <summary>
            Gets the old password value typed on the page.
            </summary>
            <returns>The old password typed on the page.</returns>
        </member>
        <member name="M:Page::System#Security#AccessControl#Password Dialog.GetPasswordSecretValue:SecretText">
            <summary>
            Gets the password value typed on the page.
            </summary>
            <returns>The password value typed on the page.</returns>
        </member>
        <member name="M:Page::System#Security#AccessControl#Password Dialog.GetOldPasswordSecretValue:SecretText">
            <summary>
            Gets the old password value typed on the page.
            </summary>
            <returns>The old password typed on the page.</returns>
        </member>
        <member name="M:Page::System#Security#AccessControl#Password Dialog.SetCurrentPasswordToCompareSecretValue(SecretText)">
            <summary>
            Set the old password value to compare with typed on the page.
            </summary>
            <param name="OldPasswordSecret">Old password to compare.</param>
        </member>
        <member name="M:Page::System#Security#AccessControl#Password Dialog.EnableChangePassword">
            <summary>
            Enables the Change password mode, it makes the old password field on the page visible.
            </summary>
        </member>
        <member name="M:Page::System#Security#AccessControl#Password Dialog.DisablePasswordValidation">
            <summary>
            Disables any password validation.
            </summary>
        </member>
        <member name="M:Page::System#Security#AccessControl#Password Dialog.DisablePasswordConfirmation">
            <summary>
            Disables any password confirmation, it makes the Confirm Password field on the page hidden.
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#AccessControl#Password Dialog Management">
            <summary>
            Exposes functionality to open dialogs for entering passwords with different settings.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Dialog Management.OpenPasswordDialog(Boolean,Boolean):Text">
            <summary>
            Opens a dialog for the user to enter a password and returns the typed password if there is no validation error,
            otherwise an empty text is returned.
            </summary>
            <param name="DisablePasswordValidation">Disables the checks for the password validity. Default value is false.</param>
            <param name="DisablePasswordConfirmation">If set to true the new password is only needed once. Default value is false.</param>
            <returns>The typed password, or empty text if the password validations fail.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Dialog Management.OpenPasswordDialog(Boolean):Text">
            <summary>
            Opens a dialog for the user to enter a password and returns the typed password if there is no validation error,
            otherwise an empty text is returned.
            </summary>
            <param name="DisablePasswordValidation">Disables the checks for the password validity. Default value is false.</param>
            <returns>The typed password, or empty text if the password validations fail.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Dialog Management.OpenPasswordDialog:Text">
            <summary>
            Opens a dialog for the user to enter a password and returns the typed password if there is no validation error,
            otherwise an empty text is returned.
            </summary>
            <returns>The typed password, or empty text if the password validations fail.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Dialog Management.OpenChangePasswordDialog(Text@,Text@)">
            <summary>
            Opens a dialog for the user to change a password and returns the old and new typed passwords if there is no validation error,
            otherwise an empty text are returned.
            </summary>
            <param name="OldPassword">Out parameter, the old password user typed on the dialog.</param>
            <param name="Password">Out parameter, the new password user typed on the dialog.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Dialog Management.OpenChangePasswordDialog(SecretText@,SecretText@)">
            <summary>
            Opens a dialog for the user to change a password and returns the old and new typed passwords if there is no validation error,
            otherwise an empty text are returned.
            </summary>
            <param name="OldPassword">Out parameter, the old password user typed on the dialog.</param>
            <param name="Password">Out parameter, the new password user typed on the dialog.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Dialog Management.OpenSecretPasswordDialog(Boolean,Boolean):SecretText">
            <summary>
            Opens a dialog for the user to enter a password and returns the typed password if there is no validation error,
            otherwise an empty text is returned.
            </summary>
            <param name="DisablePasswordValidation">Disables the checks for the password validity. Default value is false.</param>
            <param name="DisablePasswordConfirmation">If set to true the new password is only needed once. Default value is false.</param>
            <returns>The typed password, or empty text if the password validations fail.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Dialog Management.OpenSecretPasswordDialog(Boolean):SecretText">
            <summary>
            Opens a dialog for the user to enter a password and returns the typed password if there is no validation error,
            otherwise an empty text is returned.
            </summary>
            <param name="DisablePasswordValidation">Disables the checks for the password validity. Default value is false.</param>
            <returns>The typed password, or empty text if the password validations fail.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Dialog Management.OpenSecretPasswordDialog:SecretText">
            <summary>
            Opens a dialog for the user to enter a password and returns the typed password if there is no validation error,
            otherwise an empty text is returned.
            </summary>
            <returns>The typed password, or empty text if the password validations fail.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Dialog Management.OpenPasswordChangeDialog(SecretText,SecretText@)">
            <summary>
            Opens a dialog for the user to change a password and returns the new typed password if there is no validation error,
            otherwise an empty text are returned.
            </summary>
            <param name="CurrentPassword">In parameter, the current password to compare with the password user typed on the dialog.</param>
            <param name="NewPassword">Out parameter, the new password user typed on the dialog.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Dialog Management.OnSetMinPasswordLength(Integer@)">
            <summary>
            Event to override the Minimum number of characters in the password.
            The Minimum length can only be increased not decreased. Default value is 8 characters long.
            </summary>
            <param name="MinPasswordLength">The number of characters to be set as minimum requirement.</param>
        </member>
        <member name="O:Codeunit::System#Security#AccessControl#Password Handler">
            <summary>
            Provides the functionality for generating and validating passwords.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Handler.GeneratePassword:Text">
            <summary>
            Generates a password that consists of a number of characters defined by the <see cref="GetPasswordMinLength"/> method,
            and meets the <see cref="IsPasswordStrong"/> conditions.
            </summary>
            <error>The length is less than the minimum defined in <see cref="OnSetMinPasswordLength"/> event.</error>
            <returns>The generated password.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Handler.GeneratePassword(Integer):Text">
            <summary>
            Generates a password that consists of a user-defined number of characters, and meets the <see cref="IsPasswordStrong"/> conditions.
            </summary>
            <param name="Length">The number of characters in the password. Passwords must contain at least eight characters.</param>
            <error>The length is less than the minimum defined in <see cref="OnSetMinPasswordLength"/> event.</error>
            <returns>The generated password.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Handler.IsPasswordStrong(Text):Boolean">
            <summary>
            Check whether the password meets the following conditions:
            - Contains at least the number characters defined by <see cref="OnSetMinPasswordLength"/> event, but it cannot be less than eight.
            - Contains uppercase and lowercase characters, digits, and special characters.
            - Does not contain sequences of characters. For example, aaa or 123.
            </summary>
            <param name="Password">The password to check.</param>
            <returns>True if the password meets the conditions for strong passwords.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Handler.GenerateSecretPassword:SecretText">
            <summary>
            Generates a password that consists of a number of characters defined by the <see cref="GetPasswordMinLength"/> method,
            and meets the <see cref="IsPasswordStrong"/> conditions.
            </summary>
            <error>The length is less than the minimum defined in <see cref="OnSetMinPasswordLength"/> event.</error>
            <returns>The generated password.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Handler.GenerateSecretPassword(Integer):SecretText">
            <summary>
            Generates a password that consists of a user-defined number of characters, and meets the <see cref="IsPasswordStrong"/> conditions.
            </summary>
            <param name="Length">The number of characters in the password. Passwords must contain at least eight characters.</param>
            <error>The length is less than the minimum defined in <see cref="OnSetMinPasswordLength"/> event.</error>
            <returns>The generated password.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Handler.IsPasswordStrong(SecretText):Boolean">
            <summary>
            Check whether the password meets the following conditions:
            - Contains at least the number characters defined by <see cref="OnSetMinPasswordLength"/> event, but it cannot be less than eight.
            - Contains uppercase and lowercase characters, digits, and special characters.
            - Does not contain sequences of characters. For example, aaa or 123.
            </summary>
            <param name="Password">The password to check.</param>
            <returns>True if the password meets the conditions for strong passwords.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Password Handler.GetPasswordMinLength:Integer">
            <summary>
            Gets the minimum length of the password. It is defined by <see cref="OnSetMinPasswordLength"/> event, but it cannot be less than eight.
            </summary>
            <returns>The minimum length of the password. Eight by default.</returns>
        </member>
        <member name="O:Page::System#Security#AccessControl#Expanded Permissions">
            <summary>
            Page for viewing the expanded permissions of a permission set.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Expanded Permissions Factbox">
            <summary>
            Factbox for viewing the expanded permissions of a permission set.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Included PermissionSet FactBox">
            <summary>
            Factbox for viewing the first level related permission sets.
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#AccessControl#Log Activity Permissions">
            <summary>
            Codeunit used to log needed permission for a given activity.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Metadata Permission Subform">
            <summary>
            ListPart for viewing the permissions of a metadata permission set.
            </summary>
        </member>
        <member name="O:Table::System#Security#AccessControl#Permission Lookup Buffer">
            <summary>
            Buffer table for permission options
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Permission Lookup List">
            <summary>
            Buffer table for permission options
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Permission Set">
            <summary>
            Card page for the permission set.
            </summary>
        </member>
        <member name="O:Table::System#Security#AccessControl#PermissionSet Buffer">
            <summary>
            Buffer table for a permission set.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Permission Set Lookup List">
            <summary>
            Look up page for selecting a permission set from Tenant Permission Set or Metadata Permission Set.
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#AccessControl#Permission Set Relation">
            <summary>
            Codeunit that provides functions for permission set relations, such as including and exlcuding permission sets.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Permission Set Relation.AddNewPermissionSetRelation(Guid,Code[30],Option,Guid,Code[30],Option,Option):Boolean">
            <summary>
            Adds a new permission set relation.
            </summary>
            <param name="AppId">The app ID of the permission set.</param>
            <param name="RoleId">The role ID of the permission set.</param>
            <param name="Scope">The scope of the permission set.</param>
            <param name="RelatedAppId">The app ID of the related permission set.</param>
            <param name="RelatedRoleId">The role ID of the related permission set.</param>
            <param name="RelatedScope">The scope of the related permission set.</param>
            <param name="PermissionType">The type of the new permission set relation.</param>
            <returns>true if creating the permission set relation was successful</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Permission Set Relation.OpenPermissionSetPage(Text,Code[30],Guid,Option)">
            <summary>
            Opens the permission set page for the specified role ID.
            </summary>
            <param name="Name">The name of the permission set to open.</param>
            <param name="RoleId">The role ID of the permission set to open.</param>
            <param name="AppId">The app ID of the permission set to open.</param>
            <param name="Scope">The scope of the permission set to open.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Permission Set Relation.VerifyUserCanEditPermissionSet(Text)">
            <summary>
            Verify that the user can edit permission sets, with the specified app ID.
            Throws an error if not.
            </summary>
            <error>When the app ID is not null</error>
            <error>When the user doesn''t have neither SUPER, nor SECURITY</error>///
            <param name="AppId">The app ID of the permission set to verify.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Permission Set Relation.CopyPermissionSet(Code[30],Text,Code[30],Guid,Option,Enum::System#Security#AccessControl#Permission Set Copy Type)">
            <summary>
            CopyPermissionSet will copy the source permission set using the specified copy type.
            </summary>
            <param name="NewRoleId">The role ID of the new permission set that permissions are copied to.</param>
            <param name="NewName">The name of the new permission set that permissions are copied to.</param>
            <param name="SourceRoleId">The role ID of the source permission set that permissions are copied from.</param>
            <param name="SourceAppId">The app ID of the source permission set that permissions are copied from.</param>
            <param name="SourceScope">The scope of the source permission set that permissions are copied from.</param>
            <param name="CopyType">The type of copy operation to use.
            If the value is set to reference it will copy by creating a new permission set that includes the source set.
            If the value is set to flat it will copy by flattening all the permissions in the source set and adding them to the new set.
            If the value is set to clone it will copy by adding the same permissions and including the same permission sets as the source set.
            </param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Permission Set Relation.LookupPermissionSet(Boolean,Aggregate Permission Set@):Boolean">
            <summary>
            Opens the permission set page in lookup mode and assigns the selected record to specified Permission Set record.
            </summary>
            <param name="AllowMultiselect">Allow for selecting multiple Permission Sets.</param>
            <param name="AggregatePermissionSet">The target Permission Set.</param>
            <returns>true if lookup was successful</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Permission Set Relation.OnShowSecurityFilterForTenantPermission(Tenant Permission@,Text@)">
            <summary>
            Event that is raised to show security filter for a tenant permission.
            </summary>
            <param name="TenantPermission">The tenant permission to show security filter for.</param>
            <param name="OutputSecurityFilter">The output security filter.</param>
        </member>
        <member name="O:Table::System#Security#AccessControl#Permission Set Relation Buffer">
            <summary>
            Buffer table for permission set relations.
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#AccessControl#Permission Set Relation Impl#">
            <summary>
            Implementation codeunit that provides functions for copying permission sets, including/excluding permission sets and getting the permission set tree.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Permission Set Subform">
            <summary>
            ListPart for viewing and including/excluding permission sets.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Permission Set Tree">
            <summary>
            ListPart for viewing and including/excluding permission sets.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Tenant Permission Subform">
            <summary>
            ListPart for viewing and editing the permissions of a tenant permission set.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Copy Security Group">
            <summary>
            Copies a security group.
            </summary>
        </member>
        <member name="O:XmlPort::System#Security#AccessControl#Export/Import Security Groups">
            <summary>
            Imports or exports a security group.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#New Security Group">
            <summary>
            A pop-up window for creating a new security group.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Sec# Group Permissions Part">
            <summary>
            View the permission sets associated with a security group in a page part or factbox.
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#AccessControl#Security Group">
            <summary>
            Exposes functionality for working with security groups.
            Security groups correspond to either Windows groups or Microsoft Entra security groups depending on the authentication type.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.Create(Code[20],Text)">
            <summary>
            Creates a new security group.
            </summary>
            <param name="GroupCode">The code of the newly created group.</param>
            <param name="GroupId">The SID of a Windows group or object ID of the Microsoft Entra security group.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.Delete(Code[20])">
            <summary>
            Deletes a security group.
            </summary>
            <param name="GroupCode">The code of the group to delete.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.Copy(Code[20],Code[20],Text)">
            <summary>
            Copies a security group.
            </summary>
            <param name="SourceGroupCode">The code of the security group to copy.</param>
            <param name="DestinationGroupCode">The code of the copied security group.</param>
            <param name="DestinationGroupId">The ID of the copied security group.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.CopyPermissions(Code[20],Code[20])">
            <summary>
            Copies permission sets from the source security group to the destination security group.
            </summary>
            <param name="SourceGroupCode">The code of the security group to fetch the permissions from.</param>
            <param name="DestinationGroupCode">The code of the security group to add the the permissions to.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.AddPermissionSet(Code[20],Code[20],Text[30],Option,Guid)">
            <summary>
            Adds a permission set to a security group.
            </summary>
            <param name="GroupCode">The code of the security group to add a permission set to.</param>
            <param name="RoleId">The ID of the role (permission set).</param>
            <param name="Company">The company for which to add the permission set.</param>
            <param name="Scope">The scope of the permission set.</param>
            <param name="AppId">The ID of the app from which the permission set originates.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.RemovePermissionSet(Code[20],Code[20],Text[30],Option,Guid):Boolean">
            <summary>
            Removes a permission set from a security group.
            </summary>
            <param name="GroupCode">The code of the security group to remove a permission set from.</param>
            <param name="RoleId">The ID of the role (permission set).</param>
            <param name="Company">The company for which to remove the permission set.</param>
            <param name="Scope">The scope of the permission set.</param>
            <param name="AppId">The ID of the app from which the permission set originates.</param>
            <returns>True, if the permission set was removed, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.GetGroups(Security Group Buffer@)">
            <summary>
            Gets all the defined security groups.
            </summary>
            <param name="SecurityGroupBuffer">The resulting list of security groups.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.GetGroups(Security Group Buffer@,Boolean)">
            <summary>
            Gets all the defined security groups.
            </summary>
            <param name="SecurityGroupBuffer">The resulting list of security groups.</param>
            <param name="FetchGroupNames">Specifies if group names should be fetched, as loading them can take some time.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.GetMembers(Security Group Member Buffer@):List of [Code]">
            <summary>
            Gets all the security group memberships.
            </summary>
            <param name="SecurityGroupMemberBuffer">The resulting list of users and security groups they are a part of.</param>
            <returns>The list of security groups that could not be retrieved successfully from Graph / Windows Active Directory.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.ValidateGroupId(Text)">
            <summary>
            Validates the group ID that can be used for a security group.
            </summary>
            <param name="GroupId">The SID of a Windows group or object ID of the Microsoft Entra security group.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.GetGroupUserSecurityId(Code[20]):Guid">
            <summary>
            Gets the user security ID of a special user record that corresponds to a Microsoft Entra security group or Windows group.
            </summary>
            <param name="GroupCode">The code of the security group for which to get the group user security ID.</param>
            <returns>The user security ID of a special user record that corresponds to a Microsoft Entra security group or Windows group.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.GetName(Code[20],Text[250]@):Boolean">
            <summary>
            Gets the name of the security group.
            </summary>
            <param name="GroupCode">The code of the security group.</param>
            <param name="GroupName">The name of the security group.</param>
            <returns>True, if the operation succeeds, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.GetId(Code[20]):Text[250]">
            <summary>
            Gets the SID of a Windows group or an object ID of a Microsoft Entra security group by group code.
            </summary>
            <param name="GroupCode">The code of the security group.</param>
            <returns>The ID of the security group.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.GetCode(Text[250],Code[20]@):Boolean">
            <summary>
            Gets the code of the security group by its ID.
            </summary>
            <param name="GroupId">The SID of a Windows group or an object ID of a Microsoft Entra security group.</param>
            <param name="GroupCode">The code of the security group.</param>
            <returns>True, if the code was found successfully, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.GetIdByName(Text):Text">
            <summary>
            Gets the SID of a Windows group or an object ID of a Microsoft Entra security group by group name.
            </summary>
            <param name="GroupName">The name of a Windows group or Microsoft Entra security group.</param>
            <returns>The ID of the security group.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.SendNotificationForDeletedGroups(Security Group Buffer@)">
            <summary>
            Shows the notification listing deleted Windows / Microsoft Entra groups.
            </summary>
            <param name="SecurityGroupBuffer">The table containing all security group records.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.IsWindowsAuthentication:Boolean">
            <summary>
            Checks whether the current authentication type is Windows, meaning that Windows groups will be used for defining security groups.
            </summary>
            <returns>True, if the current authentication type is Windows, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.Export(List of [Code],OutStream)">
            <summary>
            Exports the provided list of security groups.
            </summary>
            <param name="SecurityGroupCodes">The codes of security groups to export.</param>
            <param name="Destination">The OutStream that the resulting XML content will be written to.</param>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group.Import(InStream)">
            <summary>
            Imports a list of security groups.
            </summary>
            <param name="Source">The InStream containing the XML content to import.</param>
        </member>
        <member name="O:Table::System#Security#AccessControl#Security Group Buffer">
            <summary>
            The container used for fetching the defined security groups.
            </summary>
        </member>
        <member name="F:Table::System#Security#AccessControl#Security Group Buffer.Code[20]">
            <summary>
            The security group code.
            </summary>
        </member>
        <member name="F:Table::System#Security#AccessControl#Security Group Buffer.Group User SID">
            <summary>
            User security ID of a special user record that corresponds to a Microsoft Entra security group or Windows group.
            </summary>
        </member>
        <member name="F:Table::System#Security#AccessControl#Security Group Buffer.Group ID[250]">
            <summary>
            SID of a Windows group or an object ID of a Microsoft Entra security group.
            </summary>
        </member>
        <member name="F:Table::System#Security#AccessControl#Security Group Buffer.Group Name[250]">
            <summary>
            Windows group name or a Microsoft Entra security group name.
            </summary>
        </member>
        <member name="F:Table::System#Security#AccessControl#Security Group Buffer.Retrieved Successfully">
            <summary>
            Whether the group was retrieved successfully from Graph / Windows Active Directory.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#AccessControl#Security Group Impl#.RemoveOrphanedEntraGroups">
            <summary>
            Removes orphaned groups from the system. An orphaned group is a group that has no corresponding security group record.
            </summary>
            <remarks>
            It is possible to have a User record corresponding to a security group without a Security Group record,
            because the function NavUserAccountHelper.CreateUserFromAAdGroupObjectId inserts the user record in a separate session.
            So, if there is an error in the process after <see cref="Create"/> was called, the changes to the User table are not rolled back.
            </remarks>
        </member>
        <member name="O:Table::System#Security#AccessControl#Security Group Member Buffer">
            <summary>
            The container used for fetching security group memberships.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Security Group Members">
            <summary>
            Present security group memberships
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Security Group Members Part">
            <summary>
            Present security group memberships in a page part or factbox.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Security Group Permission Sets">
            <summary>
            View and edit the permission sets associated with a security group.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Security Groups">
            <summary>
            The main page for interacting with security groups.
            </summary>
        </member>
        <member name="O:Page::System#Security#AccessControl#Lookup Permission Set">
            <summary>
            Look up page for selecting a permission set.
            </summary>
        </member>
        <member name="O:XmlPort::System#Security#AccessControl#Export Permission Sets System">
            <summary>
            Xmlport for exporting system permission sets.
            </summary>
        </member>
        <member name="O:XmlPort::System#Security#AccessControl#Export Permission Sets Tenant">
            <summary>
            Xmlport for exporting tenant permission sets.
            </summary>
        </member>
        <member name="O:XmlPort::System#Security#AccessControl#Import Permission Sets">
            <summary>
            Xmlport for importing permission sets.
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#Authentication#OAuth2">
            <summary>
            Contains methods supporting authentication via OAuth 2.0 protocol.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCodeWithCertificate(Text,Text,Text,Text,Text,Enum::System#Security#Authentication#Prompt Interaction,Text@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v1.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCode(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,Text@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCodeWithCertificate(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,Text@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensByAuthorizationCode(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensByAuthorizationCodeWithCertificate(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenAndTokenCacheByAuthorizationCode(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenAndTokenCacheByAuthorizationCodeWithCertificate(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensAndTokenCacheByAuthorizationCode(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,Text@,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensAndTokenCacheByAuthorizationCodeWithCertificate(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,Text@,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfToken(Text,List of [Text],Text@):Boolean">
            <summary>
            Gets the authentication token via the On-Behalf-Of OAuth2 v2.0 protocol flow.
            </summary>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfTokens(Text,List of [Text],Text@,Text@):Boolean">
            <summary>
            Gets the authentication token via the On-Behalf-Of OAuth2 v2.0 protocol flow.
            </summary>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenWithClientCredentials(Text,Text,Text,Text,Text,Text@):Boolean">
            <summary>
            Gets the access token via the Client Credentials OAuth2 v1.0 grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenWithClientCredentials(Text,Text,Text,Text,List of [Text],Text@):Boolean">
            <summary>
            Gets the access token via the Client Credentials OAuth2 v2.0 grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCacheWithCertificate(Text,Text,Text,Text,Text,Text@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v1.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCache(Text,Text,Text,Text,List of [Text],Text@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensFromCache(Text,Text,Text,Text,List of [Text],Text@,Text@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCacheWithCertificate(Text,Text,Text,Text,List of [Text],Text@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensFromCacheWithCertificate(Text,Text,Text,Text,List of [Text],Text@,Text@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensWithCertificate(Text,Text,Text,Text,List of [Text],Text@,Text@):Boolean">
            <summary>
            Gets the access token via OAuth2 v2.0 protocol, authenticating as a service principal (as the app whose credentials you are providing).
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfAccessTokenAndTokenCache(Text,Text,List of [Text],Text@,Text@):Boolean">
            <summary>
            Gets the access and refresh token via the On-Behalf-Of OAuth2 v2.0 protocol flow.
            </summary>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested .</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfTokensAndTokenCache(Text,Text,List of [Text],Text@,Text@,Text@):Boolean">
            <summary>
            Gets the access and refresh token via the On-Behalf-Of OAuth2 v2.0 protocol flow.
            </summary>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested .</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfTokenByTokenCache(Text,Text,List of [Text],Text,Text@,Text@):Boolean">
            <summary>
            Gets the token and token cache via the On-Behalf-Of OAuth2 v1.0 protocol flow.
            </summary>
            <param name="LoginHint">The user login hint, i.e. authentication email.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="TokenCache">The token cache acquired when the access token was requested .</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="NewTokenCache">Exit parameter containing the new token cache.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfTokensByTokenCache(Text,Text,List of [Text],Text,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the token and token cache via the On-Behalf-Of OAuth2 v1.0 protocol flow.
            </summary>
            <param name="LoginHint">The user login hint, i.e. authentication email.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="TokenCache">The token cache acquired when the access token was requested .</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="NewTokenCache">Exit parameter containing the new token cache.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfTokenByTokenCache(Text,Text,Text,Text,List of [Text],Text,Text@,Text@):Boolean">
            <summary>
            Gets the token and token cache via the On-Behalf-Of OAuth2 v1.0 protocol flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="LoginHint">The user login hint, i.e. authentication email.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="TokenCache">The token cache acquired when the access token was requested .</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="NewTokenCache">Exit parameter containing the new token cache.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfTokensByTokenCache(Text,Text,Text,Text,List of [Text],Text,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the token and token cache via the On-Behalf-Of OAuth2 v1.0 protocol flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="LoginHint">The user login hint, i.e. authentication email.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="TokenCache">The token cache acquired when the access token was requested .</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="NewTokenCache">Exit parameter containing the new token cache.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCodeWithCertificate(Text,Text,Text,Text,Text,Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v1.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCodeWithCertificate(Text,SecretText,Text,Text,Text,Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v1.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCodeWithCertificate(Text,Text,SecretText,Text,Text,Text,Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v1.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCodeWithCertificate(Text,SecretText,SecretText,Text,Text,Text,Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v1.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCode(Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCodeWithCertificate(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCodeWithCertificate(Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCodeWithCertificate(Text,Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenByAuthorizationCodeWithCertificate(Text,SecretText,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensByAuthorizationCode(Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensByAuthorizationCodeWithCertificate(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensByAuthorizationCodeWithCertificate(Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensByAuthorizationCodeWithCertificate(Text,Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensByAuthorizationCodeWithCertificate(Text,SecretText,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the authorization token based on the authorization code via the OAuth2 v2.0 code grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the AuthCodeErr for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="AuthCodeErr">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenAndTokenCacheByAuthorizationCode(Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenAndTokenCacheByAuthorizationCodeWithCertificate(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenAndTokenCacheByAuthorizationCodeWithCertificate(Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenAndTokenCacheByAuthorizationCodeWithCertificate(Text,Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenAndTokenCacheByAuthorizationCodeWithCertificate(Text,SecretText,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensAndTokenCacheByAuthorizationCode(Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensAndTokenCacheByAuthorizationCodeWithCertificate(Text,Text,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensAndTokenCacheByAuthorizationCodeWithCertificate(Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensAndTokenCacheByAuthorizationCodeWithCertificate(Text,Text,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensAndTokenCacheByAuthorizationCodeWithCertificate(Text,SecretText,SecretText,Text,Text,List of [Text],Enum::System#Security#Authentication#Prompt Interaction,SecretText@,Text@,Text@,Text@):Boolean">
            <summary>
            Gets the access token and token cache state with authorization code flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the "Azure portal – App registrations" experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the application (client) configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="PromptInteraction">Indicates the type of user interaction that is required.</param>
            <param name="AccessToken">Exit parameter containing the access token. When this parameter is empty, check the Error for a description of the error.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested.</param>
            <param name="Error">Exit parameter containing the encountered error in the authorization code grant flow. This parameter will be empty in case the token is aquired successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfToken(Text,List of [Text],SecretText@):Boolean">
            <summary>
            Gets the authentication token via the On-Behalf-Of OAuth2 v2.0 protocol flow.
            </summary>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfTokens(Text,List of [Text],SecretText@,Text@):Boolean">
            <summary>
            Gets the authentication token via the On-Behalf-Of OAuth2 v2.0 protocol flow.
            </summary>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.RequestClientCredentialsAdminPermissions(Text,Text,Text,Boolean@,Text@):Boolean">
            <summary>
            Request the permissions from a directory admin.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="HasGrantConsentSucceeded">Exit parameter indicating the success of granting application permissions.</param>
            <param name="PermissionGrantError">Exit parameter containing the encountered error in the application permissions grant. This parameter will be empty in case the flow is completed successfuly.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenWithClientCredentials(Text,SecretText,Text,Text,Text,SecretText@):Boolean">
            <summary>
            Gets the access token via the Client Credentials OAuth2 v1.0 grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokenWithClientCredentials(Text,SecretText,Text,Text,List of [Text],SecretText@):Boolean">
            <summary>
            Gets the access token via the Client Credentials OAuth2 v2.0 grant flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCacheWithCertificate(Text,Text,Text,Text,Text,SecretText@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v1.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCacheWithCertificate(Text,SecretText,Text,Text,Text,SecretText@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v1.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCacheWithCertificate(Text,Text,SecretText,Text,Text,Text,SecretText@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v1.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCacheWithCertificate(Text,SecretText,SecretText,Text,Text,Text,SecretText@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v1.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="ResourceURL">The Application ID of the resource the application is requesting access to. This parameter can be empty.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCache(Text,SecretText,Text,Text,List of [Text],SecretText@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensFromCache(Text,SecretText,Text,Text,List of [Text],SecretText@,Text@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCacheWithCertificate(Text,Text,Text,Text,List of [Text],SecretText@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCacheWithCertificate(Text,SecretText,Text,Text,List of [Text],SecretText@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCacheWithCertificate(Text,Text,SecretText,Text,Text,List of [Text],SecretText@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireAuthorizationCodeTokenFromCacheWithCertificate(Text,SecretText,SecretText,Text,Text,List of [Text],SecretText@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensFromCacheWithCertificate(Text,Text,Text,Text,List of [Text],SecretText@,Text@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensFromCacheWithCertificate(Text,SecretText,Text,Text,List of [Text],SecretText@,Text@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensFromCacheWithCertificate(Text,Text,SecretText,Text,Text,List of [Text],SecretText@,Text@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensFromCacheWithCertificate(Text,SecretText,SecretText,Text,Text,List of [Text],SecretText@,Text@):Boolean">
            <summary>
            Gets the access token from cache or a refreshed token via OAuth2 v2.0 protocol.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensWithCertificate(Text,Text,Text,Text,List of [Text],SecretText@,Text@):Boolean">
            <summary>
            Gets the access token via OAuth2 v2.0 protocol, authenticating as a service principal (as the app whose credentials you are providing).
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensWithCertificate(Text,SecretText,Text,Text,List of [Text],SecretText@,Text@):Boolean">
            <summary>
            Gets the access token via OAuth2 v2.0 protocol, authenticating as a service principal (as the app whose credentials you are providing).
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensWithCertificate(Text,Text,SecretText,Text,Text,List of [Text],SecretText@,Text@):Boolean">
            <summary>
            Gets the access token via OAuth2 v2.0 protocol, authenticating as a service principal (as the app whose credentials you are providing).
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireTokensWithCertificate(Text,SecretText,SecretText,Text,Text,List of [Text],SecretText@,Text@):Boolean">
            <summary>
            Gets the access token via OAuth2 v2.0 protocol, authenticating as a service principal (as the app whose credentials you are providing).
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal – App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfAccessTokenAndTokenCache(Text,Text,List of [Text],SecretText@,Text@):Boolean">
            <summary>
            Gets the access and refresh token via the On-Behalf-Of OAuth2 v2.0 protocol flow.
            </summary>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested .</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfTokensAndTokenCache(Text,Text,List of [Text],SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the access and refresh token via the On-Behalf-Of OAuth2 v2.0 protocol flow.
            </summary>
            <param name="OAuthAuthorityUrl">The identity authorization provider URL.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="TokenCache">Exit parameter containing the token cache acquired when the access token was requested .</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfTokenByTokenCache(Text,Text,List of [Text],Text,SecretText@,Text@):Boolean">
            <summary>
            Gets the token and token cache via the On-Behalf-Of OAuth2 v1.0 protocol flow.
            </summary>
            <param name="LoginHint">The user login hint, i.e. authentication email.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="TokenCache">The token cache acquired when the access token was requested .</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="NewTokenCache">Exit parameter containing the new token cache.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfTokensByTokenCache(Text,Text,List of [Text],Text,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the token and token cache via the On-Behalf-Of OAuth2 v1.0 protocol flow.
            </summary>
            <param name="LoginHint">The user login hint, i.e. authentication email.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="TokenCache">The token cache acquired when the access token was requested .</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="NewTokenCache">Exit parameter containing the new token cache.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfTokenByTokenCache(Text,SecretText,Text,Text,List of [Text],Text,SecretText@,Text@):Boolean">
            <summary>
            Gets the token and token cache via the On-Behalf-Of OAuth2 v1.0 protocol flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="LoginHint">The user login hint, i.e. authentication email.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="TokenCache">The token cache acquired when the access token was requested .</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="NewTokenCache">Exit parameter containing the new token cache.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.AcquireOnBehalfOfTokensByTokenCache(Text,SecretText,Text,Text,List of [Text],Text,SecretText@,Text@,Text@):Boolean">
            <summary>
            Gets the token and token cache via the On-Behalf-Of OAuth2 v1.0 protocol flow.
            </summary>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="LoginHint">The user login hint, i.e. authentication email.</param>
            <param name="RedirectURL">The redirectURL of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirectURLs you registered in the portal. If this parameter is empty, the default Business Central URL will be used.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <param name="TokenCache">The token cache acquired when the access token was requested .</param>
            <param name="AccessToken">Exit parameter containing the access token.</param>
            <param name="IdToken">Exit parameter containing the id token.</param>
            <param name="NewTokenCache">Exit parameter containing the new token cache.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.GetClaims(SecretText):JsonObject">
            <summary>
            Gets the Claims Set from a JSON Web Token (JWT).
            </summary>
            <param name="JWT">The JSON Web Token.</param>
            <returns>The JWT Claims Set.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.GetLastErrorMessage:Text">
            <summary>
            Get the last error message that happened during acquiring of an access token.
            </summary>
            <returns>The last error message that happened during acquiring of an access token.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth2.GetDefaultRedirectURL(Text@)">
            <summary>
            Returns the default Business Central redirectURL
            </summary>
        </member>
        <member name="O:Enum::System#Security#Authentication#Prompt Interaction">
            <summary>
            This enum contains the Prompt Interaction values possible for OAuth 2.0.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Prompt Interaction.None">
            <summary>
            No prompt parameter in the request
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Prompt Interaction.Login">
            <summary>
            The user should be prompted to reauthenticate.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Prompt Interaction.Select Account">
            <summary>
            The user is prompted to select an account, interrupting single sign on. The user may select an existing signed-in account, enter their credentials for a remembered account, or choose to use a different account altogether.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Prompt Interaction.Consent">
            <summary>
            User consent has been granted, but needs to be updated. The user should be prompted to consent.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Prompt Interaction.Admin Consent">
            <summary>
            An administrator should be prompted to consent on behalf of all users in their organization.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Security#Authentication#OAuthControlAddIn.StartAuthorization(Text)">
            <summary>
            Starts the authorization process.
            </summary>
            <param name="Url">The authentication request AuthRequestUrl.</param>
        </member>
        <member name="EV:">
            <summary>
            Event triggered when an authorization code is retreieved.
            </summary>
            <param name="AuthCode">The authorization code retrieved as part of the authentication process.</param>
        </member>
        <member name="EV:">
            <summary>
            Event triggered when the authorization process has failed.
            </summary>
            <param name="AuthError">The authorization error message received.</param>
            <param name="AuthErrorDescription">A description of the authorization error received.</param>
        </member>
        <member name="EV:">
            <summary>
            Event triggered when the Add-In is loaded and ready to use.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Security#Authentication#OAuthIntegration.StartAuthorization(Text)">
            <summary>
            Starts the authorization process.
            </summary>
            <param name="Url">The authentication request AuthRequestUrl.</param>
        </member>
        <member name="M:ControlAddIn::System#Security#Authentication#OAuthIntegration.Authorize(Text,Text,Text)">
            <summary>
            Creates link to start the authorization process
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event triggered when an authorization code is retreieved.
            </summary>
            <param name="AuthCode">The authorization code retrieved as part of the authentication process.</param>
        </member>
        <member name="EV:">
            <summary>
            Event triggered when the authorization process has failed.
            </summary>
            <param name="AuthError">The authorization error message received.</param>
            <param name="AuthErrorDescription">A description of the authorization error received.</param>
        </member>
        <member name="EV:">
            <summary>
            Event triggered when the Add-In is loaded and ready to use.
            </summary>
        </member>
        <member name="O:Enum::System#Security#Authentication#Http Request Type">
            <summary>
            This enum contains the REST Http Request types.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Http Request Type.GET">
            <summary>
            Specifies that the Http request type is GET.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Http Request Type.POST">
            <summary>
            Specifies that the Http request type is POST.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Http Request Type.PATCH">
            <summary>
            Specifies that the Http request type is PATCH.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Http Request Type.PUT">
            <summary>
            Specifies that the Http request type is PUT.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Http Request Type.DELETE">
            <summary>
            Specifies that the Http request type is DELETE.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Http Request Type.HEAD">
            <summary>
            Specifies that the Http request type is HEAD.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Authentication#Http Request Type.OPTIONS">
            <summary>
            Specifies that the Http request type is OPTIONS.
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#Authentication#OAuth">
            <summary>
            Contains methods supporting authentication via OAuth 1.0 protocol.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth.GetOAuthAccessToken(Text,Text,Text,Text,Text@,Text@):Boolean">
            <summary>
            Gets an OAuth request token from an OAuth provider.
            </summary>
            <param name="ConsumerKey">The OAuth consumer key. Cannot be null.</param>
            <param name="ConsumerSecret">The OAuth consumer secret. Cannot be null.</param>
            <param name="RequestTokenUrl">The URL of the OAuth provider. Cannot be null.</param>
            <param name="CallbackUrl">Local URL for OAuth callback. Cannot be null.</param>
            <param name="AccessTokenKey">The OAuth response token key.</param>
            <param name="AccessTokenSecret">The OAuth response token secret.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth.GetOAuthAccessToken(Text,Text,Text,Text,Text,Text,Text@,Text@):Boolean">
            <summary>
            Gets an OAuth access token from an OAuth provider.
            </summary>
            <param name="ConsumerKey">The OAuth consumer key. Cannot be null.</param>
            <param name="ConsumerSecret">The OAuth consumer secret. Cannot be null.</param>
            <param name="RequestTokenUrl">The URL of the OAuth provider. Cannot be null.</param>
            <param name="Verifier">An OAuth verifier string. Cannot be null.</param>
            <param name="RequestTokenKey">The OAuth request token key. Cannot be null.</param>
            <param name="RequestTokenSecret">The OAuth request token secret. Cannot be null.</param>
            <param name="AccessTokenKey">Exit parameter containing the OAuth response token key.</param>
            <param name="AccessTokenSecret">Exit parameter containing the OAuth response token secret.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth.GetAuthorizationHeader(Text,Text,Text,Text,Text,Enum::System#Security#Authentication#Http Request Type,Text@):Boolean">
            <summary>
            Gets the authorization header for an OAuth specific REST call.
            </summary>
            <param name="ConsumerKey">The OAuth consumer key. Cannot be null.</param>
            <param name="ConsumerSecret">The OAuth consumer secret. Cannot be null.</param>
            <param name="RequestTokenKey">The OAuth response token key. Cannot be null.</param>
            <param name="RequestTokenSecret">The OAuth response token secret. Cannot be null.</param>
            <param name="RequestUrl">The REST URL. Cannot be null.</param>
            <param name="RequestMethod">The REST method call with capital letters(POST, GET, PUT, PATCH, DELETE).</param>
            <param name="AuthorizationHeader">Exit parameter containing the requested OAuth specific authorization header.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth.GetOAuthAccessToken(SecretText,SecretText,Text,Text,SecretText@,SecretText@):Boolean">
            <summary>
            Gets an OAuth request token from an OAuth provider.
            </summary>
            <param name="ConsumerKey">The OAuth consumer key. Cannot be null.</param>
            <param name="ConsumerSecret">The OAuth consumer secret. Cannot be null.</param>
            <param name="RequestTokenUrl">The URL of the OAuth provider. Cannot be null.</param>
            <param name="CallbackUrl">Local URL for OAuth callback. Cannot be null.</param>
            <param name="AccessTokenKey">The OAuth response token key.</param>
            <param name="AccessTokenSecret">The OAuth response token secret.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth.GetOAuthAccessToken(SecretText,SecretText,Text,Text,Text,Text,SecretText@,SecretText@):Boolean">
            <summary>
            Gets an OAuth access token from an OAuth provider.
            </summary>
            <param name="ConsumerKey">The OAuth consumer key. Cannot be null.</param>
            <param name="ConsumerSecret">The OAuth consumer secret. Cannot be null.</param>
            <param name="RequestTokenUrl">The URL of the OAuth provider. Cannot be null.</param>
            <param name="Verifier">An OAuth verifier string. Cannot be null.</param>
            <param name="RequestTokenKey">The OAuth request token key. Cannot be null.</param>
            <param name="RequestTokenSecret">The OAuth request token secret. Cannot be null.</param>
            <param name="AccessTokenKey">Exit parameter containing the OAuth response token key.</param>
            <param name="AccessTokenSecret">Exit parameter containing the OAuth response token secret.</param>
        </member>
        <member name="M:Codeunit::System#Security#Authentication#OAuth.GetAuthorizationHeader(SecretText,SecretText,SecretText,SecretText,Text,Enum::System#Security#Authentication#Http Request Type,SecretText@):Boolean">
            <summary>
            Gets the authorization header for an OAuth specific REST call.
            </summary>
            <param name="ConsumerKey">The OAuth consumer key. Cannot be null.</param>
            <param name="ConsumerSecret">The OAuth consumer secret. Cannot be null.</param>
            <param name="RequestTokenKey">The OAuth response token key. Cannot be null.</param>
            <param name="RequestTokenSecret">The OAuth response token secret. Cannot be null.</param>
            <param name="RequestUrl">The REST URL. Cannot be null.</param>
            <param name="RequestMethod">The REST method call with capital letters(POST, GET, PUT, PATCH, DELETE).</param>
            <param name="AuthorizationHeader">Exit parameter containing the requested OAuth specific authorization header.</param>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#CertificateRequest">
            <summary>
            Provides helper functionality for creating Certificate Signing Requests (CSR:s) and Self Signed Certificates.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#CertificateRequest.InitializeRSA(Integer,Boolean,Text@)">
            <summary>
            Initializes a new instance of RSACryptoServiceProvider with the specified key size and returns the key as an XML string.
            </summary>
            <param name="KeySize">The size of the key in bits.</param>
            <param name="IncludePrivateParameters">True to include a public and private RSA key in KeyAsXmlString. False to include only the public key.</param>
            <param name="KeyAsXmlString">Returns an XML string that contains the key of the RSA object that was created.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#CertificateRequest.InitializeRSA(Integer,Boolean,SecretText@)">
            <summary>
            Initializes a new instance of RSACryptoServiceProvider with the specified key size and returns the key as an XML string.
            </summary>
            <param name="KeySize">The size of the key in bits.</param>
            <param name="IncludePrivateParameters">True to include a public and private RSA key in KeyAsXmlString. False to include only the public key.</param>
            <param name="KeyAsXmlString">Returns an XML string that contains the key of the RSA object that was created.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#CertificateRequest.InitializeCertificateRequestUsingRSA(Text,Enum::System#Security#Encryption#Hash Algorithm,Enum::System#Security#Encryption#RSA Signature Padding)">
            <summary>
            Initializes a new instance of the CertificateRequest with the specified parameters and the initialized RSA key.
            </summary>
            <param name="SubjectName">The string representation of the subject name for the certificate or certificate request.</param>
            <param name="HashAlgorithm">The hash algorithm to use when signing the certificate or certificate request.</param>
            <param name="RSASignaturePaddingMode">The RSA signature padding to apply if self-signing or being signed with an X509Certificate2.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#CertificateRequest.AddX509BasicConstraintToCertificateRequest(Boolean,Boolean,Integer,Boolean)">
            <summary>
            Adds a X509BasicConstraint to the Certificate Request. See https://learn.microsoft.com/dotnet/api/system.security.cryptography.x509certificates.x509basicconstraintsextension
            </summary>
            <param name="CertificateAuthority">True if the certificate is from a certificate authority (CA). Otherwise, false.</param>
            <param name="HasPathLengthConstraint">True if the certificate has a restriction on the number of path levels it allows; otherwise, false.</param>
            <param name="PathLengthConstraint">The number of levels allowed in a certificate's path.</param>
            <param name="Critical">True if the extension is critical. Otherwise, false.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#CertificateRequest.AddX509EnhancedKeyUsageToCertificateRequest(List of [Text],Boolean)">
            <summary>
            Adds a X509EnhancedKeyUsage to the Certificate Request. See https://learn.microsoft.com/dotnet/api/system.security.cryptography.x509certificates.x509enhancedkeyusageextension
            </summary>
            <param name="OidValues">List of Oid values (for example '1.3.6.1.5.5.7.3.2') to add.</param>
            <param name="Critical">True if the extension is critical; otherwise, false.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#CertificateRequest.AddX509KeyUsageToCertificateRequest(Integer,Boolean)">
            <summary>
            Adds a X509KeyUsage to the certificate request. See https://learn.microsoft.com/dotnet/api/system.security.cryptography.x509certificates.x509keyusageextension
            </summary>
            <param name="X509KeyUsageFlags">The sum of all flag values that are to be added. See https://learn.microsoft.com/dotnet/api/system.security.cryptography.x509certificates.x509keyusageflags</param>
            <param name="Critical">True if the extension is critical; otherwise, false.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#CertificateRequest.CreateSigningRequest(Text@)">
            <summary>
            Creates an ASN.1 DER-encoded PKCS#10 CertificationRequest and returns a Base 64 encoded string.
            </summary>
            <param name="SigningRequestPemString">Returns the SigningRequest in Base 64 string format.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#CertificateRequest.GetX509CertificateRequestExtensionCount:Integer">
            <summary>
            Gets how many X509Extensions have been added to the X509CertificateRequest.
            </summary>
            <returns>The number of added extensions.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#CertificateRequest.CreateSigningRequest(OutStream)">
            <summary>
            Creates an ASN.1 DER-encoded PKCS#10 CertificationRequest and returns it in an OutStream.
            </summary>
            <param name="SigningRequestOutStream">OutStream.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#CertificateRequest.CreateSelfSigned(DateTime,DateTime,Enum::System#Security#Encryption#X509 Content Type,Text@)">
            <summary>
            Creates a self-signed certificate using the established subject, key, and optional extensions.
            </summary>
            <param name="NotBefore">The oldest date and time when this certificate is considered valid.</param>
            <param name="NotAfter">The date and time when this certificate is no longer considered valid.</param>
            <param name="X509ContentType">Specifies the format of an X.509 certificate.</param>
            <param name="CertBase64Value">Returns the certificate value encoded using the Base64 algorithm.</param>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#Cryptography Management">
            <summary>
            Provides helper functions for encryption and hashing.
            For encryption in an on-premises versions, use it to turn encryption on or off, and import and export the encryption key.
            Encryption is always turned on for online versions.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.EncryptText(Text[215]):Text">
            <summary>
            Returns plain text as an encrypted value.
            </summary>
            <param name="InputString">The value to encrypt.</param>
            <returns>Encrypted value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.Decrypt(Text):Text">
            <summary>
            Returns encrypted text as plain text.
            </summary>
            <param name="EncryptedString">The value to decrypt.</param>
            <returns>Plain text.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.IsEncryptionEnabled:Boolean">
            <summary>
            Checks if Encryption is enabled.
            </summary>
            <returns>True if encryption is enabled, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.IsEncryptionPossible:Boolean">
            <summary>
            Checks whether the encryption key is present, which only works if encryption is enabled.
            </summary>
            <returns>True if the encryption key exists, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GetEncryptionIsNotActivatedQst:Text">
            <summary>
            Gets the recommended question to activate encryption.
            </summary>
            <returns>String of a recommended question to activate encryption.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.EnableEncryption(Boolean)">
            <summary>
            Enables encryption.
            </summary>
            <param name="Silent">Enables encryption silently if true, otherwise will prompt the user.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.DisableEncryption(Boolean)">
            <summary>
            Disables encryption.
            </summary>
            <param name="Silent">Turns off encryption silently if true, otherwise will prompt the user.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.OnBeforeEnableEncryptionOnPrem">
            <summary>
            Publishes an event that allows subscription when enabling encryption.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.OnBeforeDisableEncryptionOnPrem">
            <summary>
            Publishes an event that allows subscription when disabling encryption.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GenerateHash(Text,Option):Text">
            <summary>
            Generates a hash from a string based on the provided hash algorithm.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="HashAlgorithmType">The available hash algorithms include MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <returns>Hashed value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GenerateHash(Text,Text,Option):Text">
            <summary>
            Generates a keyed hash from a string based on provided hash algorithm and key.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="Key">Key to use in the hash algorithm.</param>
            <param name="HashAlgorithmType">The available hash algorithms include HMACMD5, HMACSHA1, HMACSHA256, HMACSHA384, and HMACSHA512.</param>
            <returns>Hashed value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GenerateHash(Text,SecretText,Option):Text">
            <summary>
            Generates a keyed hash from a string based on provided hash algorithm and key.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="Key">Key to use in the hash algorithm.</param>
            <param name="HashAlgorithmType">The available hash algorithms include HMACMD5, HMACSHA1, HMACSHA256, HMACSHA384, and HMACSHA512.</param>
            <returns>Hashed value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GenerateHash(InStream,Option):Text">
            <summary>
            Generates a hash from a stream based on the provided hash algorithm.
            </summary>
            <param name="InputInStream">Input string.</param>
            <param name="HashAlgorithmType">The available hash algorithms include HMACMD5, HMACSHA1, HMACSHA256, HMACSHA384, and HMACSHA512.</param>
            <returns>Base64 hashed value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GenerateHashAsBase64String(Text,Option):Text">
            <summary>
            Generates a base64 encoded hash from a string based on provided hash algorithm.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="HashAlgorithmType">The available hash algorithms include MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <returns>Base64 hashed value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GenerateHashAsBase64String(Text,Text,Option):Text">
            <summary>
            Generates a keyed base64 encoded hash from a string based on provided hash algorithm and key.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="Key">Key to use in the hash algorithm.</param>
            <param name="HashAlgorithmType">The available hash algorithms include HMACMD5, HMACSHA1, HMACSHA256, HMACSHA384, and HMACSHA512.</param>
            <returns>Base64 hashed value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GenerateHashAsBase64String(Text,SecretText,Option):Text">
            <summary>
            Generates a keyed base64 encoded hash from a string based on provided hash algorithm and key.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="Key">Key to use in the hash algorithm.</param>
            <param name="HashAlgorithmType">The available hash algorithms include HMACMD5, HMACSHA1, HMACSHA256, HMACSHA384, and HMACSHA512.</param>
            <returns>Base64 hashed value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GenerateBase64KeyedHashAsBase64String(Text,Text,Option):Text">
            <summary>
            Generates keyed base64 encoded hash from provided string based on provided hash algorithm and base64 key.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="Key">Key to use in the hash algorithm.</param>
            <param name="HashAlgorithmType">The available hash algorithms include HMACMD5, HMACSHA1, HMACSHA256, HMACSHA384, and HMACSHA512.</param>
            <returns>Base64 hashed value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GenerateBase64KeyedHashAsBase64String(Text,SecretText,Option):Text">
            <summary>
            Generates keyed base64 encoded hash from provided string based on provided hash algorithm and base64 key.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="Key">Key to use in the hash algorithm.</param>
            <param name="HashAlgorithmType">The available hash algorithms include HMACMD5, HMACSHA1, HMACSHA256, HMACSHA384, and HMACSHA512.</param>
            <returns>Base64 hashed value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GenerateBase64KeyedHash(Text,Text,Option):Text">
            <summary>
            Generates keyed base64 encoded hash from provided string based on provided hash algorithm and base64 key.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="Key">Key to use in the hash algorithm.</param>
            <param name="HashAlgorithmType">The available hash algorithms include HMACMD5, HMACSHA1, HMACSHA256, HMACSHA384, and HMACSHA512.</param>
            <returns>Hashed value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.GenerateBase64KeyedHash(Text,SecretText,Option):Text">
            <summary>
            Generates keyed base64 encoded hash from provided string based on provided hash algorithm and base64 key.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="Key">Key to use in the hash algorithm.</param>
            <param name="HashAlgorithmType">The available hash algorithms include HMACMD5, HMACSHA1, HMACSHA256, HMACSHA384, and HMACSHA512.</param>
            <returns>Hashed value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.SignData(Text,Text,Enum::System#Security#Encryption#Hash Algorithm,OutStream)">
            <summary>
            Computes the hash value of the specified string and signs it.
            </summary>
            <param name="InputString">Input string for signing.</param>
            <param name="XmlString">The private key to use in the hash algorithm.</param>
            <param name="HashAlgorithm">The available hash algorithms are MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <param name="SignatureOutStream">The stream to write the signature for the specified string.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.SignData(Text,SecretText,Enum::System#Security#Encryption#Hash Algorithm,OutStream)">
            <summary>
            Computes the hash value of the specified string and signs it.
            </summary>
            <param name="InputString">Input string for signing.</param>
            <param name="XmlString">The private key to use in the hash algorithm.</param>
            <param name="HashAlgorithm">The available hash algorithms are MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <param name="SignatureOutStream">The stream to write the signature for the specified string.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.SignData(InStream,Text,Enum::System#Security#Encryption#Hash Algorithm,OutStream)">
            <summary>
            Computes the hash value of the specified data and signs it.
            </summary>
            <param name="DataInStream">The stream of input data.</param>
            <param name="XmlString">The private key to use in the hash algorithm.</param>
            <param name="HashAlgorithm">The available hash algorithms are MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <param name="SignatureOutStream">The stream to write the signature for the specified input data.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.SignData(InStream,SecretText,Enum::System#Security#Encryption#Hash Algorithm,OutStream)">
            <summary>
            Computes the hash value of the specified data and signs it.
            </summary>
            <param name="DataInStream">The stream of input data.</param>
            <param name="XmlString">The private key to use in the hash algorithm.</param>
            <param name="HashAlgorithm">The available hash algorithms are MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <param name="SignatureOutStream">The stream to write the signature for the specified input data.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.SignData(Text,Codeunit::System#Security#Encryption#Signature Key,Enum::System#Security#Encryption#Hash Algorithm,OutStream)">
            <summary>
            Computes the hash value of the specified string and signs it.
            </summary>
            <param name="InputString">Input string for signing.</param>
            <param name="SignatureKey">The private key to use in the hash algorithm.</param>
            <param name="HashAlgorithm">The available hash algorithms are MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <param name="SignatureOutStream">The stream to write the signature for the specified string.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.SignData(InStream,Codeunit::System#Security#Encryption#Signature Key,Enum::System#Security#Encryption#Hash Algorithm,OutStream)">
            <summary>
            Computes the hash value of the specified data and signs it.
            </summary>
            <param name="DataInStream">The stream of input data.</param>
            <param name="SignatureKey">The private key to use in the hash algorithm.</param>
            <param name="HashAlgorithm">The available hash algorithms are MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <param name="SignatureOutStream">The stream to write the signature for the specified input data.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.SignData(Text,SecretText,Enum::System#Security#Encryption#Hash Algorithm,Enum::System#Security#Encryption#RSA Signature Padding,OutStream)">
            <summary>
            Computes the hash value of the specified string and signs it.
            </summary>
            <param name="InputString">Input string for signing.</param>
            <param name="XmlString">The private key to use in the hash algorithm.</param>
            <param name="HashAlgorithm">The available hash algorithms are MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <param name="RSASignaturePadding">The padding mode to use for the RSA signature.</param>
            <param name="SignatureOutStream">The stream to write the signature for the specified string.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.VerifyData(Text,Text,Enum::System#Security#Encryption#Hash Algorithm,InStream):Boolean">
            <summary>
            Verifies that a digital signature is valid.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="XmlString">The public key to use in the hash algorithm.</param>
            <param name="HashAlgorithm">The available hash algorithms are MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <param name="SignatureInStream">The stream of signature.</param>
            <returns>True if the signature is valid; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.VerifyData(InStream,Text,Enum::System#Security#Encryption#Hash Algorithm,InStream):Boolean">
            <summary>
            Verifies that a digital signature is valid.
            </summary>
            <param name="DataInStream">The stream of input data.</param>
            <param name="XmlString">The public key to use in the hash algorithm.</param>
            <param name="HashAlgorithm">The available hash algorithms are MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <param name="SignatureInStream">The stream of signature.</param>
            <returns>True if the signature is valid; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.VerifyData(Text,Codeunit::System#Security#Encryption#Signature Key,Enum::System#Security#Encryption#Hash Algorithm,InStream):Boolean">
            <summary>
            Verifies that a digital signature is valid.
            </summary>
            <param name="InputString">Input string.</param>
            <param name="SignatureKey">The private key to use in the hash algorithm.</param>
            <param name="HashAlgorithm">The available hash algorithms are MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <param name="SignatureInStream">The stream of signature.</param>
            <returns>True if the signature is valid; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Cryptography Management.VerifyData(InStream,Codeunit::System#Security#Encryption#Signature Key,Enum::System#Security#Encryption#Hash Algorithm,InStream):Boolean">
            <summary>
            Verifies that a digital signature is valid.
            </summary>
            <param name="DataInStream">The stream of input data.</param>
            <param name="SignatureKey">The private key to use in the hash algorithm.</param>
            <param name="HashAlgorithm">The available hash algorithms are MD5, SHA1, SHA256, SHA384, and SHA512.</param>
            <param name="SignatureInStream">The stream of signature.</param>
            <returns>True if the signature is valid; otherwise, false.</returns>
        </member>
        <member name="O:Page::System#Security#Encryption#Data Encryption Management">
            <summary>
            Exposes functionality that allows super users for on-premises versions to enable or disable encryption, import, export or change the encryption key.
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#DESCryptoServiceProvider">
            <summary>
            Provides helper functions for the Data Encryption Standard (DES)
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DESCryptoServiceProvider.EncryptText(Text,Text,Text):Text">
            <summary>
            Encrypts text with DotNet Cryptography.DESCryptoServiceProvider
            </summary>
            <remark>
            For more information, visit https://learn.microsoft.com/dotnet/api/system.security.cryptography.descryptoserviceprovider.
            </remark>
            <param name="Password">Represents the password to be used to initialize a new instance of DotNet System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="Salt">Represents the salt to be used to initialize a new instance of System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="DecryptedText">Represents the text to encrypt</param>
            <returns name="EncryptedText">Returns the encrypted text</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DESCryptoServiceProvider.DecryptText(Text,Text,Text):Text">
            <summary>
            Decrypts text with DotNet Cryptography.DESCryptoServiceProvider
            </summary>
            <param name="Password">Represents the password to be used to initialize a new instance of DotNet System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="Salt">Represents the salt to be used to initialize a new instance of System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="EncryptedText">Represents the text to decrypt</param>
            <returns name="DecryptedText">Returns the decrypted text</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DESCryptoServiceProvider.EncryptStream(Text,Text,InStream,OutStream@)">
            <summary>
            Encrypts data in stream with DotNet Cryptography.DESCryptoServiceProvider
            </summary>
            <param name="Password">Represents the password to be used to initialize a new instance of Rfc2898DeriveBytes</param>
            <param name="Salt">Represents the salt to be used to initialize a new instance of System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="InputInstream">Represents the input instream data to encrypt</param>
            <param name="OutputOutstream">Represents the output instream encrypted data</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DESCryptoServiceProvider.DecryptStream(Text,Text,InStream,OutStream@)">
            <summary>
            Decrypts data in stream with DotNet Cryptography.DESCryptoServiceProvider
            </summary>
            <param name="Password">Represents the password to be used to initialize a new instance of Rfc2898DeriveBytes</param>
            <param name="Salt">Represents the salt to be used to initialize a new instance of System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="InputInstream">Represents the input instream data to decrypt</param>
            <param name="OutputOutstream">Represents the output instream decrypted data</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DESCryptoServiceProvider.EncryptText(Text,SecretText,Text):Text">
            <summary>
            Encrypts text with DotNet Cryptography.DESCryptoServiceProvider
            </summary>
            <remark>
            For more information, visit https://learn.microsoft.com/dotnet/api/system.security.cryptography.descryptoserviceprovider.
            </remark>
            <param name="Password">Represents the password to be used to initialize a new instance of DotNet System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="Salt">Represents the salt to be used to initialize a new instance of System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="DecryptedText">Represents the text to encrypt</param>
            <returns name="EncryptedText">Returns the encrypted text</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DESCryptoServiceProvider.DecryptText(Text,SecretText,Text):Text">
            <summary>
            Decrypts text with DotNet Cryptography.DESCryptoServiceProvider
            </summary>
            <param name="Password">Represents the password to be used to initialize a new instance of DotNet System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="Salt">Represents the salt to be used to initialize a new instance of System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="EncryptedText">Represents the text to decrypt</param>
            <returns name="DecryptedText">Returns the decrypted text</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DESCryptoServiceProvider.EncryptStream(SecretText,Text,InStream,OutStream@)">
            <summary>
            Encrypts data in stream with DotNet Cryptography.DESCryptoServiceProvider
            </summary>
            <param name="Password">Represents the password to be used to initialize a new instance of Rfc2898DeriveBytes</param>
            <param name="Salt">Represents the salt to be used to initialize a new instance of System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="InputInstream">Represents the input instream data to encrypt</param>
            <param name="OutputOutstream">Represents the output instream encrypted data</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DESCryptoServiceProvider.DecryptStream(SecretText,Text,InStream,OutStream@)">
            <summary>
            Decrypts data in stream with DotNet Cryptography.DESCryptoServiceProvider
            </summary>
            <param name="Password">Represents the password to be used to initialize a new instance of Rfc2898DeriveBytes</param>
            <param name="Salt">Represents the salt to be used to initialize a new instance of System.Security.Cryptography.Rfc2898DeriveBytes</param>
            <param name="InputInstream">Represents the input instream data to decrypt</param>
            <param name="OutputOutstream">Represents the output instream decrypted data</param>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#DSACryptoServiceProvider">
            <summary>
            Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the DSA algorithm.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DSACryptoServiceProvider.ToXmlString(Boolean):Text">
            <summary>
            Creates and returns an XML string representation of the current DSA object.
            </summary>
            <param name="IncludePrivateParameters">true to include private parameters; otherwise, false.</param>
            <returns>An XML string encoding of the current DSA object.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DSACryptoServiceProvider.SignData(Text,InStream,Enum::System#Security#Encryption#Hash Algorithm,OutStream)">
            <summary>
            Computes the hash value of the specified stream using the specified hash algorithm and signs the resulting hash value.
            </summary>
            <param name="XmlString">The XML string containing DSA key information.</param>
            <param name="DataInStream">The input stream to hash and sign.</param>
            <param name="HashAlgorithm">The hash algorithm to use to create the hash value.</param>
            <param name="SignatureOutStream">The DSA signature stream for the specified data.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DSACryptoServiceProvider.VerifyData(Text,InStream,Enum::System#Security#Encryption#Hash Algorithm,InStream):Boolean">
            <summary>
            Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and comparing it to the provided signature.
            </summary>
            <param name="XmlString">The XML string containing DSA key information.</param>
            <param name="DataInStream">The input stream of data that was signed.</param>
            <param name="HashAlgorithm">The name of the hash algorithm used to create the hash value of the data.</param>
            <param name="SignatureInStream">The stream of signature data to be verified.</param>
            <returns>True if the signature is valid; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DSACryptoServiceProvider.SignData(SecretText,InStream,Enum::System#Security#Encryption#Hash Algorithm,OutStream)">
            <summary>
            Computes the hash value of the specified stream using the specified hash algorithm and signs the resulting hash value.
            </summary>
            <param name="XmlString">The XML string containing DSA key information.</param>
            <param name="DataInStream">The input stream to hash and sign.</param>
            <param name="HashAlgorithm">The hash algorithm to use to create the hash value.</param>
            <param name="SignatureOutStream">The DSA signature stream for the specified data.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#DSACryptoServiceProvider.VerifyData(SecretText,InStream,Enum::System#Security#Encryption#Hash Algorithm,InStream):Boolean">
            <summary>
            Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and comparing it to the provided signature.
            </summary>
            <param name="XmlString">The XML string containing DSA key information.</param>
            <param name="DataInStream">The input stream of data that was signed.</param>
            <param name="HashAlgorithm">The name of the hash algorithm used to create the hash value of the data.</param>
            <param name="SignatureInStream">The stream of signature data to be verified.</param>
            <returns>True if the signature is valid; otherwise, false.</returns>
        </member>
        <member name="O:Enum::System#Security#Encryption#Hash Algorithm">
            <summary>
            Specifies the types of hash algorithm.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#Hash Algorithm.MD5">
            <summary>
            Specifies the MD5 hash algorithm
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#Hash Algorithm.SHA1">
            <summary>
            Specifies the SHA1 hash algorithm
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#Hash Algorithm.SHA256">
            <summary>
            Specifies the SHA256 hash algorithm
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#Hash Algorithm.SHA384">
            <summary>
            Specifies the SHA384 hash algorithm
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#Hash Algorithm.SHA512">
            <summary>
            Specifies the SHA512 hash algorithm
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#Rfc2898DeriveBytes">
            <summary>
            Provides helper functions for the Advanced Encryption Standard.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rfc2898DeriveBytes.HashRfc2898DeriveBytes(Text,Text,Integer,Option):Text">
            <summary>
            Generates a base64 encoded hash from a string based on the provided hash algorithm.
            </summary>
            <param name="InputString">Represents the input to be hashed</param>
            <param name="Salt">The salt used to derive the key</param>
            <param name="NoOfBytes">The number of pseudo-random key bytes to generate</param>
            <param name="HashAlgorithmType">Represents the HashAlgorithmType, which returns the encrypted hash in the desired algorithm type</param>
            <returns>Hash of input</returns>
            <error>If generating the hash fails, it throws a dotnet error.</error>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#Rijndael Cryptography">
            <summary>
            Provides helper functions for the Advanced Encryption Standard.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.InitRijndaelProvider">
            <summary>
            Initializes a new instance of the RijndaelManaged class with default values.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.InitRijndaelProvider(Text)">
            <summary>
            Initializes a new instance of the RijndaelManaged class providing the encryption key.
            </summary>
            <param name="EncryptionKey">Represents the secret key for the symmetric algorithm.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.InitRijndaelProvider(Text,Integer)">
            <summary>
            Initializes a new instance of the RijndaelManaged class providing the encryption key and block size.
            </summary>
            <param name="EncryptionKey">Represents the secret key for the symmetric algorithm.</param>
            <param name="BlockSize">Represents the block size, in bits, of the cryptographic operation.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.InitRijndaelProvider(Text,Integer,Text)">
            <summary>
            Initializes a new instance of the RijndaelManaged class providing the encryption key, block size and cipher mode.
            </summary>
            <param name="EncryptionKey">Represents the secret key for the symmetric algorithm.</param>
            <param name="BlockSize">Represents the block size, in bits, of the cryptographic operation.</param>
            <param name="CipherMode">Represents the cipher mode used in the symmetric algorithm. Valid values: ECB,CBC,CFB,CTS,OFB</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.InitRijndaelProvider(Text,Integer,Text,Text)">
            <summary>
            Initializes a new instance of the RijndaelManaged class providing the encryption key, block size, cipher mode and padding mode.
            </summary>
            <param name="EncryptionKey">Represents the secret key for the symmetric algorithm.</param>
            <param name="BlockSize">Represents the block size, in bits, of the cryptographic operation.</param>
            <param name="CipherMode">Represents the cipher mode used in the symmetric algorithm. Valid values: ECB,CBC,CFB,CTS,OFB</param>
            <param name="PaddingMode">Represents the padding mode used in the symmetric algorithm.. Valid values: None,ANSIX923,ISO10126,PKCS7,Zeros</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.InitRijndaelProvider(SecretText)">
            <summary>
            Initializes a new instance of the RijndaelManaged class providing the encryption key.
            </summary>
            <param name="EncryptionKey">Represents the secret key for the symmetric algorithm.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.InitRijndaelProvider(SecretText,Integer)">
            <summary>
            Initializes a new instance of the RijndaelManaged class providing the encryption key and block size.
            </summary>
            <param name="EncryptionKey">Represents the secret key for the symmetric algorithm.</param>
            <param name="BlockSize">Represents the block size, in bits, of the cryptographic operation.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.InitRijndaelProvider(SecretText,Integer,Text)">
            <summary>
            Initializes a new instance of the RijndaelManaged class providing the encryption key, block size and cipher mode.
            </summary>
            <param name="EncryptionKey">Represents the secret key for the symmetric algorithm.</param>
            <param name="BlockSize">Represents the block size, in bits, of the cryptographic operation.</param>
            <param name="CipherMode">Represents the cipher mode used in the symmetric algorithm. Valid values: ECB,CBC,CFB,CTS,OFB</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.InitRijndaelProvider(SecretText,Integer,Text,Text)">
            <summary>
            Initializes a new instance of the RijndaelManaged class providing the encryption key, block size, cipher mode and padding mode.
            </summary>
            <param name="EncryptionKey">Represents the secret key for the symmetric algorithm.</param>
            <param name="BlockSize">Represents the block size, in bits, of the cryptographic operation.</param>
            <param name="CipherMode">Represents the cipher mode used in the symmetric algorithm. Valid values: ECB,CBC,CFB,CTS,OFB</param>
            <param name="PaddingMode">Represents the padding mode used in the symmetric algorithm.. Valid values: None,ANSIX923,ISO10126,PKCS7,Zeros</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.SetBlockSize(Integer)">
            <summary>
            Sets a new block size value for the RijndaelManaged class.
            </summary>
            <param name="BlockSize">Represents the block size, in bits, of the cryptographic operation.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.SetCipherMode(Text)">
            <summary>
            Sets a new cipher mode value for the RijndaelManaged class.
            </summary>
            <param name="CipherMode">Represents the cipher mode used in the symmetric algorithm. Valid values: ECB,CBC,CFB,CTS,OFB</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.SetPaddingMode(Text)">
            <summary>
            Sets a new padding mode value for the RijndaelManaged class.
            </summary>
            <param name="PaddingMode">Represents the padding mode used in the symmetric algorithm.. Valid values: None,ANSIX923,ISO10126,PKCS7,Zeros</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.SetEncryptionData(Text,Text)">
            <summary>
            Sets the key and vector for the RijndaelManaged class.
            </summary>
            <param name="KeyAsBase64">Represents the secret key for the symmetric algorithm encoded as Base64 Text</param>
            <param name="VectorAsBase64">Represents the initialization vector (IV) for the symmetric algorithm encoded as Base64 Text</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.SetEncryptionData(SecretText,Text)">
            <summary>
            Sets the key and vector for the RijndaelManaged class.
            </summary>
            <param name="KeyAsBase64">Represents the secret key for the symmetric algorithm encoded as Base64 Text</param>
            <param name="VectorAsBase64">Represents the initialization vector (IV) for the symmetric algorithm encoded as Base64 Text</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.IsValidKeySize(Integer):Boolean">
            <summary>
            Determines whether the specified key size is valid for the current algorithm.
            </summary>
            <param name="KeySize">Key Size.</param>
            <returns>True if the key size is valid; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.GetLegalKeySizeValues(Integer@,Integer@,Integer@)">
            <summary>
            Specifies the key sizes, in bits, that are supported by the symmetric algorithm.
            </summary>
            <param name="MinSize">Minimum Size in bits</param>
            <param name="MaxSize">Maximum Size in bits</param>
            <param name="SkipSize">Skip Size in bits</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.GetLegalBlockSizeValues(Integer@,Integer@,Integer@)">
            <summary>
            Specifies the block sizes, in bits, that are supported by the symmetric algorithm.
            </summary>
            <param name="MinSize">Minimum Size in bits</param>
            <param name="MaxSize">Maximum Size in bits</param>
            <param name="SkipSize">Skip Size in bits</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.GetEncryptionData(Text@,Text@)">
            <summary>
            Gets the key and vector from the RijndaelManaged class
            </summary>
            <param name="KeyAsBase64">Represents the secret key for the symmetric algorithm encoded as Base64 Text</param>
            <param name="VectorAsBase64">Represents the initialization vector (IV) for the symmetric algorithm encoded as Base64 Text</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.GetEncryptionData(SecretText@,Text@)">
            <summary>
            Gets the key and vector from the RijndaelManaged class
            </summary>
            <param name="KeyAsBase64">Represents the secret key for the symmetric algorithm encoded as Base64 Text</param>
            <param name="VectorAsBase64">Represents the initialization vector (IV) for the symmetric algorithm encoded as Base64 Text</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.Encrypt(Text):Text">
            <summary>
            Returns plain text as an encrypted value.
            </summary>
            <param name="PlainText">The value to encrypt.</param>
            <returns>Encrypted value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.Encrypt(SecretText):SecretText">
            <summary>
            Returns plain text as an encrypted value.
            </summary>
            <param name="PlainText">The value to encrypt.</param>
            <returns>Encrypted value.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.Decrypt(Text):Text">
            <summary>
            Returns encrypted text as plain text.
            </summary>
            <param name="CryptedText">The value to decrypt.</param>
            <returns>Plain text.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Rijndael Cryptography.Decrypt(SecretText):SecretText">
            <summary>
            Returns encrypted text as plain text.
            </summary>
            <param name="CryptedText">The value to decrypt.</param>
            <returns>Plain text.</returns>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#RSA">
            <summary>
            Performs asymmetric encryption and digital signature using the implementation of the RSA class.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSA.InitializeRSA(Integer)">
            <summary>
            Initializes a new instance of RSA with the specified key size.
            </summary>
            <param name="KeySize">The size of the key in bits.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSA.ToSecretXmlString(Boolean):SecretText">
            <summary>
            Creates and returns an XML string containing the key of the current RSA object.
            </summary>
            <param name="IncludePrivateParameters">true to include a public and private RSA key; false to include only the public key.</param>
            <returns>An XML string containing the key of the current RSA object.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSA.SignData(SecretText,InStream,Enum::System#Security#Encryption#Hash Algorithm,Enum::System#Security#Encryption#RSA Signature Padding,OutStream)">
            <summary>
            Computes the hash value of the specified data and signs it.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="DataInStream">The input stream to hash and sign.</param>
            <param name="HashAlgorithm">The hash algorithm to use to create the hash value.</param>
            <param name="RSASignaturePadding">The padding mode to use for the RSA signature.</param>
            <param name="SignatureOutStream">The RSA signature stream for the specified data.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSA.VerifyData(SecretText,InStream,Enum::System#Security#Encryption#Hash Algorithm,Enum::System#Security#Encryption#RSA Signature Padding,InStream):Boolean">
            <summary>
            Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the hash value of the provided data.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="DataInStream">The input stream of data that was signed.</param>
            <param name="HashAlgorithm">The name of the hash algorithm used to create the hash value of the data.</param>
            <param name="RSASignaturePadding">The padding mode to use for the RSA signature.</param>
            <param name="SignatureInStream">The stream of signature data to be verified.</param>
            <returns>True if the signature is valid; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSA.Encrypt(SecretText,InStream,Boolean,OutStream)">
            <summary>
            Encrypts the specified text with the RSA algorithm.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="PlainTextInStream">The input stream to encrypt.</param>
            <param name="OaepPadding">True to perform RSA encryption using OAEP padding; otherwise, false to use PKCS#1 padding.</param>
            <param name="EncryptedTextOutStream">The RSA encryption stream for the specified text.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSA.Decrypt(SecretText,InStream,Boolean,OutStream)">
            <summary>
            Decrypts the specified text that was previously encrypted with the RSA algorithm.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="EncryptedTextInStream">The input stream to decrypt.</param>
            <param name="OaepPadding">true to perform RSA encryption using OAEP padding; otherwise, false to use PKCS#1 padding.</param>
            <param name="DecryptedTextOutStream">The RSA decryption stream for the specified text.</param>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#RSACryptoServiceProvider">
            <summary>
            Performs asymmetric encryption and decryption using the implementation of the RSA algorithm provided by the cryptographic service provider (CSP).
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.InitializeRSA(Integer)">
            <summary>
            Initializes a new instance of RSACryptoServiceProvider with the specified key size and returns the key as an XML string.
            </summary>
            <param name="KeySize">The size of the key in bits.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.ToXmlString(Boolean):Text">
            <summary>
            Creates and returns an XML string containing the key of the current RSA object.
            </summary>
            <param name="IncludePrivateParameters">true to include a public and private RSA key; false to include only the public key.</param>
            <returns>An XML string containing the key of the current RSA object.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.SignData(Text,InStream,Enum::System#Security#Encryption#Hash Algorithm,OutStream)">
            <summary>
            Computes the hash value of the specified data and signs it.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="DataInStream">The input stream to hash and sign.</param>
            <param name="HashAlgorithm">The hash algorithm to use to create the hash value.</param>
            <param name="SignatureOutStream">The RSA signature stream for the specified data.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.VerifyData(Text,InStream,Enum::System#Security#Encryption#Hash Algorithm,InStream):Boolean">
            <summary>
            Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the hash value of the provided data.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="DataInStream">The input stream of data that was signed.</param>
            <param name="HashAlgorithm">The name of the hash algorithm used to create the hash value of the data.</param>
            <param name="SignatureInStream">The stream of signature data to be verified.</param>
            <returns>True if the signature is valid; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.Encrypt(Text,InStream,Boolean,OutStream)">
            <summary>
            Encrypts the specified text with the RSA algorithm.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="PlainTextInStream">The input stream to encrypt.</param>
            <param name="OaepPadding">True to perform RSA encryption using OAEP padding; otherwise, false to use PKCS#1 padding.</param>
            <param name="EncryptedTextOutStream">The RSA encryption stream for the specified text.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.Decrypt(Text,InStream,Boolean,OutStream)">
            <summary>
            Decrypts the specified text that was previously encrypted with the RSA algorithm.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="EncryptedTextInStream">The input stream to decrypt.</param>
            <param name="OaepPadding">true to perform RSA encryption using OAEP padding; otherwise, false to use PKCS#1 padding.</param>
            <param name="DecryptedTextOutStream">The RSA decryption stream for the specified text.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.PublicKeyToXmlString:Text">
            <summary>
            Creates and returns an XML string containing the public key of the current RSA object.
            </summary>
            <returns>An XML string containing the public key of the current RSA object.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.ToSecretXmlString(Boolean):SecretText">
            <summary>
            Creates and returns an XML string containing the key of the current RSA object.
            </summary>
            <param name="IncludePrivateParameters">true to include a public and private RSA key; false to include only the public key.</param>
            <returns>An XML string containing the key of the current RSA object.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.SignData(SecretText,InStream,Enum::System#Security#Encryption#Hash Algorithm,OutStream)">
            <summary>
            Computes the hash value of the specified data and signs it.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="DataInStream">The input stream to hash and sign.</param>
            <param name="HashAlgorithm">The hash algorithm to use to create the hash value.</param>
            <param name="SignatureOutStream">The RSA signature stream for the specified data.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.VerifyData(SecretText,InStream,Enum::System#Security#Encryption#Hash Algorithm,InStream):Boolean">
            <summary>
            Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the hash value of the provided data.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="DataInStream">The input stream of data that was signed.</param>
            <param name="HashAlgorithm">The name of the hash algorithm used to create the hash value of the data.</param>
            <param name="SignatureInStream">The stream of signature data to be verified.</param>
            <returns>True if the signature is valid; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.Encrypt(SecretText,InStream,Boolean,OutStream)">
            <summary>
            Encrypts the specified text with the RSA algorithm.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="PlainTextInStream">The input stream to encrypt.</param>
            <param name="OaepPadding">True to perform RSA encryption using OAEP padding; otherwise, false to use PKCS#1 padding.</param>
            <param name="EncryptedTextOutStream">The RSA encryption stream for the specified text.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.Decrypt(SecretText,InStream,Boolean,OutStream)">
            <summary>
            Decrypts the specified text that was previously encrypted with the RSA algorithm.
            </summary>
            <param name="XmlString">The XML string containing RSA key information.</param>
            <param name="EncryptedTextInStream">The input stream to decrypt.</param>
            <param name="OaepPadding">true to perform RSA encryption using OAEP padding; otherwise, false to use PKCS#1 padding.</param>
            <param name="DecryptedTextOutStream">The RSA decryption stream for the specified text.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#RSACryptoServiceProvider.CreateRSAKeyPair(Text@,SecretText@)">
            <summary>  
            The CreateRSAKeyPair procedure is a function that generates a public and private RSA key pair.  
            </summary>  
            <param name="PublicKeyInXml">This is an output parameter that returns the public key in XML format.</param>  
            <param name="PrivateKeyInXml">This is an output parameter that returns the private key in XML format. This is a sensitive information hence marked as SecretText.</param>  
            <returns>  
            This function does not return a value. The output is via the two parameters PublicKeyInXml and PrivateKeyInXml.  
            </returns>  
        </member>
        <member name="O:Enum::System#Security#Encryption#RSA Signature Padding">
            <summary>
            Enum that specifies all of the available padding modes. For more details check .NET RSASignaturePadding Class
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#RSA Signature Padding.Pkcs1">
            <summary>
            Specifies PKCS #1 v1.5 padding mode.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#RSA Signature Padding.Pss">
            <summary>
            Specifies PSS padding mode.
            </summary>
        </member>
        <member name="O:Enum::System#Security#Encryption#SignatureAlgorithm">
            <summary>
            Specifies the types of asymmetric algorithms.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#SignatureAlgorithm.RSA">
            <summary>
            Specifies the RSA algorithm implemented by RSACryptoServiceProvider
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#SignatureAlgorithm.DSA">
            <summary>
            Specifies the DSA algorithm implemented by DSACryptoServiceProvider
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#SignatureAlgorithm.RSASSA-PSS">
            <summary>
            Specifies the RSASSA-PSS algorithm implemented by RSA
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#Signature Key">
            <summary>
            Represents the key of asymmetric algorithm.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Signature Key.FromXmlString(Text)">
            <summary>
            Saves an key value from the key information from an XML string.
            </summary>
            <param name="XmlString">The XML string containing key information.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Signature Key.FromBase64String(Text,Text,Boolean)">
            <summary>
            Saves an key value from an certificate in Base64 format
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Represents the password of the certificatethepasswordofthecertificate">Certificate Password</param>
            <param name="IncludePrivateParameters">true to include private parameters; otherwise, false.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Signature Key.FromXmlString(SecretText)">
            <summary>
            Saves an key value from the key information from an XML string.
            </summary>
            <param name="XmlString">The XML string containing key information.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Signature Key.FromBase64String(Text,SecretText,Boolean)">
            <summary>
            Saves an key value from an certificate in Base64 format
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Represents the password of the certificatethepasswordofthecertificate">Certificate Password</param>
            <param name="IncludePrivateParameters">true to include private parameters; otherwise, false.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#Signature Key.ToXmlString:SecretText">
            <summary>
            Gets an XML string containing the key of the saved key value.
            </summary>
            <returns>An XML string containing the key of the saved key value.</returns>
        </member>
        <member name="O:Enum::System#Security#Encryption#SymmetricAlgorithm">
            <summary>
            Enum SymmetricAlgorithm (ID 1465) implements Interface SymmetricAlgorithm.
            </summary>
        </member>
        <member name="O:Interface::System#Security#Encryption#SymmetricAlgorithm">
            <summary>
            Interface defines methods which all implementations of symmetric algorithms must inherit.
            </summary>
        </member>
        <member name="M:Interface::System#Security#Encryption#SymmetricAlgorithm.GetInstance(DotNetTypeDeclaration::System#Security#Encryption#Cryptography#SymmetricAlgorithm@)">
            <summary>
            Initializes a new instance of the SymmetricAlgorithm.
            </summary>
        </member>
        <member name="M:Interface::System#Security#Encryption#SymmetricAlgorithm.XmlEncrypmentMethodUrl:Text">
            <summary>
            Returns Url of the encrypment method used
            </summary>
            <returns>An string containing the encrypment method Url.</returns>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#X509Certificate2">
            <summary>
            Provides helper functions to work with the X509Certificate2 class.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.VerifyCertificate(Text@,Text,Enum::System#Security#Encryption#X509 Content Type):Boolean">
            <summary>
            Verifes that a certificate is initialized and can be exported.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="X509ContentType">Specifies the format of an X.509 certificate</param>
            <returns>True if certificate is verified</returns>
            <error>When certificate cannot be initialized</error>
            <error>When certificate cannot be exported</error>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateFriendlyName(Text,Text,Text@)">
            <summary>
            Specifies the friendly name of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="FriendlyName">Represents certificate Friendly Name</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateSubject(Text,Text,Text@)">
            <summary>
            Specifies the subject of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="Subject">Certificate subject distinguished name</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateThumbprint(Text,Text,Text@)">
            <summary>
            Specifies the thumbprint of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="Thumbprint">Certificate Thumbprint</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateIssuer(Text,Text,Text@)">
            <summary>
            Specifies the issuer of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="Issuer">Certificate Issuer</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateExpiration(Text,Text,DateTime@)">
            <summary>
            Specifies the expiration date of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="Expiration">Certificate Expiration Date</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateNotBefore(Text,Text,DateTime@)">
            <summary>
            Specifies the NotBefore date of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="NotBefore">Certificate NotBefore Date</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.HasPrivateKey(Text,Text):Boolean">
            <summary>
            Checks whether the certificate has a private key based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <returns>True if the certificate has private key</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificatePropertiesAsJson(Text,Text,Text@)">
            <summary>
            Specifies the certificate details in Json object
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="CertPropertyJson">Certificate details in json</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificatePublicKey(Text,Text):Text">
            <summary>
            Gets Certificate public key
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificatePrivateKey(Text,Text):Text">
            <summary>
            Gets Certificate private key
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateSerialNumber(Text,Text,Text@)">
            <summary>
            Gets Certificate serial number
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="SerialNumber">Certificate serial number</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateSerialNumberAsASCII(Text,Text,Text@)">
            <summary>
            Gets Certificate serial number as ASCII
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="SerialNumberASCII">Certificate serial number as ascii</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.VerifyCertificate(Text@,SecretText,Enum::System#Security#Encryption#X509 Content Type):Boolean">
            <summary>
            Verifes that a certificate is initialized and can be exported.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="X509ContentType">Specifies the format of an X.509 certificate</param>
            <returns>True if certificate is verified</returns>
            <error>When certificate cannot be initialized</error>
            <error>When certificate cannot be exported</error>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateFriendlyName(Text,SecretText,Text@)">
            <summary>
            Specifies the friendly name of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="FriendlyName">Represents certificate Friendly Name</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateSubject(Text,SecretText,Text@)">
            <summary>
            Specifies the subject of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="Subject">Certificate subject distinguished name</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateThumbprint(Text,SecretText,Text@)">
            <summary>
            Specifies the thumbprint of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="Thumbprint">Certificate Thumbprint</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateIssuer(Text,SecretText,Text@)">
            <summary>
            Specifies the issuer of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="Issuer">Certificate Issuer</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateExpiration(Text,SecretText,DateTime@)">
            <summary>
            Specifies the expiration date of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="Expiration">Certificate Expiration Date</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateNotBefore(Text,SecretText,DateTime@)">
            <summary>
            Specifies the NotBefore date of the certificate based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="NotBefore">Certificate NotBefore Date</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.HasPrivateKey(Text,SecretText):Boolean">
            <summary>
            Checks whether the certificate has a private key based on it's Base64 value.
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <returns>True if the certificate has private key</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificatePropertiesAsJson(Text,SecretText,Text@)">
            <summary>
            Specifies the certificate details in Json object
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="CertPropertyJson">Certificate details in json</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificatePublicKey(Text,SecretText):Text">
            <summary>
            Gets Certificate public key
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificatePrivateKey(Text,SecretText):SecretText">
            <summary>
            Gets Certificate private key
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateSerialNumber(Text,SecretText,Text@)">
            <summary>
            Gets Certificate serial number
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="SerialNumber">Certificate serial number</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#X509Certificate2.GetCertificateSerialNumberAsASCII(Text,SecretText,Text@)">
            <summary>
            Gets Certificate serial number as ASCII
            </summary>
            <param name="CertBase64Value">Represents the certificate value encoded using the Base64 algorithm</param>
            <param name="Password">Certificate Password</param>
            <param name="SerialNumberASCII">Certificate serial number as ascii</param>
        </member>
        <member name="O:Enum::System#Security#Encryption#X509 Content Type">
            <summary>Specifies the format of an X.509 certificate.</summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#X509 Content Type.Unknown">
            <summary>
            Specifies unknown X.509 certificate.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#X509 Content Type.Cert">
            <summary>
            Specifies a single X.509 certificate.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#X509 Content Type.PFXSerializedCert">
            <summary>
            Specifies a single serialized X.509 certificate.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#X509 Content Type.Pkcs12">
            <summary>
            Specifies a PKCS #12-formatted certificate. The Pkcs12 value is identical to the Pfx value.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#X509 Content Type.SerializedStore">
            <summary>
            Specifies a serialized store.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#X509 Content Type.Pkcs7">
            <summary>
            Specifies a PKCS #7-formatted certificate.
            </summary>
        </member>
        <member name="E:Enum::System#Security#Encryption#X509 Content Type.Authenticode">
            <summary>
            Specifies an Authenticode X.509 certificate.
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#EncryptedXml">
            <summary>
            Provides functionality for encrypting and decrypting XML documents.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#EncryptedXml.Encrypt(XmlDocument@,Text,Text,Text)">
            <summary>
            Creates a symmetric session key to encrypt the outer XML of an element using the specified X.509 certificate.
            </summary>
            <param name="XmlDocument">The XmlDocument to encrypt.</param>
            <param name="ElementToEncrypt">The name of the element to encrypt.</param>
            <param name="X509CertBase64Value">The X509Certificate2 to use for the asymmetric encryption.</param>
            <param name="X509CertPassword">Password to the X509Certificate2.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#EncryptedXml.Encrypt(XmlDocument@,Text,Text,Text,Enum::System#Security#Encryption#SymmetricAlgorithm)">
            <summary>
            Creates a symmetric session key using the specified SymmetricAlgorithm
            to encrypt the outer XML of an element using the specified X.509 certificate.
            </summary>
            <param name="XmlDocument">The XmlDocument to encrypt.</param>
            <param name="ElementToEncrypt">The name of the element to encrypt.</param>
            <param name="X509CertBase64Value">The X509Certificate2 to use for the asymmetric encryption.</param>
            <param name="X509CertPassword">Password to the X509Certificate2.</param>
            <param name="SymmetricAlgorithm">The symmetric algorithm to be used when encrypting.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#EncryptedXml.DecryptDocument(XmlDocument@,Text,Enum::System#Security#Encryption#SignatureAlgorithm):Boolean">
            <summary>
            Decrypts all EncryptedData elements of the XML document using the specified asymmetric key.
            </summary>
            <param name="EncryptedDocument">The XML document to decrypt.</param>
            <param name="EncryptionKey">The asymmetric key to use to decrypt the symmetric keys in the document.</param>
            <param name="SignatureAlgorithm">The asymmetric algorithm used to decrypt the symmetric key.</param>
            <returns>Returns true if decryption was successful, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#EncryptedXml.DecryptKey(XmlElement,Text,Boolean,Text@,Enum::System#Security#Encryption#SignatureAlgorithm):Boolean">
            <summary>
            Decrypts an EncryptedKey XML element using an asymmetric algorithm.
            </summary>
            <param name="EncryptedKey">The EncryptedKey XML element with the key to be decrypted.</param>
            <param name="EncryptionKey">The asymmetric key used to decrypt the symmetric key.</param>
            <param name="UseOAEP">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</param>
            <param name="KeyBase64Value">The Base64 encoded decrypted key value.</param>
            <param name="SignatureAlgorithm">The asymmetric algorithm used to decrypt the symmetric key.</param>
            <returns>Returns true if decryption was successful, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#EncryptedXml.Encrypt(XmlDocument@,Text,Text,SecretText)">
            <summary>
            Creates a symmetric session key to encrypt the outer XML of an element using the specified X.509 certificate.
            </summary>
            <param name="XmlDocument">The XmlDocument to encrypt.</param>
            <param name="ElementToEncrypt">The name of the element to encrypt.</param>
            <param name="X509CertBase64Value">The X509Certificate2 to use for the asymmetric encryption.</param>
            <param name="X509CertPassword">Password to the X509Certificate2.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#EncryptedXml.Encrypt(XmlDocument@,Text,Text,SecretText,Enum::System#Security#Encryption#SymmetricAlgorithm)">
            <summary>
            Creates a symmetric session key using the specified SymmetricAlgorithm
            to encrypt the outer XML of an element using the specified X.509 certificate.
            </summary>
            <param name="XmlDocument">The XmlDocument to encrypt.</param>
            <param name="ElementToEncrypt">The name of the element to encrypt.</param>
            <param name="X509CertBase64Value">The X509Certificate2 to use for the asymmetric encryption.</param>
            <param name="X509CertPassword">Password to the X509Certificate2.</param>
            <param name="SymmetricAlgorithm">The symmetric algorithm to be used when encrypting.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#EncryptedXml.DecryptDocument(XmlDocument@,SecretText,Enum::System#Security#Encryption#SignatureAlgorithm):Boolean">
            <summary>
            Decrypts all EncryptedData elements of the XML document using the specified asymmetric key.
            </summary>
            <param name="EncryptedDocument">The XML document to decrypt.</param>
            <param name="EncryptionKey">The asymmetric key to use to decrypt the symmetric keys in the document.</param>
            <param name="SignatureAlgorithm">The asymmetric algorithm used to decrypt the symmetric key.</param>
            <returns>Returns true if decryption was successful, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#EncryptedXml.DecryptKey(XmlElement,SecretText,Boolean,Text@,Enum::System#Security#Encryption#SignatureAlgorithm):Boolean">
            <summary>
            Decrypts an EncryptedKey XML element using an asymmetric algorithm.
            </summary>
            <param name="EncryptedKey">The EncryptedKey XML element with the key to be decrypted.</param>
            <param name="EncryptionKey">The asymmetric key used to decrypt the symmetric key.</param>
            <param name="UseOAEP">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</param>
            <param name="KeyBase64Value">The Base64 encoded decrypted key value.</param>
            <param name="SignatureAlgorithm">The asymmetric algorithm used to decrypt the symmetric key.</param>
            <returns>Returns true if decryption was successful, otherwise false.</returns>
        </member>
        <member name="O:Codeunit::System#Security#Encryption#SignedXml">
            <summary>
            Provides a functionality to singing an xml document.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.InitializeSignedXml(XmlDocument)">
            <summary>
            Initializes a new instance of the SignedXml class from the specified XML document.
            </summary>
            <param name="SigningXmlDocument">The XmlDocument object to use to initialize the new instance of SignedXml.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.InitializeSignedXml(XmlElement)">
            <summary>
            Initializes a new instance of the SignedXml class from the specified XmlElement object.
            </summary>
            <param name="SigningXmlElement">The XmlElement object to use to initialize the new instance of SignedXml.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.SetSigningKey(Text)">
            <summary>
            Sets the key used for signing a SignedXml object.
            </summary>
            <param name="XmlString">The XML string containing key information.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.SetSigningKey(Text,Enum::System#Security#Encryption#SignatureAlgorithm)">
            <summary>
            Sets the key used for signing a SignedXml object.
            </summary>
            <param name="XmlString">The XML string containing key information.</param>
            <param name="SignatureAlgorithm">The type of asymmetric algorithms.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.SetSigningKey(Codeunit::System#Security#Encryption#Signature Key)">
            <summary>
            Sets the key used for signing a SignedXml object.
            </summary>
            <param name="SignatureKey">The key used for signing the SignedXml object.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.InitializeReference(Text)">
            <summary>
            Initializes a new instance of the Reference class with the specified Uri.
            </summary>
            <param name="Uri">The Uri with which to initialize the new instance of Reference.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.SetDigestMethod(Text)">
            <summary>
            Sets the digest method Uniform Resource Identifier (URI) of the current Reference.
            </summary>
            <param name="DigestMethod">The digest method URI of the current Reference. The default value is http://www.w3.org/2001/04/xmlenc#sha256.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.AddXmlDsigExcC14NTransformToReference(Text)">
            <summary>
            Adds a XmlDsigExcC14NTransform object to the list of transforms to be performed on the data before passing it to the digest algorithm.
            </summary>
            <param name="InclusiveNamespacesPrefixList">A string that contains namespace prefixes to canonicalize using the standard canonicalization algorithm.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.SetCanonicalizationMethod(Text)">
            <summary>
            Sets the canonicalization algorithm that is used before signing for the current SignedInfo object.
            </summary>
            <param name="CanonicalizationMethod">The canonicalization algorithm used before signing for the current SignedInfo object.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.SetXmlDsigExcC14NTransformAsCanonicalizationMethod(Text)">
            <summary>
            Sets the XmlDsigExcC14NTransform as canonicalization algorithm that is used before signing for the current SignedInfo object.
            </summary>
            <param name="InclusiveNamespacesPrefixList">A string that contains namespace prefixes to canonicalize using the standard canonicalization algorithm.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.SetSignatureMethod(Text)">
            <summary>
            Sets the name of the algorithm used for signature generation and validation for the current SignedInfo object.
            </summary>
            <param name="SignatureMethod">The name of the algorithm used for signature generation and validation for the current SignedInfo object.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.InitializeKeyInfo">
            <summary>
            Initializes a new instance of the KeyInfo class.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.AddClause(XmlElement)">
            <summary>
            Adds a xml element of KeyInfoNode to the collection of KeyInfoClause.
            </summary>
            <param name="KeyInfoNodeXmlElement">The xml element of KeyInfoNode to add to the collection of KeyInfoClause.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.LoadXml(XmlElement)">
            <summary>
            Loads a SignedXml state from an XML element.
            </summary>
            <param name="SignatureElement">The XML element to load the SignedXml state from.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.InitializeDataObject">
            <summary>
            Initializes a new instance of the DataObject class.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.AddObject(XmlElement)">
            <summary>
            Adds a xml element of DataObject object to the list of objects to be signed.
            </summary>
            <param name="DataObjectXmlElement">The xml element of DataObject to add to the list of objects to be signed.</param>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.AddXmlDsigExcC14NTransformToReference">
            <summary>
            Adds a AddXmlDsigExcC14NTransformToReference object to the list of transforms to be performed on the data before passing it to the digest algorithm.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.AddXmlDsigEnvelopedSignatureTransform">
            <summary>
            Adds a AddXmlDsigEnvelopedSignatureTransform object to the list of transforms to be performed on the data before passing it to the digest algorithm.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.AddReferenceToSignedXML">
            <summary>
            Adds a Reference object to the Signed XML and clears Reference object.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.ComputeSignature">
            <summary>
            Computes an Xml digital signature from Xml document.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.CheckSignature:Boolean">
            <summary>
            Determines whether the signature verifies using the public key in the signature.
            </summary>
            <returns>true if the signature verifies; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.CheckSignature(Text):Boolean">
            <summary>
            Determines whether the Signature property verifies for the specified key.
            </summary>
            <param name="XmlString">The XML string containing key information.</param>
            <returns>true if the signature verifies; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.CheckSignature(SecretText):Boolean">
            <summary>
            Determines whether the Signature property verifies for the specified key.
            </summary>
            <param name="XmlString">The XML string containing key information.</param>
            <returns>true if the signature verifies; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.CheckSignature(Text,Text,Boolean):Boolean">
            <summary>
            Determines whether the signature verifies for the specified X509Certificate2 and, optionally, whether the certificate is valid.
            </summary>
            <param name="X509CertBase64Value">The X509Certificate2 in Base64 format to use to verify the signature.</param>
            <param name="X509CertPassword">The password to the X509Certificate2.</param>
            <param name="VerifySignatureOnly">true to verify the signature only; false to verify both the signature and certificate.</param>
            <returns>true if the signature verifies; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.CheckSignature(Text,SecretText,Boolean):Boolean">
            <summary>
            Determines whether the signature verifies for the specified X509Certificate2 and, optionally, whether the certificate is valid.
            </summary>
            <param name="X509CertBase64Value">The X509Certificate2 in Base64 format to use to verify the signature.</param>
            <param name="X509CertPassword">The password to the X509Certificate2.</param>
            <param name="VerifySignatureOnly">true to verify the signature only; false to verify both the signature and certificate.</param>
            <returns>true if the signature verifies; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXml:XmlElement">
            <summary>
            Returns the Xml representation of a signature.
            </summary>
            <returns>The Xml representation of the signature.</returns>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXmlDsigDSAUrl:Text[250]">
            <summary>
            Represents the Uniform Resource Identifier (URI) for the standard DSA algorithm for XML digital signatures.
            </summary>
            <returns>The value http://www.w3.org/2000/09/xmldsig#dsa-sha1.</returns>
            <see cref="https://www.w3.org/2000/09/xmldsig#dsa-sha1"/>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXmlDsigExcC14NTransformUrl:Text[250]">
            <summary>
            Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization.
            </summary>
            <returns>The value http://www.w3.org/2001/10/xml-exc-c14n#.</returns>
            <see cref="https://www.w3.org/2001/10/xml-exc-c14n"/>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXmlDsigHMACSHA1Url:Text[250]">
            <summary>
            Represents the Uniform Resource Identifier (URI) for the standard HMACSHA1 algorithm for XML digital signatures.
            </summary>
            <returns>The value http://www.w3.org/2000/09/xmldsig#hmac-sha1.</returns>
            <see cref="https://www.w3.org/2000/09/xmldsig#hmac-sha1"/>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXmlDsigRSASHA1Url:Text[250]">
            <summary>
            Represents the Uniform Resource Identifier (URI) for the standard RSA signature method for XML digital signatures.
            </summary>
            <returns>The value http://www.w3.org/2000/09/xmldsig#rsa-sha1.</returns>
            <see cref="https://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXmlDsigRSASHA256Url:Text[250]">
            <summary>
            Represents the Uniform Resource Identifier (URI) for the RSA SHA-256 signature method variation for XML digital signatures.
            </summary>
            <returns>The value http://www.w3.org/2001/04/xmldsig-more#rsa-sha256.</returns>
            <see cref="https://www.w3.org/2001/04/xmldsig-more#rsa-sha256"/>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXmlDsigRSASHA384Url:Text[250]">
            <summary>
            Represents the Uniform Resource Identifier (URI) for the RSA SHA-384 signature method variation for XML digital signatures.
            </summary>
            <returns>The value http://www.w3.org/2001/04/xmldsig-more#rsa-sha384.</returns>
            <see cref="https://www.w3.org/2001/04/xmldsig-more#rsa-sha384"/>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXmlDsigRSASHA512Url:Text[250]">
            <summary>
            Represents the Uniform Resource Identifier (URI) for the RSA SHA-512 signature method variation for XML digital signatures.
            </summary>
            <returns>The value http://www.w3.org/2001/04/xmldsig-more#rsa-sha512.</returns>
            <see cref="https://www.w3.org/2001/04/xmldsig-more#rsa-sha512"/>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXmlDsigSHA1Url:Text[250]">
            <summary>
            Represents the Uniform Resource Identifier (URI) for the standard SHA1 digest method for XML digital signatures.
            </summary>
            <returns>The value http://www.w3.org/2000/09/xmldsig#sha1.</returns>
            <see cref="https://www.w3.org/2000/09/xmldsig#sha1"/>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXmlDsigSHA256Url:Text[250]">
            <summary>
            Represents the Uniform Resource Identifier (URI) for the standard SHA256 digest method for XML digital signatures.
            </summary>
            <returns>The value http://www.w3.org/2001/04/xmlenc#sha256.</returns>
            <see cref="https://www.w3.org/2001/04/xmlenc#sha256"/>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXmlDsigSHA384Url:Text[250]">
            <summary>
            Represents the Uniform Resource Identifier (URI) for the standard SHA384 digest method for XML digital signatures.
            </summary>
            <returns>The value http://www.w3.org/2001/04/xmldsig-more#sha384.</returns>
            <see cref="https://www.w3.org/2001/04/xmldsig-more#sha384"/>
        </member>
        <member name="M:Codeunit::System#Security#Encryption#SignedXml.GetXmlDsigSHA512Url:Text[250]">
            <summary>
            Represents the Uniform Resource Identifier (URI) for the standard SHA512 digest method for XML digital signatures.
            </summary>
            <returns>The value http://www.w3.org/2001/04/xmlenc#sha512.</returns>
            <see cref="https://www.w3.org/2001/04/xmlenc#sha512"/>
        </member>
        <member name="O:Codeunit::System#Security#User#User Details">
            <summary>
            Contains functionality related to retrieving user details.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#User#User Details.Get(User Details@)">
            <summary>
            Retrieves the details of a user.
            </summary>
            <param name="UserDetails">The user details record to be populated.</param>
        </member>
        <member name="M:Codeunit::System#Security#User#User Details.OnAddUserDetails(Guid,User Details@)">
            <summary>
            If an extension adds fields to the User Details table, this event allows it to populate the added user details fields.
            </summary>
            <param name="UserSecId">User Security ID of the user to add the details for.</param>
            <param name="UserDetails">The table that holds the values for user details.</param>
        </member>
        <member name="O:Page::System#Security#User#User Details">
            <summary>
            Shows detailed user information, such as unique identifiers, information about permission sets etc.
            </summary>
        </member>
        <member name="O:Table::System#Security#User#User Details">
            <summary>
            Fetches user details information stored across multiple other tables.
            </summary>
        </member>
        <member name="F:Table::System#Security#User#User Details.User Security ID">
            <summary>
            An ID that uniquely identifies the user.
            </summary>
        </member>
        <member name="F:Table::System#Security#User#User Details.User Name[50]">
            <summary>
            User's name.
            </summary>
        </member>
        <member name="F:Table::System#Security#User#User Details.Full Name[80]">
            <summary>
            User's full name.
            </summary>
        </member>
        <member name="F:Table::System#Security#User#User Details.State">
            <summary>
            Specifies whether the user can access companies in the current environment.
            </summary>
        </member>
        <member name="F:Table::System#Security#User#User Details.Authentication Email[250]">
            <summary>
            The authentication email of the user.
            </summary>
        </member>
        <member name="F:Table::System#Security#User#User Details.Contact Email[250]">
            <summary>
            The contact email of the user.
            </summary>
        </member>
        <member name="F:Table::System#Security#User#User Details.Telemetry User ID">
            <summary>
            An ID that uniquely identifies the user for the purposes of sending telemetry.
            </summary>
        </member>
        <member name="F:Table::System#Security#User#User Details.Authentication Object ID[80]">
            <summary>
            An ID assigned to the user in Microsoft Entra.
            </summary>
        </member>
        <member name="F:Table::System#Security#User#User Details.Has SUPER permission set">
            <summary>
            True if the user SUPER permission set in any company, false otherwise.
            </summary>
        </member>
        <member name="O:Table::System#Security#User#User Environment Login">
            <summary>
            Stores the user security IDs of the users who have logged in to the environment.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#User#User Login Times Upgrade.AddUserEnvironmentLogin">
            <summary>
            Create entries in "User Environment Login" for all the user who have logged in to any company.
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#User#User Login Time Tracker">
            <summary>
            Exposes functionality to retrieve information about the user's first, penultimate and last login times.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#User#User Login Time Tracker.IsFirstLogin(Guid):Boolean">
            <summary>
            Returns true if this is the first time the user logs in to the current company.
            </summary>
            <param name="UserSecurityID">The User Security ID.</param>
            <returns>True if this is the first time the user logs in and false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#User#User Login Time Tracker.AnyUserLoggedInSinceDate(Date):Boolean">
            <summary>
            Returns true if any user logged in to the current company on or after the specified date.
            </summary>
            <param name ="FromDate">The date to start searching from.</param>
            <returns>True if any user logged in on or after the specified date and false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#User#User Login Time Tracker.UserLoggedInSinceDateTime(DateTime):Boolean">
            <summary>
            Returns true if the current user logged in to the current company at or after the specified DateTime.
            </summary>
            <param name="FromDateTime">The DateTime to start searching from.</param>
            <returns>True if the current user logged in at or after the specified DateTime and false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#User#User Login Time Tracker.UserLoggedInEnvironment(Guid):Boolean">
            <summary>
            Checks whether a user has logged in to the current environment (to any of the companies) in the past.
            </summary>
            <param name="UserSecurityID">The User Security ID.</param>
            <returns>True if the user has logged in to any of the companies; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#User#User Login Time Tracker.GetPenultimateLoginDateTime:DateTime">
            <summary>
            Returns the penultimate login DateTime of the current user for the current company.
            </summary>
            <returns>The penultimate login DateTime of the current user, or 0DT if the user login cannot be found.</returns>
        </member>
        <member name="M:Codeunit::System#Security#User#User Login Time Tracker.GetPenultimateLoginDateTime(Guid):DateTime">
            <summary>
            Returns the penultimate login DateTime of a user for the current company.
            </summary>
            <param name="UserSecurityID">The security ID of the user.</param>
            <returns>The penultimate login DateTime of a user, or 0DT if the user login cannot be found.</returns>
        </member>
        <member name="M:Codeunit::System#Security#User#User Login Time Tracker.CreateOrUpdateLoginInfo">
            <summary>
            Updates or creates the last login information of the current user (first, last and penultimate login date) for the current company.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#User#User Login Time Tracker.CreateEnvironmentLoginInfo">
            <summary>
            Creates login information of the current user for the environment.
            </summary>
        </member>
        <member name="O:Codeunit::System#Security#User#User Permissions">
            <summary>
            Exposes functionality to check if a user has SUPER permissions set assigned as well as removing such permissions set from a user.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#User#User Permissions.IsSuper(Guid):Boolean">
            <summary>
            Checks whether the user has the SUPER permissions set.
            </summary>
            <param name="UserSecurityId">The security ID assigned to the user.</param>
            <returns>True if the user has the SUPER permissions set. Otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#User#User Permissions.RemoveSuperPermissions(Guid):Boolean">
            <summary>
            Removes the SUPER permissions set from a user.
            </summary>
            <param name="UserSecurityId">The security ID of the user to modify.</param>
            <returns>True if SUPER was removed from the user; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Security#User#User Permissions.CanManageUsersOnTenant(Guid):Boolean">
            <summary>
            Checks whether the user has permission to manage users in the tenant.
            </summary>
            <param name="UserSecurityId">The security ID of the user to check for.</param>
            <returns>True if the user with the given user security ID can manage users on tenant; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#User#User Permissions.HasUserPermissionSetAssigned(Guid,Text,Code[20],Option,Guid):Boolean">
            <summary>
            Checks whether a user has a specific permission set assigned.
            </summary>
            <param name="UserSecurityId">The user's security ID.</param>
            <param name="Company">The company for which to check</param>
            <param name="RoleId">The ID of the permission set.</param>
            <param name="Scope">The scope of the permission set. System or tenant.</param>
            <param name="AppId">The app ID of the permission set.</param>
            <returns>True if the user has permission sets assigned.</returns>
        </member>
        <member name="M:Codeunit::System#Security#User#User Permissions.AssignPermissionSets(Guid@,Text,Aggregate Permission Set@)">
            <summary>
            Assign a permission set to a given user
            </summary>
            <param name="UserSecurityId">The user's security ID.</param>
            <param name="Company">The company for which to give the permission</param>
            <param name="AggregatePermissionSet">Permission sets to assign</param>
        </member>
        <member name="M:Codeunit::System#Security#User#User Permissions.GetEffectivePermission(Option,Integer):Expanded Permission">
            <summary>
            Gets the effective permissions for the current user in the current company.
            </summary>
            <param name="PermissionObjectType">The object type to check for.</param>
            <param name="ObjectId">The object ID to check for.</param>
            <returns>Returns the effective permissions in a temporary expanded permission record.</returns>
            <example>
               local procedure VerifyIndirectDeletePermission(TableId: Integer): Boolean
               var
                   TempDummyExpandedPermission: Record "Expanded Permission" temporary;
                   UserPermissions: Codeunit "User Permissions";
               begin
                   TempDummyExpandedPermission := UserPermissions.GetEffectivePermission(TempDummyExpandedPermission."Object Type"::"Table Data", TableId);
                   exit(TempDummyExpandedPermission."Delete Permission" = TempDummyExpandedPermission."Delete Permission"::Indirect)
               end;
            </example>
        </member>
        <member name="O:Codeunit::System#Security#User#User Permissions Impl#">
            <summary>
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#User#User Permissions Impl#.OnCanManageUsersOnTenant(Guid,Boolean@)">
            <summary>
            An event that indicates that subscribers should set the result that should be returned when the CanManageUsersOnTenant is called.
            </summary>
            <remarks>
            Subscribe to this event from tests if you need to verify a different flow.
            This feature is for testing and is subject to a different SLA than production features.
            Do not use this event in a production environment. This should be subscribed to only in tests.
            </remarks>
        </member>
        <member name="O:Page::System#Security#User#User Lookup">
            <summary>
            Lookup page for users.
            </summary>
        </member>
        <member name="M:Page::System#Security#User#User Lookup.GetSelectedUsers(User@)">
            <summary>
            Gets the currently selected users.
            </summary>
            <param name="SelectedUser">A record that contains the currently selected users</param>
        </member>
        <member name="O:Codeunit::System#Security#User#User Selection">
            <summary>
            Provides basic functionality to open a search page and validate user information.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#User#User Selection.Open(User@):Boolean">
            <summary>
            Opens the user lookup page and assigns the selected users on the <paramref name="SelectedUser"/> parameter.
            </summary>
            <param name="SelectedUser">The variable to return the selected users. Any filters on this record will influence the page view.</param>
            <returns>Returns true if a user was selected.</returns>
        </member>
        <member name="M:Codeunit::System#Security#User#User Selection.ValidateUserName(Code[50])">
            <summary>
            Displays an error if there is no user with the given username and the user table is not empty.
            </summary>
            <param name="UserName">The username to validate.</param>
        </member>
        <member name="M:Codeunit::System#Security#User#User Selection.HideExternalUsers(User@)">
            <summary>
            Sets Filter on the given User Record to exclude external users.
            </summary>
            <param name="User">The User Record to return.</param>
        </member>
        <member name="M:Codeunit::System#Security#User#User Selection.FilterSystemUserAndAADGroupUsers(User@)">
            <summary>
            Sets Filter on the given User Record to exclude the system user and Microsoft Entra group users.
            </summary>
            <param name="User">The User Record to return.</param>
        </member>
        <member name="M:Codeunit::System#Security#User#User Selection.FilterSystemUserAndGroupUsers(User@)">
            <summary>
            Sets Filter on the given User Record to exclude the system user, Microsoft Entra group users and Windows Group users.
            </summary>
            <param name="User">The User Record to return.</param>
        </member>
        <member name="O:Codeunit::System#Security#App Key Vault Secret Provider">
            <summary>
            Exposes functionality to retrieve app secrets from the key vault that is specified in the app's manifest file.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#App Key Vault Secret Provider.TryInitializeFromCurrentApp:Boolean">
            <summary>
            Identifies the calling app and initializes the codeunit with the app's key vaults.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#App Key Vault Secret Provider.GetSecret(Text,Text@):Boolean">
            <summary>
            Retrieves a secret value from one of the app's key vaults.
            </summary>
            <param name="SecretName">The name of the secret to retrieve.</param>
            <param name="SecretValue">The value of the secret, or the empty string if the value could not be retrieved.</param>
            <returns>True if the secret value could be retrieved; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#App Key Vault Secret Provider.GetSecret(Text,SecretText@):Boolean">
            <summary>
            Retrieves a secret value from one of the app's key vaults.
            </summary>
            <param name="SecretName">The name of the secret to retrieve.</param>
            <param name="SecretValue">SecretText containing the value of the secret, or the empty string if the value could not be retrieved.</param>
            <returns>True if the secret value could be retrieved; false otherwise.</returns>
        </member>
        <member name="O:Codeunit::System#Security#In Memory Secret Provider">
            <summary>
            An in-memory secret provider that can be populated with secrets from any source.
            </summary>
        </member>
        <member name="M:Codeunit::System#Security#In Memory Secret Provider.AddSecret(Text,Text)">
            <summary>
            Adds a secret to the secret provider. If the secret is already present in the secret provider, its value will be overwritten.
            </summary>
            <param name="SecretName">The name of the secret.</param>
            <param name="SecretValue">The value of the secret.</param>
        </member>
        <member name="M:Codeunit::System#Security#In Memory Secret Provider.GetSecret(Text,Text@):Boolean">
            <summary>
            Retrieves a secret value from the secret provider.
            </summary>
            <param name="SecretName">The name of the secret to retrieve.</param>
            <param name="SecretValue">The value of the secret, or the empty string if the value could not be retrieved.</param>
            <returns>True if the secret value could be retrieved; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Security#In Memory Secret Provider.GetSecret(Text,SecretText@):Boolean">
            <summary>
            Retrieves a secret value from the secret provider.
            </summary>
            <param name="SecretName">The name of the secret to retrieve.</param>
            <param name="SecretValue">SecretText containing the value of the secret, or the empty string if the value could not be retrieved.</param>
            <returns>True if the secret value could be retrieved; false otherwise.</returns>
        </member>
        <member name="O:Codeunit::System#Security#In Memory Secret Prov Impl#">
            <summary>
            An in-memory secret provider that can be populated with secrets from any source.
            </summary>
        </member>
        <member name="O:Interface::System#Security#Secret Provider">
            <summary>
            Abstraction for secret providers.
            </summary>
        </member>
        <member name="M:Interface::System#Security#Secret Provider.GetSecret(Text,Text@):Boolean">
            <summary>
            Retrieves a secret value.
            </summary>
            <param name="SecretName">The name of the secret to retrieve.</param>
            <param name="SecretValue">The value of the secret, or the empty string if the value could not be retrieved.</param>
            <returns>True if the secret value could be retrieved; false otherwise.</returns>
        </member>
        <member name="O:Interface::System#Security#Secret Provider v2">
            <summary>
            Abstraction for secret providers.
            </summary>
        </member>
        <member name="M:Interface::System#Security#Secret Provider v2.GetSecret(Text,Text@):Boolean">
            <summary>
            Retrieves a secret value.
            </summary>
            <param name="SecretName">The name of the secret to retrieve.</param>
            <param name="SecretValue">The value of the secret, or the empty string if the value could not be retrieved.</param>
            <returns>True if the secret value could be retrieved; false otherwise.</returns>
        </member>
        <member name="M:Interface::System#Security#Secret Provider v2.GetSecret(Text,SecretText@):Boolean">
            <summary>
            Retrieves a secret value.
            </summary>
            <param name="SecretName">The name of the secret to retrieve.</param>
            <param name="SecretValue">SecretText containing the value of the secret, or the empty string if the value could not be retrieved.</param>
            <returns>True if the secret value could be retrieved; false otherwise.</returns>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Advanced Settings">
            <summary>Advanced settings exposes integration events raised at Advance Settings Page open.</summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Advanced Settings.OnBeforeOpenGeneralSetupExperience(Integer@,Boolean@)">
            <summary>Notifies that the Open General Setup Experience has been invoked.</summary>
            <param name="PageID">The Page ID of the page been invoked.</param>
            <param name="Handled">The flag which if set, would stop executing the OpenGeneralSetupExperience of the assisted setup guide.</param>
        </member>
        <member name="O:Page::System#Environment#Configuration#Advanced Settings">
            <summary>This page shows all the registered entries in the advanced settings page.</summary>
        </member>
        <member name="O:Profile::System#Environment#Configuration#BLANK">
            <summary>
            Empty profile to use in case no other profile is present when system is initializing.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#Blank Role Center">
            <summary>
            Empty role center to use in case no other role center is present when system is initializing.
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Default Role Center">
            <summary>
            The codeunit that emits the event that sets the default Role Center.
            To use another Role Center by default, you must have a profile for it.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Default Role Center.OnBeforeGetDefaultRoleCenter(Integer@,Boolean@)">
            <summary>
            Integration event for setting the default Role Center ID.
            </summary>
            <param name="RoleCenterId">Out parameter holding the Role Center ID.</param>
            <param name="Handled">Handled pattern</param>
        </member>
        <member name="O:PermissionSet::System#Environment#Configuration#Feature Key - Admin">
            <summary>
            This permission set is required to turn a feature on or off.
            </summary>
        </member>
        <member name="O:PermissionSet::System#Environment#Configuration#Feature Key - View">
            <summary>
            This permission set is required in order to view the status of a feature Key and get the status of the data upgrade
            </summary>
        </member>
        <member name="O:PermissionSet::System#Environment#Configuration#Feature Mgt# - Admin">
            <summary>
            This permission set is required to turn a feature on or off. It can be assigned to users to give full access to the Feature Management functionality.
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Feature Data Error Handler">
            <summary>
            Error handler codeunit used by the task scheduler during feature data update.
            </summary>
        </member>
        <member name="O:Interface::System#Environment#Configuration#Feature Data Update">
            <summary>
            Interface defines methods for feature data update task management.
            </summary>
        </member>
        <member name="M:Interface::System#Environment#Configuration#Feature Data Update.IsDataUpdateRequired:Boolean">
            <summary>
            Searches the database for data that must be updated before the feature can be enabled.
            </summary>
            <returns>true if there is data to update</returns>
        </member>
        <member name="M:Interface::System#Environment#Configuration#Feature Data Update.ReviewData">
            <summary>
            Opens the page showing the list of tables with counted records that require update.
            </summary>
        </member>
        <member name="M:Interface::System#Environment#Configuration#Feature Data Update.UpdateData(Feature Data Update Status)">
            <summary>
            Runs the process that updates data for the feature.
            </summary>
            <param name="FeatureDataUpdateStatus">the feature update status record</param>
        </member>
        <member name="M:Interface::System#Environment#Configuration#Feature Data Update.AfterUpdate(Feature Data Update Status)">
            <summary>
            Method is called after the update is complete, e.g. to complete the setup for the feature.
            </summary>
            <param name="FeatureDataUpdateStatus">the feature update status record</param>
        </member>
        <member name="M:Interface::System#Environment#Configuration#Feature Data Update.GetTaskDescription:Text">
            <summary>
            Retruns the detailed description of the data update required for the feature.
            It is shown of the "Schedule Feature Data Update" page to explain the user what is going to happen.
            </summary>
            <returns>The process description</returns>
        </member>
        <member name="O:Table::System#Environment#Configuration#Feature Data Update Status">
            <summary>
            Table stores feature data update status per company.
            </summary>
        </member>
        <member name="O:Table::System#Environment#Configuration#Feature Dependency">
            <summary>
            Temporary table stores pairs of the dependent features.
            </summary>
        </member>
        <member name="O:Table::System#Environment#Configuration#Feature Key Buffer">
            <summary>
            This temporary table extends the "Feature Key" virtual table. The fields must be in sync across both tables.
            New fields are added from id = 100 upwards.
            </summary>
        </member>
        <member name="O:Interface::System#Environment#Configuration#Feature Management">
            <summary>
            Interface that defines methods for linking tables "Feature Key Buffer" and "Feature Key".
            The default implementation uses the system table "Feature Key" as a source,
            but another implementation uses a temporary table "Feature Key" to delink Feature Management UX from the read-only virtual table.
            </summary>
        </member>
        <member name="M:Interface::System#Environment#Configuration#Feature Management.GetData(List of [Text],List of [Text],Feature Key Buffer@):Integer">
            <summary>
            Returns number of collected records. Feature interface read the system table "Feature Key" or
            another source of data depends on the interface implementation. In tests it can be a temporary table "Feature Key".
            Parameters IncludeFeatureKeys or ExcludeFeatureKeys can be used to get a subset of all existing records.
            </summary>
            <param name="IncludeFeatureKeys">the list of feature ids that must be included into the result buffer</param>
            <param name="ExcludeFeatureKeys">the list of feature ids that must be excluded from the result buffer</param>
            <param name="FeatureKeyBuffer">the record set of the table "Feature Key Buffer"</param>
            <returns>number of records in the buffer</returns>
        </member>
        <member name="M:Interface::System#Environment#Configuration#Feature Management.GetFeatureKey(Text[50],Feature Key@):Boolean">
            <summary>
            Returns number of collected records. Feature interface read the system table "Feature Key" or
            another source of data depends on the interface implementation. In tests it can be a temporary table "Feature Key".
            </summary>
            <param name="FeatureId">the feature id in the system table "Feature Key"</param>
            <param name="TempFeatureKey">the returned fresh copy of the record in the table "Feature Key"</param>
            <returns>if the feature key record was found</returns>
        </member>
        <member name="M:Interface::System#Environment#Configuration#Feature Management.SetEnabled(Feature Key):Boolean">
            <summary>
            Modifies the Enabled field in the source record in the "Feature Key" table.
            The new value for the Enabled field is taken from the TempFeatureKey.Enabled.
            </summary>
            <param name="TempFeatureKey">the copy of the record in the table "Feature Key"</param>
            <returns>if the feature key record was modified</returns>
        </member>
        <member name="M:Interface::System#Environment#Configuration#Feature Management.GenerateDependencies(Feature Key Buffer@,Feature Dependency@):Boolean">
            <summary>
            Fills the temporary table "Feature Dependency" stored in the single instance codeunit "Feature Dependency Management".
            Add new feature dependencies by passing DependentFeatureId and ParentFeatureID,
            FeatureKeyBuffer is passed to control data consistency:
              FeatureDependency.New(FeatureKeyBuffer, DependentFeatureId, ParentFeatureID);
            </summary>
            <param name="FeatureKeyBuffer">the record set of the available feature keys</param>
            <param name="FeatureDependency">returned the record set of the dependencies to add</param>
            <returns>if any feature dependency was generated</returns>
        </member>
        <member name="O:Page::System#Environment#Configuration#Feature Management">
            <summary>
            Page that enables a user to pick which new features to use
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Feature Management Facade">
            <summary>
            This codeunit provides public functions for feature management.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Facade.IsEnabled(Text[50]):Boolean">
            <summary>
            Returns true if the feature is enabled and data update, if required, is complete.
            </summary>
            <param name="FeatureId">the feature id in the system table "Feature Key"</param>
            <returns>if the feature is fully enabled</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Facade.IsEnabled(Text[50],Boolean):Boolean">
            <summary>
            Returns true if the feature is enabled and data update, if required, is complete.
            </summary>
            <param name="FeatureId">the feature id in the system table "Feature Key"</param>
            <param name="AllowInsert">specifies if inserts are allowed while checking for feature being enabled</param>
            <returns>if the feature is fully enabled</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Facade.AfterValidateEnabled(Feature Key)">
            <summary>
            Updates the status in "Feature Data Update Status" records related to all companies.
            Also sends the notification reminding user to sign in again after feature is enabled/disabled.
            </summary>
            <param name="FeatureKey">the current "Feature Key" record</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Facade.GetFeatureKeyUrlForWeb(Text[50]):Text">
            <summary>
            Gets the URL to let users try out a feature.
            <param name="FeatureKey">The feature key for the feature to try.</param>
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Facade.GetImplementation(Feature Data Update Status):Boolean">
            <summary>
            Returns true if the feature has an interface implementation.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Facade.GetTaskDescription(Feature Data Update Status):Text">
            <summary>
            Retrurns the result of the interface's GetTaskDescription method.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Facade.ReviewData(Feature Data Update Status):Boolean">
            <summary>
            Runs the interface's review data method.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Facade.Update(Feature Data Update Status@):Boolean">
            <summary>
            Schedules or starts update depending on the options picked on the wizard page.
            </summary>
            <param name="FeatureDataUpdateStatus">The current status record</param>
            <returns>true if user picked Update or Schedule and the task is scheduled or executed.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Facade.CancelTask(Feature Data Update Status@,Boolean)">
            <summary>
            Cancels the scheduled task before it is started.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Facade.UpdateData(Feature Data Update Status@)">
            <summary>
            Runs the interface's data updata method and updates the feature status.
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Feature Management Impl#">
            <summary>
            Provides functionality for feature management.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.GetFeatureKeyUrlForWeb(Text[50]):Text">
            <summary>
            Gets the URL to let users try out a feature.
            <param name="FeatureKey">The feature key for the feature to try.</param>
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.SendSignInAgainNotification">
            <summary>
            Sends a notification to ask user to sign out and sign in again to make the changes take effect
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.InitializeFeatureDataUpdateStatus(Feature Key,Feature Data Update Status@,Boolean)">
            <summary>
            Inserts record to "Feature Data Update Status" table to show the feature status per company.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.AfterValidateEnabled(Feature Key)">
            <summary>
            Updates the status in "Feature Data Update Status" records related to all companies.
            Also sends the notification reminding user to sign in again after feature is enabled/disabled.
            </summary>
            <param name="FeatureKey">the current "Feature Key" record</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.GetFeatureDataUpdateStatus(Feature Key,Feature Data Update Status@)">
            <summary>
            Returns the fresh values of the "Feature Data Update Status" record for the current "Feature Key".
            </summary>
            <param name="FeatureKey">the current feature key record</param>
            <param name="FeatureDataUpdateStatus">returned the fresh "Feature Data Update Status" record</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.ConfirmDataUpdate(Feature Data Update Status@):Boolean">
            <summary>
            Returns true if the user has confirmed the data update for the selected feature.
            Opens the "Schedule Feature Data Update" page where user can confirm the update or schedule it.
            </summary>
            <param name="FeatureDataUpdateStatus">the current feature status</param>
            <returns>if the data update has been confirmed</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.GetImplementation(Feature Data Update Status):Boolean">
            <summary>
            Returns true if the feature has an interface implementation.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.GetTaskDescription(Feature Data Update Status):Text">
            <summary>
            Returns the result of the interface's GetTaskDescription method.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.ReviewData(Feature Data Update Status):Boolean">
            <summary>
            Runs the interface's review data method.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.Update(Feature Data Update Status@):Boolean">
            <summary>
            Schedules or starts update depending on the options picked on the wizard page.
            </summary>
            <param name="FeatureDataUpdateStatus">The current status record</param>
            <returns>true if user picked Update or Schedule and the task is scheduled or executed.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.UpdateData(Feature Data Update Status@)">
            <summary>
            Runs the interface's data update method and updates the feature status.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.UpdateData(Feature Data Update Status@,Interface::System#Environment#Configuration#Feature Data Update)">
            <summary>
            Runs the interface's data update method and updates the feature status.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.HandleUpdateError(Feature Data Update Status@)">
            <summary>
            Sets Incomplete status and send trace tags.
            </summary>
            <param name="FeatureDataUpdateStatus">current status record</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.SetSessionInProgress(Feature Data Update Status@)">
            <summary>
            Sets the "Feature Status" to the 'Updating' state, when the background task is started.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.UpdateBackgroundTaskStatus(Feature Data Update Status@):Enum::System#Environment#Configuration#Feature Status">
            <summary>
            Updates the status of the background task based on its activity.
            </summary>
            <returns>the previous status</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.IsEnabled(Text[50]):Boolean">
            <summary>
            Returns true if the feature is enabled and data update, if required, is complete.
            </summary>
            <param name="FeatureId">The feature id in the system table "Feature Key"</param>
            <returns>If the feature is fully enabled</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.IsEnabled(Text[50],Boolean):Boolean">
            <summary>
            Returns true if the feature is enabled and data update, if required, is complete.
            </summary>
            <param name="FeatureId">The feature id in the system table "Feature Key"</param>
            <param name="AllowInsert">Specifies if inserts are allowed while checking for feature being enabled</param>
            <returns>If the feature is fully enabled</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.CancelTask(Feature Data Update Status@,Boolean)">
            <summary>
            Cancels the scheduled task before it is started.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.CreateTask(Feature Data Update Status@):Guid">
            <summary>
            Creates the task bu the task scheduler.
            </summary>
            <param name="FeatureDataUpdateStatus">current status record</param>
            <returns>id of the scheduled task</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.ScheduleTask(Feature Data Update Status@):Boolean">
            <summary>
            Updates the status and properties related to scheduling and sends the trace tag.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.LookupDateTime(DateTime):DateTime">
            <summary>
            Opens the dialog for entering a date and time values.
            </summary>
            <param name="InitDateTime">default DataTime value</param>
            <returns>the new DataTime value entered by user</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.SendTraceTagOnError(Feature Data Update Status)">
            <summary>
            Sends the trace tag in case of error during feature data update.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.SendTraceTagOnScheduling(Feature Data Update Status)">
            <summary>
            Sends the trace tag when the feature data update is scheduled.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.SendTraceTagOnStart(Feature Data Update Status)">
            <summary>
            Sends the trace tag when the feature data update is started.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Feature Management Impl#.SendTraceTagOnFinish(Feature Data Update Status)">
            <summary>
            Sends the trace tag when the feature data update is finished.
            </summary>
        </member>
        <member name="O:Enum::System#Environment#Configuration#Feature Status">
            <summary>
            Enum defines the feature statuses.
            </summary>
        </member>
        <member name="O:Enum::System#Environment#Configuration#Feature To Update">
            <summary>
            The enum lists the features that require some data update.
            Text value must match the key value in the "Feature Key" table, Int value is the implementation codeunit id.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#Schedule Feature Data Update">
            <summary>
            Page provide the dialog where user can run or schedule the feature datat update.
            </summary>
        </member>
        <member name="M:Page::System#Environment#Configuration#Schedule Feature Data Update.Set(Feature Data Update Status)">
            <summary>
            Inserts the copy of "Feature Data Update Status" record as a temporary source of the page.
            </summary>
            <param name="FeatureDataUpdateStatus">the instance of the actual record</param>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Update Feature Data">
            <summary>
            Codeunit that is executed by the task scheduler during the feature data update.
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Navigation Bar Subscribers">
            <summary>Collection of the default subscribers to system events and corresponding overridable integration events.</summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Navigation Bar Subscribers.OnBeforeDefaultOpenCompanySettings(Boolean@)">
            <summary>Notifies that the Default Open Company Settings has been invoked.</summary>
            <param name="Handled">The flag which if set, would stop executing the event.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Navigation Bar Subscribers.OnBeforeDefaultOpenRoleBasedSetupExperience(Boolean@)">
            <summary>Notifies that the Default Open Role Based Setup Experience has been invoked.</summary>
            <param name="Handled">The flag which if set, would stop executing the event.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Navigation Bar Subscribers.OnBeforeDefaultOpenGeneralSetupExperience(Boolean@)">
            <summary>Notifies that the Default Open General Setup Experience has been invoked.</summary>
            <param name="Handled">The flag which if set, would stop executing the event.</param>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Server Setting">
            <summary>
            Exposes functionality to fetch some application server settings for the server which hosts the current tenant.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Server Setting.GetEnableSaaSExtensionInstallSetting:Boolean">
            <summary>Checks whether online extensions can be installed on the server.</summary>
            <returns>True, if they can be installed; otherwise, false.</returns>
            <remarks>Gets the value of the server setting EnableSaasExtensionInstallConfigSetting.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Server Setting.GetIsSaasExcelAddinEnabled:Boolean">
            <summary>Checks whether Excel add-in is enabled on the server.</summary>
            <returns>True if enabled; otherwise, false.</returns>
            <remarks>Gets the value of the server setting IsSaasExcelAddinEnabled.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Server Setting.GetApiServicesEnabled:Boolean">
            <summary>Checks whether the API Services are enabled.</summary>
            <returns>True if enabled; otherwise, false.</returns>
            <remarks>Gets the value of the server setting ApiServicesEnabled.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Server Setting.GetApiSubscriptionsEnabled:Boolean">
            <summary>Checks whether the API subscriptions are enabled.</summary>
            <returns>True if enabled; otherwise, false.</returns>
            <remarks>Gets the value of the server setting ApiSubscriptionsEnabled.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Server Setting.GetApiSubscriptionSendingNotificationTimeout:Integer">
            <summary>Gets the timeout for the notifications sent by API subscriptions.</summary>
            <returns>The timeout value in milliseconds.</returns>
            <remarks>Gets the value of the server setting ApiSubscriptionSendingNotificationTimeout.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Server Setting.GetApiSubscriptionMaxNumberOfNotifications:Integer">
            <summary>Gets the maximum number of notifications that API subscriptions can send.</summary>
            <returns>The maximum number of notifications that can be sent.</returns>
            <remarks>Gets the value of the server setting ApiSubscriptionMaxNumberOfNotifications.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Server Setting.GetApiSubscriptionDelayTime:Integer">
            <summary>Gets the delay when starting to process API subscriptions.</summary>
            <returns>The time value in milliseconds.</returns>
            <remarks>Gets the value of the server setting ApiSubscriptionDelayTime.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Server Setting.GetTestAutomationEnabled:Boolean">
            <summary>Checks whether the Test Automation is enabled.</summary>
            <returns>True if enabled; otherwise, false.</returns>
            <remarks>Gets the value of the server setting TestAutomationEnabled.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Server Setting.GetUsePermissionSetsFromExtensions:Boolean">
            <summary>Checks whether permissions are read from the permission table in SQL or from metadata (.al code)</summary>
            <returns>True if enabled; otherwise, false.</returns>
            <remarks>Gets the value of the server setting UsePermissionSetsFromExtensions.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Server Setting.GetEnableMembershipEntitlement:Boolean">
            <summary>Checks whether Entitlements are enabled</summary>
            <returns>True if enabled; otherwise false.</returns>
            <remarks>Gets the value of the server setting EnableMembershipEntitlement.</remarks>
        </member>
        <member name="O:Enum::System#Environment#Configuration#Signup Context">
            <summary>
            The Signup Context is used to track from where a tenant originated.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Signup Context. ">
            <summary>
            The blank value indicates the sinup context was not set or unknown.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Signup Context.Viral Signup">
            <summary>
             The Viral Signup value indicates the tenant was created by viral signup.
            </summary>
        </member>
        <member name="O:Table::System#Environment#Configuration#Signup Context Values">
            <summary>
            This table stores the signup context and additional values passed at signup.
            </summary>
        </member>
        <member name="F:Table::System#Environment#Configuration#Signup Context Values.Primary Key[10]">
            <summary>
            The primary key for the signup context values.
            </summary>
        </member>
        <member name="F:Table::System#Environment#Configuration#Signup Context Values.Signup Context">
            <summary>
            The Signup Context is used to track from where a tenant originated.
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#System Initialization">
            <summary>
            Exposes functionality to check whether the system is initializing as well as an event to subscribed to in order to execute logic right after the system has initialized.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#System Initialization.IsInProgress:Boolean">
            <summary>
            Checks whether the system initialization is currently in progress.
            </summary>
            <returns>True, if the system initialization is in progress; false, otherwise</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#System Initialization.ShouldCheckSignupContext:Boolean">
            <summary>
            Checks whether the signup context should be considered or whether it has expired.
            </summary>
            <returns>Returns true if the signup context is still relevant for the tenant</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#System Initialization.OnAfterInitialization">
            <summary>
            Integration event for after the system initialization.
            Used only for login.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#System Initialization.OnAfterLogin">
            <summary>
            Integration event for after the login.
            Subscribe to this event in order to execute additional initialization steps.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#System Initialization.OnSetSignupContext(Signup Context,Signup Context Values@)">
            <summary>
            Subscribe to this event to set the Signup Context and parse additional values.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#Accessible Companies">
            <summary>
            List page that contains the allowed companies for the current user.
            </summary>
        </member>
        <member name="O:Table::System#Environment#Configuration#Application User Settings">
            <summary>
            Table that stores user settings the Application defines.
            </summary>
        </member>
        <member name="F:Table::System#Environment#Configuration#Application User Settings.User Security ID">
            <summary>
            The user security ID of the user to whom the settings apply.
            </summary>
        </member>
        <member name="F:Table::System#Environment#Configuration#Application User Settings.Teaching Tips">
            <summary>
            Specifies whether teaching tips are enabled.
            </summary>
        </member>
        <member name="F:Table::System#Environment#Configuration#Application User Settings.Legacy Action Bar">
            <summary>
            Specifies whether the legacy action bar is enabled.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#Roles">
            <summary>
            List page that contains all available roles.
            </summary>
        </member>
        <member name="M:Page::System#Environment#Configuration#Roles.Initialize">
            <summary>
             Initializes the page by populating the source record.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#User Personalization">
            <summary>
            Page that shows the settings of a given user.
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#User Settings">
            <summary>
            Provides basic functionality for user settings.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.GetPageId:Integer">
            <summary>
            Gets the page id for the User Settings page.
            </summary>
            <returns>The page ID for the User Settings page.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.GetUserSettings(Guid,User Settings@)">
            <summary>
            Gets the settings for the given user.
            </summary>
            <param name="UserSecurityID">The user security id of the user.</param>
            <param name="UserSettings">The return Record with the settings of the User.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.DisableTeachingTips(Guid)">
            <summary>
            Disables the teaching tips for a given user.
            </summary>
            <param name="UserSecurityID">The user security id of the user.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.EnableTeachingTips(Guid)">
            <summary>
            Enables the teaching tips for a given user.
            </summary>
            <param name="UserSecurityID">The user security id of the user.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.DisableLegacyActionBar(Guid)">
            <summary>
            Disables the legacy action bar for a given user.
            </summary>
            <param name="UserSecurityID">The user security id of the user.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.EnableLegacyActionBar(Guid)">
            <summary>
            Enables the legacy action bar for a given user.
            </summary>
            <param name="UserSecurityID">The user security id of the user.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.GetAllowedCompaniesForCurrentUser(Company@)">
            <summary>
            Get the companies the current user has access to.
            </summary>
            <param name="TempCompany">Companies the current user has access to.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.LookupProfile(User Settings@)">
            <summary>
            Allows the user to select the new profile for given User Settings
            </summary>
            <param name="UserSettingsRec">User settings to update with the new profile</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.GetProfileName(User Settings):Text">
            <summary>
            Gets a profile name for the given user settings.
            </summary>
            <param name="UserSettingsRec">User settings to get the profile name.</param>
            <returns></returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.UpdateUserSettings(User Settings@)">
            <summary>
            Updates the user settings for given user
            </summary>
            <param name="UserSettings"></param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.OnGetDefaultProfile(All Profile@)">
            <summary>
            Integration event to get the default profile.
            </summary>
            <param name="AllProfile">The return record that holds the default profile.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.OnGetSettingsPageID(Integer@)">
            <summary>
            Integration event that allows changing the settings page ID.
            </summary>
            <param name="SettingsPageID">The new page ID for the user settings page.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.OnBeforeOpenSettings(Boolean@)">
            <summary>
            Integration event that allows changing the behavior of opening the settings page.
            </summary>
            <param name="Handled">Set to true to skip the default behavior.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.OnAfterGetUserSettings(User Settings@)">
            <summary>
            Integration event that allows updating the User Settings record with extra values.
            </summary>
            <param name="UserSettings">The User settings record to update.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.OnUpdateUserSettings(User Settings,User Settings)">
            <summary>
            Integration event that allows updating the settings on related records.
            </summary>
            <param name="OldSettings">The value of the settings before any user interaction.</param>
            <param name="NewSettings">The value of the settings after user interaction.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings.OnCompanyChange(Text,Boolean@)">
            <summary>
            Integration event that fires every time the company is changed.
            </summary>
            <param name="NewCompanyName">The name of the new company.</param>
            <param name="IsSetupInProgress">Set to true if the given company is still setting up.</param>
        </member>
        <member name="O:Page::System#Environment#Configuration#User Settings">
            <summary>
            Page that shows the settings of a given user.
            </summary>
        </member>
        <member name="O:Table::System#Environment#Configuration#User Settings">
            <summary>
            Temporary table that combines the settings defined by platform and application
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#User Settings FactBox">
            <summary>
            A Factbox that shows the settings of a given user.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#User Settings Impl#.HideUsersDependingOnPermissions(User Personalization@)">
            <summary>
            Ensure that users can only see their own personalizations, unless they have the permission to manage users on the tenant.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#User Settings List">
            <summary>
            List page that shows the settings of all users.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#App Setup List">
            <summary>This page shows all registered setups.</summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#Assisted Setup">
            <summary>This page shows all registered assisted setup guides.</summary>
        </member>
        <member name="O:Enum::System#Environment#Configuration#Assisted Setup Group">
            <summary>The group to which the setup belongs. Please extend this enum to add your own group to classify the setups being added by your extension.</summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Assisted Setup Group.Uncategorized">
            <summary>
            A default group, specifying that the assisted setup is not categorized.
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Checklist">
            <summary>
            Manage the checklist presented to users by inserting and deleting checklist items and controling the visibility of the checklist.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.Insert(Enum::System#Environment#Configuration#Guided Experience Type,ObjectType,Integer,Integer,All Profile@,Boolean)">
            <summary>
            Inserts a new checklist item.
            </summary>
            <param name="GuidedExperienceType">The type of guided experience item that the checklist item references.</param>
            <param name="ObjectTypeToRun">The object type run by the guided experience item that the checklist item references.</param>
            <param name="ObjectIDToRun">The object ID run by the guided experience item that the checklist item references.</param>
            <param name="OrderID">The index at which this checklist item should appear in the list. Please be aware that if other extensions also insert checklist items, then this ID might not match the index in the list.</param>
            <param name="TempAllProfile">The roles that this checklist item should be displayed for.</param>
            <param name="ShouldEveryoneComplete">Boolean value that controls whether everyone should complete this checklist item. If false, the checklist item will be marked as completed for everyone, even if only one person completes it.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.Insert(Enum::System#Environment#Configuration#Guided Experience Type,ObjectType,Integer,Integer,User@)">
            <summary>
            Inserts a new checklist item.
            </summary>
            <param name="GuidedExperienceType">The type of guided experience item that the checklist item references.</param>
            <param name="ObjectTypeToRun">The object type run by the guided experience item that the checklist item references.</param>
            <param name="ObjectIDToRun">The object ID run by the guided experience item that the checklist item references.</param>
            <param name="OrderID">The index at which this checklist item should appear in the list. Please be aware that if other extensions also insert checklist items, then this ID might not match the index in the list.</param>
            <param name="TempUser">The users that this checklist item should be displayed for.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.Insert(Enum::System#Environment#Configuration#Guided Experience Type,Text[250],Integer,All Profile@,Boolean)">
            <summary>
            Inserts a new checklist item.
            </summary>
            <param name="GuidedExperienceType">The type of guided experience item that the checklist item references.</param>
            <param name="Link">The URL that is open by the guided experience item that the checklist item references.</param>
            <param name="OrderID">The index at which this checklist item should appear in the list. Please be aware that if other extensions also insert checklist items, then this ID might not match the index in the list.</param>
            <param name="TempAllProfile">The roles that this checklist item should be displayed for.</param>
            <param name="ShouldEveryoneComplete">Boolean value that controls whether everyone should complete this checklist item. If false, the checklist item will be marked as completed for everyone, even if only one person completes it.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.Insert(Enum::System#Environment#Configuration#Guided Experience Type,Text[250],Integer,User@)">
            <summary>
            Inserts a new checklist item.
            </summary>
            <param name="GuidedExperienceType">The type of guided experience item that the checklist item references.</param>
            <param name="Link">The URL that is open by the guided experience item that the checklist item references.</param>
            <param name="OrderID">The index at which this checklist item should appear in the list. Please be aware that if other extensions also insert checklist items, then this ID might not match the index in the list.</param>
            <param name="TempUser">The users that this checklist item should be displayed for.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.Insert(Integer,Enum::System#Environment#Configuration#Spotlight Tour Type,Integer,All Profile@,Boolean)">
            <summary>
            Inserts a new checklist item for a spotlight tour.
            </summary>
            <param name="PageID">The ID of the page that the spotlight tour will run on.</param>
            <param name="SpotlightTourType">The type of spotlight tour.</param>
            <param name="OrderID">The index at which this checklist item should appear in the list. Please be aware that if other extensions also insert checklist items, then this ID might not match the index in the list.</param>
            <param name="TempAllProfile">The roles that this checklist item should be displayed for.</param>
            <param name="ShouldEveryoneComplete">Boolean value that controls whether everyone should complete this checklist item. If false, the checklist item will be marked as completed for everyone, even if only one person completes it.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.Insert(Integer,Enum::System#Environment#Configuration#Spotlight Tour Type,Integer,User@)">
            <summary>
            Inserts a new checklist item for a spotlight tour.
            </summary>
            <param name="PageID">The ID of the page that the spotlight tour will run on.</param>
            <param name="SpotlightTourType">The type of spotlight tour.</param>
            <param name="OrderID">The index at which this checklist item should appear in the list. Please be aware that if other extensions also insert checklist items, then this ID might not match the index in the list.</param>
            <param name="TempAllProfile">The roles that this checklist item should be displayed for.</param>
            <param name="ShouldEveryoneComplete">Boolean value that controls whether everyone should complete this checklist item. If false, the checklist item will be marked as completed for everyone, even if only one person completes it.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.Delete(Enum::System#Environment#Configuration#Guided Experience Type,ObjectType,Integer)">
            <summary>
            Deletes a checklist item.
            </summary>
            <param name="GuidedExperienceType">The type of guided experience item that the checklist item references.</param>
            <param name="ObjectTypeToRun">The object type run by the guided experience item that the checklist item references.</param>
            <param name="ObjectIDToRun">The object ID run by the guided experience item that the checklist item references.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.Delete(Enum::System#Environment#Configuration#Guided Experience Type,Text[250])">
            <summary>
            Deletes a checklist item.
            </summary>
            <param name="GuidedExperienceType">The type of guided experience item that the checklist item references.</param>
            <param name="Link">The URL that is open by the guided experience item that the checklist item references.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.Delete(Integer,Enum::System#Environment#Configuration#Spotlight Tour Type)">
            <summary>
            Deletes a spotlight tour checklist item.
            </summary>
            <param name="PageID">The ID of the page that the spotlight tour runs on.</param>
            <param name="SpotlightTourType">The type of spotlight tour.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.ShouldInitializeChecklist(Boolean):Boolean">
            <summary>
            Checks whether the checklist should be initialized for the current company.
            </summary>
            <param name="ShouldSkipForEvaluationCompany">If true, then the function will always return false for evaluation companies.</param>
            <returns>True if the checklist should be initialized and false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.MarkChecklistSetupInProgress">
            <summary>
            Marks the checklist setup in progress.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.MarkChecklistSetupAsDone">
            <summary>
            Marks the checklist setup as done.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.InitializeGuidedExperienceItems">
            <summary>
            Initializes the guided experience items. Mostly called once in a company's lifecycle from BaseApp, if used in an extension, please see also ShouldInitializeChecklist.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.UpdateUserName(RecordRef@,Text[30],Text[50],Integer)">
            <summary>
            Updates the user name for checklist records that have it as a primary key.
            </summary>
            <param name="RecordRef">The recordref that poins to the record that is to be modified.</param>
            <param name="Company">The company in which the table is to be modified.</param>
            <param name="UserName">The new user name.</param>
            <param name="TableID">The table for which the user name is to be modified.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.IsChecklistVisible:Boolean">
            <summary>
            Checks whether the checklist is visible for the current user on the profile that the user is currently on.
            </summary>
            <returns>True if the checklist is visible and false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.SetChecklistVisibility(Boolean)">
            <summary>
            Sets the checklist visibility for the current user and the profile that the user is currently using.
            </summary>
            <param name="Visible">True if the checklist should be visible and false otherwise.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist.OnChecklistLoading">
            <summary>
            Event that is triggered when the checklist is being loaded.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Checklist Completion Requirements.Anyone">
            <summary>
            Anyone who can view the checklist item can perform the action and the item will be registered
            as completed.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Checklist Completion Requirements.Everyone">
            <summary>
            Everyone who can view the checklist item needs to perform the action in order for the item
            to be registered as completed.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Checklist Completion Requirements.Specific users">
            <summary>
            One or more specific users need to perform the checklist action in order for it to
            be registered as completed.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#Checklist">
            <summary>
            Lists all checklist items and provides capabilities to edit and insert new ones based on existing guided experience items.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#Checklist Administration">
            <summary>
            Provides capabilities to edit and insert new checklist items based on existing guided experience items.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#Checklist Item Roles">
            <summary>
            Lists the roles that a checklist item should be displayed to.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#Checklist Item Users">
            <summary>
            Lists the users that a checklist item should be displayed to.
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Checklist Banner">
            <summary>
            Provides functionality to customize the Checklist Banner
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist Banner.OnBeforeUpdateBannerLabels(Boolean@,Boolean,Text@,Text@,Text@,Text@,Text@,Boolean,Boolean)">
            <summary>
            Integration Event to provide the ability to customize Labels on the Checklist Banner
            </summary>
            <param name="IsHandled"> Whether the labels are handled by the subscriber, set it to false if you want them to be handled by first-party logic </param>
            <param name="IsEvaluationCompany"> If the company has type Evaluation </param>
            <param name="TitleTxt"> The title text for the checklist banner </param>
            <param name="TitleCollapsedTxt"> The title collapse text for the checklist banner </param>
            <param name="HeaderTxt"> The header text for the checklist banner </param>
            <param name="HeaderCollapsedTxt"> The header collapse text for the checklist banner </param>
            <param name="DescriptionTxt"> The description text for the checklist banner </param>
            <param name="IsSetupStarted"> If setup has started for the checklist banner </param>
            <param name="AreAllItemsSkippedOrCompleted"> If all the checklist items are skipped or completed </param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Checklist Banner.OnOpenChecklistBannerPage(Boolean@,Boolean)">
            <summary>
            Integration Event to provide the ability to skip the welcome state of the checklist banner.
            </summary>
            <param name="SkipWelcomeState"> Whether to skip the welcome state or not </param>
            <param name="IsEvaluationCompany"> If the company has type Evaluation </param>
        </member>
        <member name="O:Page::System#Environment#Configuration#Checklist Banner">
            <summary>
            Lists the checklist items that a user should go through to finalize their onboarding experience.
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Guided Experience">
            <summary>
            Manage the guided experience items that users can access.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.InsertManualSetup(Text[2048],Text[50],Text[1024],Integer,ObjectType,Integer,Enum::System#Environment#Configuration#Manual Setup Category,Text[250])">
            <summary>Inserts a manual setup page.</summary>
            <param name="Title">The title of the manual setup.</param>
            <param name="ShortTitle">A short title used for the checklist.</param>
            <param name="Description">The description of the manual setup.</param>
            <param name="ExpectedDuration">How many minutes the setup is expected to take, should be lower than 30000.</param>
            <param name="ObjectTypeToRun">The type of the object to be run as part of the setup.</param>
            <param name="ObjectIDToRun">The ID of the object to be run as part of the setup.</param>
            <param name="ManualSetupCategory">The category that this manual setup belongs to.</param>
            <param name="Keywords">The keywords related to the manual setup.</param>
            <error> If the ExpectedDuration parameter is greater than 30000. </error>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.InsertManualSetup(Text[2048],Text[50],Text[1024],Integer,ObjectType,Integer,Enum::System#Environment#Configuration#Manual Setup Category,Text[250],Boolean)">
            <summary>Inserts a manual setup page.</summary>
            <param name="Title">The title of the manual setup.</param>
            <param name="ShortTitle">A short title used for the checklist.</param>
            <param name="Description">The description of the manual setup.</param>
            <param name="ExpectedDuration">How many minutes the setup is expected to take, should be lower than 30000.</param>
            <param name="ObjectTypeToRun">The type of the object to be run as part of the setup.</param>
            <param name="ObjectIDToRun">The ID of the object to be run as part of the setup.</param>
            <param name="ManualSetupCategory">The category that this manual setup belongs to.</param>
            <param name="Keywords">The keywords related to the manual setup.</param>
            <param name="IsPrimarySetup">Is this a primary setup for this extension.</param>
            <error> If the ExpectedDuration parameter is greater than 30000. </error>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.InsertAssistedSetup(Text[2048],Text[50],Text[1024],Integer,ObjectType,Integer,Enum::System#Environment#Configuration#Assisted Setup Group,Text[250],Enum::System#Media#Video Category,Text[250])">
            <summary>Inserts an assisted setup page.</summary>
            <param name="Title">The title of the assisted setup.</param>
            <param name="ShortTitle">A short title used for the checklist.</param>
            <param name="Description">The description of the assisted setup.</param>
            <param name="ExpectedDuration">How many minutes the setup is expected to take, should be lower than 30000.</param>
            <param name="ObjectTypeToRun">The type of the object to be run as part of the setup.</param>
            <param name="ObjectIDToRun">The ID of the object to be run as part of the setup.</param>
            <param name="AssistedSetupGroup">The assisted setup group enum that this belongs to.</param>
            <param name="VideoUrl">The URL of the video that explains the purpose and use of this setup.</param>
            <param name="VideoCategory">The category of the video for this setup.</param>
            <param name="HelpLink">The help url that explains the purpose and usage of this setup.</param>
            <error> If the ExpectedDuration parameter is greater than 30000. </error>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.InsertAssistedSetup(Text[2048],Text[50],Text[1024],Integer,ObjectType,Integer,Enum::System#Environment#Configuration#Assisted Setup Group,Text[250],Enum::System#Media#Video Category,Text[250],Boolean)">
            <summary>Inserts an assisted setup page.</summary>
            <param name="Title">The title of the assisted setup.</param>
            <param name="ShortTitle">A short title used for the checklist.</param>
            <param name="Description">The description of the assisted setup.</param>
            <param name="ExpectedDuration">How many minutes the setup is expected to take, should be lower than 30000.</param>
            <param name="ObjectTypeToRun">The type of the object to be run as part of the setup.</param>
            <param name="ObjectIDToRun">The ID of the object to be run as part of the setup.</param>
            <param name="AssistedSetupGroup">The assisted setup group enum that this belongs to.</param>
            <param name="VideoUrl">The URL of the video that explains the purpose and use of this setup.</param>
            <param name="VideoCategory">The category of the video for this setup.</param>
            <param name="HelpLink">The help url that explains the purpose and usage of this setup.</param>
            <param name="IsPrimarySetup">Is this a primary setup for this extenion.</param>
            <error> If the ExpectedDuration parameter is greater than 30000. </error>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.InsertLearnLink(Text[2048],Text[50],Text[1024],Integer,Text[250])">
            <summary>Inserts a learn link.</summary>
            <param name="Title">The title of the learn link.</param>
            <param name="ShortTitle">A short title used for the checklist.</param>
            <param name="Description">The description of the learn link.</param>
            <param name="ExpectedDuration">How many minutes the user should expect to spend using the link, should be lower than 30000.</param>
            <param name="Link">The learn link.</param>
            <error> If the ExpectedDuration parameter is greater than 30000. </error>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.InsertTour(Text[2048],Text[50],Text[1024],Integer,Integer)">
            <summary>Inserts a tour for a page.</summary>
            <param name="Title">The title of the tour.</param>
            <param name="ShortTitle">A short title used for the checklist.</param>
            <param name="Description">The description of the tour.</param>
            <param name="ExpectedDuration">How many minutes the user should expect to spend taking the tour, should be lower than 30000.</param>
            <param name="PageID">The ID of the page that the tour is run on.</param>
            <error> If the ExpectedDuration parameter is greater than 30000. </error>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.InsertSpotlightTour(Text[2048],Text[50],Text[1024],Integer,Integer,Enum::System#Environment#Configuration#Spotlight Tour Type,Dictionary of [Spotlight Tour Text,Text])">
            <summary>Inserts a spotlight tour for a page.</summary>
            <param name="Title">The title of the manual setup.</param>
            <param name="ShortTitle">A short title used for the checklist.</param>
            <param name="Description">The description of the manual setup.</param>
            <param name="ExpectedDuration">How many minutes the tour is expected to take, should be lower than 30000.</param>
            <param name="PageID">The ID of the page that the spotlight tour will be run on.</param>
            <param name="SpotlightTourType">The type of spotlight tour.</param>
            <param name="SpotlightTourTexts">The texts that will be displayed during the spotlight tour.</param>
            <error> If the ExpectedDuration parameter is greater than 30000. </error>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.InsertApplicationFeature(Text[2048],Text[50],Text[1024],Integer,ObjectType,Integer)">
            <summary>Inserts a guided experience item for an application feature.</summary>
            <param name="Title">The title of the application feature.</param>
            <param name="ShortTitle">A short title used for the checklist.</param>
            <param name="Description">The description of the application feature.</param>
            <param name="ExpectedDuration">How many minutes the user should expect to spend, should be lower than 30000.</param>
            <param name="ObjectTypeToRun">The object type to run for the application feature.</param>
            <param name="ObjectIDToRun">The object ID to run for the application feature.</param>
            <error> If the ExpectedDuration parameter is greater than 30000. </error>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.InsertVideo(Text[2048],Text[50],Text[1024],Integer,Text[250],Enum::System#Media#Video Category)">
            <summary>Inserts a guided experience item for a video.</summary>
            <param name="Title">The title of the video.</param>
            <param name="ShortTitle">A short title used for the checklist.</param>
            <param name="Description">The description of the video.</param>
            <param name="ExpectedDuration">The duration of the video in minutes, should be lower than 30000.</param>
            <param name="VideoUrl">The URL of the video.</param>
            <param name="VideoCategory">The category of the video.</param>
            <error> If the ExpectedDuration parameter is greater than 30000. </error>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.OpenManualSetupPage">
            <summary>Opens the Manual Setup page containing the setup guides.</summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.OpenManualSetupPage(Enum::System#Environment#Configuration#Manual Setup Category)">
            <summary>Opens the Manual Setup page with the setup guides filtered on a selected group of guides.</summary>
            <param name="ManualSetupCategory">The group which the view should be filtered to.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.AddTranslationForSetupObjectTitle(Enum::System#Environment#Configuration#Guided Experience Type,ObjectType,Integer,Integer,Text)">
            <summary>Adds the translation for the title of the setup object.</summary>
            <param name="GuidedExperienceType">The type of setup object.</param>
            <param name="ObjectType">The object type that identifies the guided experience item.</param>
            <param name="ObjectID">The object ID that identifies the guided experience item.</param>
            <param name="LanguageID">The language ID for which the translation is made.</param>
            <param name="Translation">The translated text of the title.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.AddTranslationForSetupObjectDescription(Enum::System#Environment#Configuration#Guided Experience Type,ObjectType,Integer,Integer,Text)">
            <summary>Adds the translation for the description of the setup object.</summary>
            <param name="GuidedExperienceType">The type of setup object.</param>///
            <param name="ObjectType">The object type that identifies the guided experience item.</param>
            <param name="ObjectID">The object ID that identifies the guided experience item.</param>
            <param name="LanguageID">The language ID for which the translation is made.</param>
            <param name="Translation">The translated text of the description.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.AddTranslationForSetupObjectShortTitle(Enum::System#Environment#Configuration#Guided Experience Type,ObjectType,Integer,Integer,Text)">
            <summary>Adds the translation for the short title of the setup object.</summary>
            <param name="GuidedExperienceType">The type of setup object.</param>
            <param name="ObjectType">The object type that identifies the guided experience item.</param>
            <param name="ObjectID">The object ID that identifies the guided experience item.</param>
            <param name="LanguageID">The language ID for which the translation is made.</param>
            <param name="Translation">The translated text of the short title.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.IsAssistedSetupComplete(ObjectType,Integer):Boolean">
            <summary>Checks whether a user has completed the setup corresponding to the object type and ID.</summary>
            <param name="ObjectType">The object type that identifies the guided experience item.</param>
            <param name="ObjectID">The object ID that identifies the guided experience item.</param>
            <returns>Returns true if the given setup guide has been completed by a user, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.Exists(Enum::System#Environment#Configuration#Guided Experience Type,ObjectType,Integer):Boolean">
            <summary>Checks whether a guided experience item exists for the given object type and ID.</summary>
            <param name="GuidedExperienceType">The type of setup object.</param>/// ///
            <param name="ObjectType">The object type that identifies the guided experience item.</param>
            <param name="ObjectID">The object ID that identifies the guided experience item.</param>
            <returns>True if a guided experience item exists for the provided object type and ID; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.Exists(Enum::System#Environment#Configuration#Guided Experience Type,Text[250]):Boolean">
            <summary>Checks whether a guided experience item exists for the link.</summary>
            <param name="GuidedExperienceType">The type of setup object.</param>/// ///
            <param name="Link">The link that identifies the guided experience item.</param>
            <returns>True if a guided experience item exists for the provided link; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.AssistedSetupExistsAndIsNotComplete(ObjectType,Integer):Boolean">
            <summary>Checks whether a guided experience item exists but has not been completed for the given object type and ID.</summary>
            <param name="ObjectType">The object type that identifies the guided experience item.</param>
            <param name="ObjectID">The object ID that identifies the guided experience item.</param>
            <returns>True if it exists and is incomplete, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.CompleteAssistedSetup(ObjectType,Integer)">
            <summary>Sets the status of the guided experience item to complete.</summary>
            <param name="ObjectType">The object type that identifies the guided experience item.</param>
            <param name="ObjectID">The object ID that identifies the guided experience item.</param>
            <remarks>This is typically called from inside the guided experience item when the setup is finished.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.ResetAssistedSetup(ObjectType,Integer)">
            <summary>Resets the status of the guided experience item so that it does not appear to have been completed.</summary>
            <param name="ObjectType">The object type that identifies the guided experience item.</param>
            <param name="ObjectID">The object ID that identifies the guided experience item.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.Run(Enum::System#Environment#Configuration#Guided Experience Type,ObjectType,Integer)">
            <summary>Issues the call to start the guided experience item.</summary>
            <param name="GuidedExperienceType">The type of setup object.</param>/// ///
            <param name="ObjectType">The object type that identifies the guided experience item.</param>
            <param name="ObjectID">The object ID that identifies the guided experience item.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.OpenAssistedSetup">
            <summary>Opens the Assisted Setup page with the setup guides in it.</summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.OpenAssistedSetup(Enum::System#Environment#Configuration#Assisted Setup Group)">
            <summary>Opens the Assisted Setup page with the setup guides filtered on a selected group of guides.</summary>
            <param name="AssistedSetupGroup">The group of guides to display on the Assisted Setup page.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.Remove(Enum::System#Environment#Configuration#Guided Experience Type,ObjectType,Integer)">
            <summary>Removes a guided experience item.</summary>
            <param name="GuidedExperienceType">The type of setup object.</param>
            <param name="ObjectType">The object type that identifies the guided experience item.</param>
            <param name="ObjectID">The object ID that identifies the guided experience item.</param>
            <remarks>The OnRegister subscriber which adds this guided experience item needs to be removed first.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.Remove(Enum::System#Environment#Configuration#Guided Experience Type,Text[250])">
            <summary>Removes a guided experience item.</summary>
            <param name="GuidedExperienceType">The type of guided experience item.</param>
            <param name="Link">The link that identifies the guided experience item.</param>
            <remarks>The OnRegister subscriber which adds this guided experience item needs to be removed first.</remarks>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.Remove(Enum::System#Environment#Configuration#Guided Experience Type,ObjectType,Integer,Enum::System#Environment#Configuration#Spotlight Tour Type)">
            <summary>
            Removes a guided experience item.
            </summary>
            <param name="GuidedExperienceType">The type of guided experience item.</param>
            <param name="ObjectType">The object type of the guided experience item.</param>
            <param name="ObjectID">The object ID of the guided experience item.</param>
            <param name="SpotlightTourType">The type of spotlight tour of the guided experience item.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.RunExtensionSetup(Guid)">
            <summary>Opens the primary setup for an app.</summary>
            <raises>OnRegisterAssistedSetup</raises>
            <raises>OnRegisterManualSetup</raises>
            <param name="AppId">The app id of the app whose setup needs to be run.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.SetupForExtensionExists(Guid):Boolean">
            <summary>checks if setup for an extension exist.</summary>
            <raises>OnRegisterAssistedSetup</raises>
            <raises>OnRegisterManualSetup</raises>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.OpenCombinedSetupList(Guid)">
            <summary>Opens a aggregated list of both manual setup and assisted setup pages for an extension.</summary>
            <param name="AppId">The app id of the app whose setup pages will be shown.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.CleanupOldGuidedExperienceItems(Boolean,Integer)">
            <summary> Clean up old guided experience items with too many old version. </summary>
            <param name="OnlyFirstParty">If true, only clean up first party items.</param>
            <param name="Limit">The threshold of old version.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.OnRegisterAssistedSetup">
            <summary>Notifies that the list of assisted setups is being gathered, and that new items might be added.</summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.OnReRunOfCompletedAssistedSetup(Guid,ObjectType,Integer,Boolean@)">
            <summary>Notifies that an assisted setup that was previously completed is being run again.</summary>
            <param name="ExtensionID">The app ID of the extension to which the item belongs.</param>
            <param name="ObjectType">The object type that identifies the assisted setup.</param>
            <param name="ObjectID">The object ID that identifies the assisted setup.</param>
            <param name="Handled">The flag which if set, would stop executing the run of the assisted setup.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.OnAfterRunAssistedSetup(Guid,ObjectType,Integer)">
            <summary>Notifies that the run of the assisted setup has finished.</summary>
            <param name="ExtensionID">The app ID of the extension to which the setup belongs.</param>
            <param name="ObjectType">The object type that identifies the assisted setup.</param>
            <param name="ObjectID">The object ID that identifies the assisted setup.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.OnBeforeOpenRoleBasedAssistedSetupExperience(Integer@,Boolean@)">
            <summary>Notifies that the Open Role Based Setup Experience has been invoked.</summary>
            <param name="PageID">The ID of the page being invoked.</param>
            <param name="Handled">The flag which if set, would stop executing the OpenRoleBasedSetupExperience of the assisted setup guide.</param>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.OnRegisterManualSetup">
            <summary>
            The event that is raised so that subscribers can add the new manual setups that can be displayed in the Manual Setup page.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Guided Experience.OnRegisterGuidedExperienceItem">
            <summary>
            The event that is raised so that subscribers can add the new guided experience items.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#Guided Experience Item List">
            <summary>
            Lists guided experience items.
            </summary>
        </member>
        <member name="O:Page::System#Environment#Configuration#Manual Setup">
            <summary>This page shows all registered manual setups.</summary>
        </member>
        <member name="O:Enum::System#Environment#Configuration#Manual Setup Category">
            <summary>The category enum is used to navigate the setup page, which can have many records. It is encouraged to extend this enum and use the newly defined options.</summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Manual Setup Category.Uncategorized">
            <summary>
            A default category, specifying that the manual setup is not categorized.
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Configuration#Spotlight Tour">
            <summary>
            Provides functionality to use spotlight tours
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Configuration#Spotlight Tour.Start(Integer,Enum::System#Environment#Configuration#Spotlight Tour Type,Text,Text,Text,Text)">
            <summary>
            Start spotlight tour on specific page.
            </summary>
            <param name="PageId">Page to run tour on.</param>
            <param name="SpotlightTourType">Type of tour.</param>
            <param name="Title1">Title for step 1.</param>
            <param name="Text1">Text for step 1.</param>
            <param name="Title2">Title for step 2.</param>
            <param name="Text2">Text for step 2.</param>
        </member>
        <member name="O:Enum::System#Environment#Configuration#Spotlight Tour Text">
            <summary>
            Specifies the exact step of a spotlight tour that a text belongs to.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Spotlight Tour Text.Step1Title">
            <summary>
            The title for the first step in the spotlight tour.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Spotlight Tour Text.Step1Text">
            <summary>
            The text for the first step in the spotlight tour.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Spotlight Tour Text.Step2Title">
            <summary>
            The title for the second step in the spotlight tour.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Spotlight Tour Text.Step2Text">
            <summary>
            The text for the second step in the spotlight tour.
            </summary>
        </member>
        <member name="O:Enum::System#Environment#Configuration#Spotlight Tour Type">
            <summary>
            Specifies the type of a spotlight tour.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Spotlight Tour Type.None">
            <summary>
            Default value - none.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Spotlight Tour Type.Open in Excel">
            <summary>
            Specifies that the tour spotlights the Open in Excel functionality on the page.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Spotlight Tour Type.Share to Teams">
            <summary>
            Specifies that the tour spotlights the Share to Teams functionality on the page.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Configuration#Spotlight Tour Type.Copilot">
            <summary>
            Specifies that the tour spotlights the Copilot functionality on the page.
            </summary>
        </member>
        <member name="O:Codeunit::System#Environment#Client Type Management">
            <summary>
            Exposes functionality to fetch the client type that the user is currently using.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Client Type Management.GetCurrentClientType:ClientType">
            <summary>Gets the current type of the client being used by the caller, e.g. Phone, Web, Tablet etc.</summary>
            <remarks> Use the GetCurrentClientType wrapper method when you want to test a flow on a different type of client.</remarks>
            <example>Example
            <code>
            IF ClientTypeManagement.GetCurrentClientType IN [CLIENTTYPE::xxx, CLIENTTYPE::yyy] THEN
            </code>
            </example>
            <returns>The client type of the current session.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Client Type Mgt# Impl#.OnAfterGetCurrentClientType(ClientType@)">
            <summary>
            An event that indicates that subscribers should set the client type that should be returned when the GetCurrentClientType is called.
            </summary>
            <remarks>
            Subscribe to this event from tests if you need to verify a different flow.
            This feature is for testing and is subject to a different SLA than production features.
            Do not use this event in a production environment. This should be subscribed to only in tests.
            </remarks>
        </member>
        <member name="EV:">
            <summary>
            Event raised when addin is done loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when error occurs
            </summary>
            <param name="Error">Error name</param>
            <param name="Description">Error description</param>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired when the control add-in should be refreshed.
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired on the thumbnail onclick
            </summary>
            <param name="Selection">The thumbnail selection</param>
        </member>
        <member name="M:ControlAddIn::System#Environment#WelcomeWizard.Initialize(Text,Text,Text,Text,Text,Text,Text,Text,Text,Text,Text,Text,Text)">
            <summary>
            Function that initializes the WelcomeWizard API
            </summary>
            <param name="Title">Welcome Wizard Title</param>
            <param name="Subtitle">Welcome Wizard Sub Title</param>
            <param name="Explanation">Information description</param>
            <param name="Intro">Intro text</param>
            <param name="IntroDescription">Description for the intro video</param>
            <param name="GetStarted">Get started text</param>
            <param name="GetStartedDescription">Description for the get started video</param>
            <param name="GetHelp">Find Help Text</param>
            <param name="GetHelpDescription">Description for the find help video</param>
            <param name="RoleCenters">Role Centers Text</param>
            <param name="RoleCentersDescription">Description about the role centers</param>
            <param name="RoleCenter">Role center</param>
            <param name="LegalDescription">Description explaining demo data is for demonstration purposes</param>
        </member>
        <member name="M:ControlAddIn::System#Environment#WelcomeWizard.LoadFlows(Text)">
            <summary>
            Function that loads the embedded Welcome Wizard into a container on a webpage
            </summary>        
            <param name="EnvironmentId">Environmnet ID</param>  
        </member>
        <member name="M:ControlAddIn::System#Environment#WelcomeWizard.UpdateProfileId(Text)">
            <summary>
            Function that updates the Role Center Profile ID
            </summary>        
            <param name="ChangedProfileId">Profile ID</param> 
        </member>
        <member name="M:ControlAddIn::System#Environment#WelcomeWizard.LoadTemplates(Text,Text,Text,Text)">
            <summary>
            Function that loads embedded WelcomeWizard templates into a container on a webpage
            </summary>
            <param name="EnvironmentId">Environmnet ID</param>
            <param name="SearchTerm">Filters templates matching the search term</param>
            <param name="PageSize">Number of templates to be displayed in the container</param>
            <param name="Destination">Determines page that opens when one selects a template</param>
        </member>
        <member name="O:Codeunit::System#Environment#Environment Information">
            <summary>
            Exposes functionality to fetch attributes concerning the environment of the service on which the tenant is hosted.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.IsProduction:Boolean">
            <summary>
            Checks if environment type of tenant is Production.
            </summary>
            <returns>True if the environment type is Production, False otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.GetEnvironmentName:Text">
            <summary>
            Gets the name of the environment.
            </summary>
            <returns>The name of the environment.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.IsSandbox:Boolean">
            <summary>
            Checks if environment type of tenant is Sandbox.
            </summary>
            <returns>True if the environment type is a Sandbox, False otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.IsSaaS:Boolean">
            <summary>
            Checks if the deployment type is SaaS (Software as a Service).
            </summary>
            <returns>True if the deployment type is a SaaS, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.IsOnPrem:Boolean">
            <summary>
            Checks the deployment type is OnPremises.
            </summary>
            <returns>True if the deployment type is OnPremises, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.IsFinancials:Boolean">
            <summary>
            Checks the application family is Financials.
            </summary>
            <returns>True if the application family is Financials, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.IsSaaSInfrastructure:Boolean">
            <summary>
            Checks if the deployment infrastucture is SaaS (Software as a Service).
            Note: This function will return false in a Docker container.
            </summary>
            <returns>True if the deployment infrastructure type is a SaaS, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.GetApplicationFamily:Text">
            <summary>
            Gets the application family.
            </summary>
            <returns>The application family.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.VersionInstalled(Guid):Integer">
            <summary>
            Gets the version which a given app was installed in.
            </summary>
            <param name="AppID">The module ID of the app.</param>
            <returns>The major version number when the app was installed.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.CanStartSession:Boolean">
            <summary>
            Checks if a new session can be started via the Session.StartSession call.
            </summary>
            <returns>True, if a new session can be created, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.EnableM365Collaboration">
            <summary>
            Sets M365 Collaboration to enabled in the tenant admin center
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.GetLinkedPowerPlatformEnvironmentId:Text">
            <summary>
            Gets the linked Power Platform environment id.
            </summary>
            <returns>The linked Power Platform environment id, if set.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Environment Information.GetEnvironmentSetting(Text):Text">
            <summary>
            Gets the value of the specified environment setting. This is only callable from Microsoft published apps.
            </summary>
            <param name="SettingName">The name of the setting.</param>
            <returns>The value of the setting.</returns>
        </member>
        <member name="O:Codeunit::System#Environment#Tenant Information">
            <summary>
            Exposes functionality to fetch attributes concerning the current tenant.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant Information.GetTenantId:Text">
            <summary>
            Gets the tenant ID.
            </summary>
            <returns>If it cannot be found, an empty string is returned.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant Information.GetTenantDisplayName:Text">
            <summary>
            Gets the tenant name.
            </summary>
            <returns>If it cannot be found, an empty string is returned.</returns>
        </member>
        <member name="O:Codeunit::System#Environment#Tenant License State">
            <summary>
            Exposes functionality to retrieve the current state of the tenant license.
            </summary>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.GetPeriod(Enum::System#Environment#Tenant License State):Integer">
            <summary>
            Returns the default number of days that the tenant license can be in the current state, passed as a parameter.
            </summary>
            <param name="TenantLicenseState">The tenant license state.</param>
            <returns>The default number of days that the tenant license can be in the current state, passed as a parameter or -1 if a default period is not defined for the state.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.GetStartDate:DateTime">
            <summary>
            Gets the start date for the current license state.
            </summary>
            <returns>The start date for the current license state or a blank date if no license state is found.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.GetEndDate:DateTime">
            <summary>
            Gets the end date for the current license state.
            </summary>
            <returns>The end date for the current license state or a blank date if no license state is found.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.IsEvaluationMode:Boolean">
            <summary>
            Checks whether the current license state is evaluation.
            </summary>
            <returns>True if the current license state is evaluation, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.IsTrialMode:Boolean">
            <summary>
            Checks whether the current license state is trial.
            </summary>
            <returns>True if the current license state is trial, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.IsTrialSuspendedMode:Boolean">
            <summary>
            Checks whether the trial license is suspended.
            </summary>
            <returns>True if the current license state is suspended and the previous license state is trial, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.IsTrialExtendedMode:Boolean">
            <summary>
            Checks whether the trial license has been extended.
            </summary>
            <returns>True if the current license state is trial and the tenant has had at least one trial license state before, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.IsTrialExtendedSuspendedMode:Boolean">
            <summary>
            Checks whether the trial license has been extended and is currently suspended.
            </summary>
            <returns>True if the current license state is suspended and the tenant has had at least two trial license states before, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.IsPaidMode:Boolean">
            <summary>
            Checks whether the current license state is paid.
            </summary>
            <returns>True if the current license state is paid, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.IsPaidWarningMode:Boolean">
            <summary>
            Checks whether the paid license is in warning mode.
            </summary>
            <returns>True if the current license state is warning and the previous license state is paid, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.IsPaidSuspendedMode:Boolean">
            <summary>
            Checks whether the paid license is suspended.
            </summary>
            <returns>True if the current license state is suspended and the previous license state is paid, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.GetLicenseState:Enum::System#Environment#Tenant License State">
            <summary>
            Gets the the current license state.
            </summary>
            <returns>The the current license state.</returns>
        </member>
        <member name="M:Codeunit::System#Environment#Tenant License State.ExtendTrialLicense">
            <summary>
            Extends the trial license.
            </summary>
        </member>
        <member name="O:Enum::System#Environment#Tenant License State">
            <summary>
            This enum has the tenant license state types.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Tenant License State.Evaluation">
            <summary>
            Specifies that the tenant license is in the evaluation state.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Tenant License State.Trial">
            <summary>
            Specifies that the tenant license is in the trial state.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Tenant License State.Paid">
            <summary>
            Specifies that the tenant license is in the paid state.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Tenant License State.Warning">
            <summary>
            Specifies that the tenant license is in the warning state.
            This period starts after the trial period or when the tenant's subscription expires.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Tenant License State.Suspended">
            <summary>
            Specifies that the tenant license is in the suspended state.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Tenant License State.Deleted">
            <summary>
            Specifies that the tenant license is in the deleted state.
            </summary>
        </member>
        <member name="E:Enum::System#Environment#Tenant License State.LockedOut">
            <summary>
            Specifies that the tenant license is in the locked state.
            The tenant is locked, and no one can access it.
            </summary>
        </member>
        <member name="O:Codeunit::System#Apps#AppSource#AppSource Json Utilities">
            <summary>
            Library for managing AppSource product retrieval and usage.
            </summary>
        </member>
        <member name="O:Table::System#Apps#AppSource#AppSource Product">
            <summary>
            Represents an except of a product definition in AppSource.
            </summary>
        </member>
        <member name="O:Page::System#Apps#AppSource#AppSource Product Details">
            <summary>
            Single AppSource Product Details Page
            </summary>
        </member>
        <member name="O:Page::System#Apps#AppSource#AppSource Product List">
            <summary>
            List of Products retrieved from AppSource
            </summary>
        </member>
        <member name="O:Codeunit::System#Apps#AppSource#AppSource Product Manager">
            <summary>
            Library for managing AppSource product retrieval and usage.
            </summary>
        </member>
        <member name="M:Codeunit::System#Apps#AppSource#AppSource Product Manager.OpenAppSource">
            <summary>
            Opens Microsoft AppSource web page for the region is specified in the UserSessionSettings or 'en-us' by default.
            </summary>
        </member>
        <member name="M:Codeunit::System#Apps#AppSource#AppSource Product Manager.OpenAppInAppSource(Text)">
            <summary>
            Opens the AppSource product page in Microsoft AppSource, for the specified unique product ID.
            </summary>
            <param name="UniqueProductIDValue">The Unique Product ID of the product to show in MicrosoftAppSource</param>
        </member>
        <member name="M:Codeunit::System#Apps#AppSource#AppSource Product Manager.OpenProductDetailsPage(Text)">
            <summary>
            Opens the AppSource product details page for the specified unique product ID.
            </summary>
            <param name="UniqueProductIDValue"></param>
        </member>
        <member name="M:Codeunit::System#Apps#AppSource#AppSource Product Manager.ExtractAppIDFromUniqueProductID(Text):Guid">
            <summary>
            Extracts the AppID from the Unique Product ID.
            </summary>
            <param name="UniqueProductIDValue">The Unique Product ID of the product as defined in MicrosoftAppSource</param>
            <returns>AppID found in the Product ID</returns>
            <remarks>The AppSource unique product ID is specific to AppSource and combines different features while always ending with PAPID. and extension app id. Example: PUBID.mdcc1667400477212|AID.bc_converttemp_sample|PAPPID.9d314b3e-ffd3-41fd-8755-7744a6a790df</remarks>
        </member>
        <member name="M:Codeunit::System#Apps#AppSource#AppSource Product Manager.CanInstallProductWithPlans(Text):Boolean">
            <summary>
            Checks if the product can be installed or your are required to perform operations on AppSource before you can install the product.
            </summary>
        </member>
        <member name="M:Codeunit::System#Apps#AppSource#AppSource Product Manager.EnsureValidLanguage(Text):Text">
            <summary>
            Ensures that the language is valid for AppSource.
            </summary>
            <param name="Language">Language requested</param>
            <returns>The requested language if supported otherwise en</returns>
            <remarks>See https://learn.microsoft.com/en-us/rest/api/marketplacecatalog/dataplane/products/list?view=rest-marketplacecatalog-dataplane-2023-05-01-preview&amp;tabs=HTTP for supported languages</remarks>
        </member>
        <member name="M:Codeunit::System#Apps#AppSource#AppSource Product Manager.GetProductsAndPopulateRecord(AppSource Product@):Text">
            <summary>
            Get all products from a remote server and adds them to the AppSource Product table.
            </summary>
        </member>
        <member name="M:Codeunit::System#Apps#AppSource#AppSource Product Manager.GetProductDetails(Text):JsonObject">
            <summary>
            Get specific product details from.
            </summary>
        </member>
        <member name="O:Interface::System#Apps#AppSource#AppSource Product Manager Dependencies">
            <summary>
            Interface for managing dependencies to the AppSource Product Manager codeunit.
            </summary>
        </member>
        <member name="O:Codeunit::System#Apps#AppSource#AppSrc Product Deps# Provider">
            <summary>
            Provides the dependencies used by the AppSource Gallery module.
            </summary>
        </member>
        <member name="O:Codeunit::System#Apps#Data Out Of Geo# App">
            <summary>
            Provides functions for adding, removing or checking if an App ID is within the list of apps that send data out of the Geolocation.
            </summary>
        </member>
        <member name="M:Codeunit::System#Apps#Data Out Of Geo# App.Add(Guid):Boolean">
            <summary>
            Adds an App ID to the list of apps that have data out of the geolocation.
            </summary>
            <param name="AppID">The App ID of the extension.</param>
            <returns>The result of adding to the list. True if the data was added; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Data Out Of Geo# App.Remove(Guid):Boolean">
            <summary>
            Removes an App ID from the list of apps that have data out of the geolocation.
            </summary>
            <param name="AppID">The App ID of the extension.</param>
            <returns>The result of removing from the list. True if the data was removed; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Data Out Of Geo# App.Contains(Guid):Boolean">
            <summary>
            Checks if an App ID is in the list of apps that have data out of the geolocation.
            </summary>
            <param name="AppID">The App ID of the extension.</param>
            <returns>The result of checking whether an AppID is the list. True if the AppID was found; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Data Out Of Geo# App.AlreadyInstalled:Boolean">
            <summary>
            Checks if any of the already installed extensions are in the list of apps that have data out of the geolocation.
            </summary>
            <returns>The result of checking whether an already installed extension is in the list apps that have data out of the geolocation. True if at least one installed extension was found in the list; false otherwise.</returns>
        </member>
        <member name="O:Page::System#Apps#Delete Orphaned Extension Data">
            <summary>
            Lists the extension which have data but are not installed, and provides the ability to delete their data.
            </summary>
        </member>
        <member name="O:Page::System#Apps#Extension Deployment Status">
            <summary>
            Displays the deployment status for extensions that are deployed or are scheduled for deployment.
            </summary>
        </member>
        <member name="O:Table::System#Apps#Extension Deployment Status">
            <summary>This temporary table is used to mirror the "NAV App Tenant Operation" system table and present details about the extension deployment status.///</summary>
        </member>
        <member name="O:Enum::System#Apps#Extension Deploy To">
            <summary>
            Specifies the version in which the extension is deployed.
            </summary>
        </member>
        <member name="E:Enum::System#Apps#Extension Deploy To.Current version">
            <summary>
            Current version.
            </summary>
        </member>
        <member name="E:Enum::System#Apps#Extension Deploy To.Next minor version">
            <summary>
            Next minor version
            </summary>
        </member>
        <member name="E:Enum::System#Apps#Extension Deploy To.Next major version">
            <summary>
            Next major version
            </summary>
        </member>
        <member name="O:Page::System#Apps#Extension Details">
            <summary>
            Displays details about the selected extension, and offers features for installing and uninstalling it.
            </summary>
        </member>
        <member name="O:Page::System#Apps#Extension Details Part">
            <summary>
            Displays information about the extension.
            </summary>
        </member>
        <member name="O:Page::System#Apps#Extension Installation">
            <summary>
            Installs the selected extension.
            </summary>
        </member>
        <member name="O:Table::System#Apps#Extension Installation">
            <summary>
            The table containing information about an extension install.
            </summary>
            <remarks>
            The casing of the fields is expected to match the casing in the URL filter used when calling the installation page 2503:
            'ID' IS '[AppID]' AND 'PreviewKey' IS '[PreviewKey]'
            </remarks>
        </member>
        <member name="F:Table::System#Apps#Extension Installation.ID">
            <summary>
            The app identifier. Should uniquely identify the application and remains static across versions.
            </summary>
        </member>
        <member name="F:Table::System#Apps#Extension Installation.PreviewKey[2048]">
            <summary>
            The preview key to be used when installing a preview version of an AppSource app.
            </summary>
        </member>
        <member name="F:Table::System#Apps#Extension Installation.ResponseUrl[2048]">
            <summary>
            The Response URL for the Partner Center ingestion call back to be used when installing a version of an AppSource app.
            </summary>
        </member>
        <member name="O:Page::System#Apps#Extension Logo Part">
            <summary>
            Displays the extension logo.
            </summary>
        </member>
        <member name="O:Codeunit::System#Apps#Extension Management">
            <summary>
            Provides features for installing and uninstalling, downloading and uploading, configuring and publishing extensions and their dependencies.
            </summary>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.InstallExtension(Guid,Integer,Boolean):Boolean">
            <summary>
            Installs an extension, based on its PackageId and Locale Identifier.
            </summary>
            <param name="PackageId">The ID of the extension package.</param>
            <param name="lcid">The Locale Identifier.</param>
            <param name="IsUIEnabled">Indicates whether the install operation is invoked through the UI.</param>
            <returns>True if the extention is installed successfully; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.UninstallExtension(Guid,Boolean):Boolean">
            <summary>
            Uninstalls an extension, based on its PackageId.
            </summary>
            <param name="PackageId">The ID of the extension package.</param>
            <param name="IsUIEnabled">Indicates if the uninstall operation is invoked through the UI.</param>
            <returns>True if the extention is uninstalled successfully; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.UninstallExtensionAndDeleteExtensionData(Guid,Boolean):Boolean">
            <summary>
            Uninstalls an extension, based on its PackageId and permanently deletes the tables that contain data for the extension.
            </summary>
            <param name="PackageId">The ID of the extension package.</param>
            <param name="IsUIEnabled">Indicates if the uninstall operation is invoked through the UI.</param>
            <returns>True if the extention is uninstalled successfully; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.UploadExtension(InStream,Integer)">
            <summary>
            Uploads an extension, using a File Stream and based on the Locale Identifier.
            This method is only applicable in SaaS environment.
            </summary>
            <param name="FileStream">The File Stream containing the extension to be uploaded.</param>
            <param name="lcid">The Locale Identifier.</param>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.DeployExtension(Guid,Integer,Boolean)">
            <summary>
            Deploys an extension, based on its ID and Locale Identifier.
            This method is only applicable in SaaS environment.
            </summary>
            <param name="AppId">The AppId of the extension.</param>
            <param name="lcid">The Locale Identifier.</param>
            <param name="IsUIEnabled">Indicates whether the install operation is invoked through the UI.</param>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.UnpublishExtension(Guid):Boolean">
            <summary>
            Unpublishes an extension, based on its PackageId.
            An extension can only be unpublished, if it is a per-tenant one and it has been uninstalled first.
            </summary>
            <param name="PackageId">The PackageId of the extension.</param>
            <returns>True if the extention is unpublished successfully; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.DownloadExtensionSource(Guid):Boolean">
            <summary>
            Downloads the source of an extension, based on its PackageId.
            </summary>
            <param name="PackageId">The PackageId of the extension.</param>
            <returns>True if the operation was successful; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.GetExtensionSource(Guid,Codeunit::System#Utilities#Temp Blob@):Boolean">
            <summary>
            Retrives the source of an extension, based on its PackageId.
            </summary>
            <param name="PackageId">The PackageId of the extension.</param>
            <param name="ExtensionSourceTempBlob">TempBlob where the zip is stored.</param>
            <returns>True if the operation was successful; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.IsInstalledByPackageId(Guid):Boolean">
            <summary>
            Checks whether an extension is installed, based on its PackageId.
            </summary>
            <param name="PackageId">The ID of the extension package.</param>
            <returns>The result of checking whether an extension is installed.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.IsInstalledByAppId(Guid):Boolean">
            <summary>
            Checks whether an extension is installed, based on its AppId.
            </summary>
            <param name="AppId">The AppId of the extension.</param>
            <returns>The result of checking whether an extension is installed.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.GetAllExtensionDeploymentStatusEntries(Extension Deployment Status@)">
            <summary>
            Retrieves a list of all the Deployment Status Entries
            </summary>
            <param name="TempExtensionDeploymentStatus">Gets the list of all the Deployment Status Entries in a temporary record.</param>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.GetDeployOperationInfo(Guid,Text@,Text@,Text@,Text@,Text)">
            <summary>
            Retrieves the AppName,Version,Schedule,Publisher by the NAVApp Tenant OperationId.
            </summary>
            <param name="OperationId">The OperationId of the NAVApp Tenant.</param>
            <param name="Version">Gets the Version of the NavApp.</param>
            <param name="Schedule">Gets the Schedule of the NavApp.</param>
            <param name="Publisher">Gets the Publisher of the NavApp.</param>
            <param name="AppName">Gets the AppName of the NavApp.</param>
            <param name="Description">The Description of the NavApp; in case no name is provided, the description will replace the AppName.</param>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.RefreshStatus(Guid)">
            <summary>
            Refreshes the status of the Operation.
            </summary>
            <param name="OperationId">The Id of the operation to be refreshed.</param>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.ConfigureExtensionHttpClientRequestsAllowance(Text,Boolean):Boolean">
            <summary>
            Allows or disallows Http Client requests against the specified extension.
            </summary>
            <param name="PackageId">The Id of the extension to configure.</param>
            <param name="AreHttpClientRqstsAllowed">The value to set for "Allow HttpClient Requests".</param>
            <returns>True configuration was successful; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.GetLatestVersionPackageIdByAppId(Guid):Guid">
            <summary>
            Gets the PackageId of the latest Extension Version by the Extension AppId.
            </summary>
            <param name="AppId">The AppId of the extension.</param>
            <returns>The package ID by app ID. Empty GUID, if package with the provided app ID does not exist.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.GetCurrentlyInstalledVersionPackageIdByAppId(Guid):Guid">
            <summary>
            Gets the PackageId of the latest version of the extension by the extension's AppId.
            </summary>
            <param name="AppId">The AppId of the installed extension.</param>
            <returns>The package ID of the installed version of an extenstion. Empty GUID, if package with the provided app ID does not exist.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.GetSpecificVersionPackageIdByAppId(Guid,Text,Integer,Integer,Integer,Integer):Guid">
            <summary>
            Gets the package ID of the version of the extension by the extension's AppId, Name, Version Major, Version Minor, Version Build, Version Revision.
            </summary>
            <param name="AppId">The AppId of the extension.</param>
            <param name="Name">The input/output Name parameter of the extension. If there is no need to filter by this parameter, the default value is ''.</param>
            <param name="VersionMajor">The input/output Version Major parameter of the extension. If there is no need to filter by this parameter, the default value is "0".</param>
            <param name="VersionMinor">The input/output Version Minor parameter  of the extension. If there is no need to filter by this parameter, the default value is "0"..</param>
            <param name="VersionBuild">The input/output Version Build parameter  of the extension. If there is no need to filter by this parameter, the default value is "0".</param>
            <param name="VersionRevision">The input/output Version Revision parameter  of the extension. If there is no need to filter by this parameter, the default value is "0".</param>
            <returns>The package ID of the extension with the specified paramters.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.GetExtensionLogo(Guid,Codeunit::System#Utilities#Temp Blob@)">
            <summary>
            Gets the logo of an extension.
            </summary>
            <param name="AppId">The App ID of the extension.</param>
            <param name="LogoTempBlob">Out parameter holding the logo of the extension.</param>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.UploadExtensionToVersion(InStream,Integer,Enum::System#Apps#Extension Deploy To)">
            <summary>
            Uploads an extension to current version, next minor or next major, using a File Stream and based on the Locale Identifier.
            This method is only applicable in SaaS environment.
            </summary>
            <param name="FileInStream">The File Stream containing the extension to be uploaded.</param>
            <param name="lcid">The Locale Identifier.</param>
            <param name="DeployTo">The version that the extension will be deployed to.</param>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.UploadExtensionToVersion(InStream,Integer,Enum::System#Apps#Extension Deploy To,Enum::System#Apps#Extension Sync Mode)">
            <summary>
            Uploads an extension to current version, next minor or next major, using a File Stream and based on the Locale Identifier.
            This method is only applicable in SaaS environment.
            </summary>
            <param name="FileInStream">The File Stream containing the extension to be uploaded.</param>
            <param name="lcid">The Locale Identifier.</param>
            <param name="DeployTo">The version that the extension will be deployed to.</param>
            <param name="SyncMode">The desired sync mode.</param>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.InstallMarketplaceExtension(Guid)">
            <summary>
            Installs an extension, based on its extension id.
            </summary>
            <param name="AppId">The ID of the extension package.</param>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.GetAppName(Guid):Text">
            <summary>
            Returns the Name of the app given the App Id.
            </summary>
            <param name="AppId">The unique identifier of the app.</param>
            <returns>The name of the app.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.GetDeploymentDetailedStatusMessage(Guid):Text">
            <summary>
            Returns the detailed message from a deployment operation.
            </summary>
            <param name="OperationId">The Id of the operation to get the detailed message from.</param>
            <returns>The detailed message as text.</returns>
        </member>
        <member name="M:Codeunit::System#Apps#Extension Management.GetDeploymentDetailedStatusMessageAsStream(Guid,OutStream)">
            <summary>
            Writes the detailed message from a deployment operation to a stream.
            </summary>
            <param name="OperationId">The Id of the operation to get the detailed message from.</param>
            <param name="OutStream">An OutStream to write the message to.</param>
            <returns></returns>
        </member>
        <member name="O:Page::System#Apps#Extension Management">
            <summary>
            Lists the available extensions, and provides features for managing them.
            </summary>
        </member>
        <member name="O:Codeunit::System#Apps#Extension Marketplace">
            <summary>
            This codeunit is used as a helper for managing interactions between
            Business Central and the AppSource marketplace. The marketplace provides a gallery
            that users can use to select and install Extensions published (an thus
            available) on Business Central.
            When and item is selected from the gallery, a JSON object is returned
            and needs to be parsed for the key information we need to perform an
            install.
            At current the key pieces of that object look like this:
            "msgType":"&lt;type name string&gt;",
            "data":
               "applicationId":"&lt;string identifier for selected extension&gt;",
               "telemetryUrl":"&lt;url&gt;",
            </summary>
        </member>
        <member name="O:Page::System#Apps#Extension Marketplace">
            <summary>
            Shows the Extension Marketplace.
            </summary>
        </member>
        <member name="O:Table::System#Apps#Extension Pending Setup">
            <summary>This table is used to store information about extensions that was installed but did not run the setup.</summary>
        </member>
        <member name="O:Page::System#Apps#Extension Settings">
            <summary>
            Displays settings for the selected extension, and allows users to edit them.
            </summary>
        </member>
        <member name="O:Page::System#Apps#Extension Setup Launcher">
            <summary>
            This page is a launch pad for running setup after installation of an extension.
            </summary>
        </member>
        <member name="O:Enum::System#Apps#Extension Sync Mode">
            <summary>
            Specifies how to sync the extension.
            </summary>
        </member>
        <member name="E:Enum::System#Apps#Extension Sync Mode.Add">
            <summary>
            Modifies the database schema by creating or extending the tables required to
            satisfy the app's metadata. This mode considers existing versions of the specified
            app in its calculations.
            </summary>
        </member>
        <member name="E:Enum::System#Apps#Extension Sync Mode.Force Sync">
            <summary>
            A destructive sync mode which makes the resulting schema match the extension in question
            regardless of its starting state. This means no change is off limits. This also means
            that changes which delete things (tables, fields, etc.) also delete the data they contain.
            </summary>
            <remarks>
            This mode is intended for use when e.g. renaming tables. It can lead to data loss if used
            without caution.
            </remarks>
        </member>
        <member name="O:Page::System#Apps#Extn Deployment Status Detail">
            <summary>
            Displays details about the deployment status of the selected extension.
            </summary>
        </member>
        <member name="O:Page::System#Apps#Extn# Installation Progress">
            <summary>
            Displays the deployment status for extensions that are deployed or are scheduled for deployment.
            </summary>
        </member>
        <member name="O:Page::System#Apps#Extn# Orphaned App Details">
            <summary>
            Displays details about the selected extension, and offers features for installing and uninstalling it.
            </summary>
        </member>
        <member name="O:Page::System#Apps#Marketplace Extn Deployment">
            <summary>
            Provides an interface for installing extensions from AppSource.
            </summary>
        </member>
        <member name="O:Page::System#Apps#Upload And Deploy Extension">
            <summary>
            Allows users to upload an extension and schedule its deployment.
            </summary>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.InitializeCollection(Text)">
            <summary>
            Initializes the JSON array with the specified JSON string.
            </summary>
            <param name="JSONString">The Json string</param>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.InitializeObject(Text)">
            <summary>
            Initializes the JSON object with the specified JSON string.
            </summary>
            <param name="JSONString">The Json string</param>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetCollectionCount:Integer">
            <summary>
            Returns the number of elements in the JSON array.
            </summary>
            <returns>The number of elements in the JSON array</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetCollectionAsText:Text">
            <summary>
            Returns the JSON array in text format.
            </summary>
            <returns>The JSON array in text format</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetCollectionAsText(Boolean):Text">
            <summary>
            Returns the JSON array in text format.
            </summary>
            <param name="Indentation">Specified whether the text should be indented.</param>
            <returns>The JSON array in text format</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetCollection:JsonArray">
            <summary>
            Returns the JSON array.
            </summary>
            <returns>The JSON array</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetObjectAsText:Text">
            <summary>
            Returns the JSON object in text format.
            </summary>
            <returns>The JSON object in text format</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetObject:JsonObject">
            <summary>
            Returns the JSON object.
            </summary>
            <returns>The JSON object</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetObjectFromCollectionByIndex(Integer,Text@):Boolean">
            <summary>
            Returns the JSON object at the specified index in the JSON array.
            </summary>
            <param name="Index">The index of the JSON object</param>
            <param name="JsonObjectTxt">The JSON object in text format</param>
            <returns>True if the JSON object is returned; otherwise, false</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetValueAndSetToRecFieldNo(RecordRef,Text,Integer):Boolean">
            <summary>
            Gets the value at the specified property path in the JSON object and sets it to the specified record field.
            </summary>
            <param name="RecordRef">The record reference</param>
            <param name="PropertyPath">The property path</param>
            <param name="FieldNo">The field number</param>
            <returns>True if the value is set to the record field; otherwise, false</returns>
            <remarks>
            Next type of fields are supported: Integer, Decimal, Date, Boolean, GUID, Text, Code, Option, BLOB, RecordID
            Text values are trimmed to the Max Length of the field.
            </remarks>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetPropertyValueByName(Text,Variant@):Boolean">
            <summary>
            Gets the value at the specified property name in the JSON object.
            </summary>
            <param name="PropertyName">The property name</param>
            <param name="Value">The value</param>
            <returns>True if the value is returned; otherwise, false</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetStringPropertyValueByName(Text,Text@):Boolean">
            <summary>
            Gets the text value at the specified property name in the JSON object.
            </summary>
            <param name="PropertyName">The property name</param>
            <param name="Value">The value</param>
            <returns>True if the value is returned; otherwise, false</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetEnumPropertyValueFromJObjectByName(Text,Option@):Boolean">
            <summary>
            Gets the option value at the specified property name in the JSON object.
            </summary>
            <param name="PropertyName">The property name</param>
            <param name="Value">The value</param>
            <returns>True if the value is returned; otherwise, false</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetBoolPropertyValueFromJObjectByName(Text,Boolean@):Boolean">
            <summary>
            Gets the boolean value at the specified property name in the JSON object.
            </summary>
            <param name="PropertyName">The property name</param>
            <param name="Value">The value</param>
            <returns>True if the value is returned; otherwise, false</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetDecimalPropertyValueFromJObjectByName(Text,Decimal@):Boolean">
            <summary>
            Gets the decimal value at the specified property name in the JSON object.
            </summary>
            <param name="PropertyName">The property name</param>
            <param name="Value">The value</param>
            <returns>True if the value is returned; otherwise, false</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetIntegerPropertyValueFromJObjectByName(Text,Integer@):Boolean">
            <summary>
            Gets the integer value at the specified property name in the JSON object.
            </summary>
            <param name="PropertyName">The property name</param>
            <param name="Value">The value</param>
            <returns>True if the value is returned; otherwise, false</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.GetGuidPropertyValueFromJObjectByName(Text,Guid@):Boolean">
            <summary>
            Gets the Guid value at the specified property name in the JSON object.
            </summary>
            <param name="PropertyName">The property name</param>
            <param name="Value">The value</param>
            <returns>True if the value is returned; otherwise, false</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.ReplaceOrAddJPropertyInJObject(Text,Variant):Boolean">
            <summary>
            Replace or add the specified property in the JSON object.
            </summary>
            <param name="PropertyName">The property name</param>
            <param name="Value">The value</param>
            <returns>True if the property is replaced or added; otherwise, false</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.AddJObjectToCollection(Text):Boolean">
            <summary>
            Add the the JSON object to the JSON array.
            </summary>
            <param name="Value">The JSON object in text format</param>
            <returns>True if the JSON object is added; otherwise, false</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.RemoveJObjectFromCollection(Integer):Boolean">
            <summary>
            Remove the JSON object at the specified index in the JSON array.
            </summary>
            <param name="Index">The index of the JSON object</param>
            <returns>True if the JSON object is removed; otherwise, false</returns>
        </member>
        <member name="M:Codeunit::System#Text#Json#Json.ReplaceJObjectInCollection(Integer,Text):Boolean">
            <summary>
            Replace the specified JSON object in the JSON array.
            </summary>
            <param name="Index">The index of the JSON object</param>
            <param name="Value">The JSON object in text format</param>
            <returns>True if the JSON object is replaced; otherwise, false</returns>
        </member>
        <member name="O:Codeunit::System#Text#Auto Format">
            <summary>
            Exposes functionality to format the appearance of decimal data types in fields of a table, report, or page.
            </summary>
        </member>
        <member name="M:Codeunit::System#Text#Auto Format.ResolveAutoFormat(Enum::System#Text#Auto Format,Text[80]):Text[80]">
            <summary>
            Formats the appearance of decimal data types.
            Use this method if you need to format decimals for text message in the same way how system formats decimals in fields.
            </summary>
            <param name="AutoFormatType">
            A value that determines how data is formatted.
            The values that are available are "0" and "11".
            Use "0" to ignore the value that AutoFormatExpr passes and use the standard format for decimals instead.
            Use "11" to apply a specific format in AutoFormatExpr without additional transformation.
            </param>
            <seealso cref="OnResolveAutoFormat"/>
            <param name="AutoFormatExpr">An expression that specifies how to format data.</param>
            <returns>The resolved expression that defines data formatting</returns>
        </member>
        <member name="M:Codeunit::System#Text#Auto Format.ReadRounding:Decimal">
            <summary>
            Gets the default rounding precision.
            </summary>
            <returns>Returns the rounding precision.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Auto Format.OnAfterResolveAutoFormat(Enum::System#Text#Auto Format,Text[80],Text[80]@)">
            <summary>
            Integration event to resolve the ResolveAutoFormat procedure.
            </summary>
            <param name="AutoFormatType">A value that determines how data is formatted.</param>
            <param name="AutoFormatExpr">An expression that specifies how to format data.</param>
            <param name="Result">A resolved expression that defines how to format data.</param>
        </member>
        <member name="M:Codeunit::System#Text#Auto Format.OnResolveAutoFormat(Enum::System#Text#Auto Format,Text[80],Text[80]@,Boolean@)">
            <summary>
            Event that is called to resolve cases for AutoFormatTypes other that "0" and "11".
            Subscribe to this event if you want to introduce new AutoFormatTypes.
            </summary>
            <param name="AutoFormatType">A value that determines how data is formatted.</param>
            <param name="AutoFormatExpr">An expression that specifies how to format data.</param>
            <param name="Result">
            The resolved expression that defines data formatting.
            For example '&lt;Precision,4:4&gt;&lt;Standard Format,2&gt; suffix' that depending on your regional settings
            will format decimal into "-12345.6789 suffix" or "-12345,6789 suffix".
            </param>
            <param name="Resolved">A value that describes whether the data formatting expression is correct.</param>
        </member>
        <member name="M:Codeunit::System#Text#Auto Format.OnReadRounding(Decimal@)">
            <summary>
            Integration event to resolve the ReadRounding procedure.
            </summary>
            <param name="AmountRoundingPrecision">The decimal value precision.</param>
        </member>
        <member name="O:Enum::System#Text#Auto Format">
            <summary>
            Formats the appearance of decimal data types.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Auto Format.DefaultFormat">
            <summary>
            Ignore the value that AutoFormatExpr passes and use the standard format for decimals instead.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Auto Format.CustomFormatExpr">
            <summary>
            Apply a specific format in AutoFormatExpr without additional transformation.
            </summary>
        </member>
        <member name="O:Codeunit::System#Text#Base64 Convert">
            <summary>
            Converts text to and from its base-64 representation.
            </summary>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.ToBase64(Text):Text">
            <summary>
            Converts the value of the input string to its equivalent string representation that is encoded with base-64 digits.
            </summary>
            <param name="String">The string to convert.</param>
            <returns>The string representation, in base-64, of the input string.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.ToBase64(SecretText):SecretText">
            <summary>
            Converts the value of the input secret string to its equivalent secret string representation that is encoded with base-64 digits.
            </summary>
            <param name="SecretString">The secret string to convert.</param>
            <returns>The secret string representation, in base-64, of the input secret string.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.ToBase64(Text,TextEncoding):Text">
            <summary>
            Converts the value of the input string to its equivalent string representation that is encoded with base-64 digits.
            </summary>
            <param name="String">The string to convert.</param>
            <param name="TextEncoding">The TextEncoding for the input string.</param>
            <returns>The string representation, in base-64, of the input string.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.ToBase64(Text,TextEncoding,Integer):Text">
            <summary>
            Converts the value of the input string to its equivalent string representation that is encoded with base-64 digits.
            </summary>
            <param name="String">The string to convert.</param>
            <param name="TextEncoding">The TextEncoding for the input string.</param>
            <param name="Codepage">The Codepage if TextEncoding is MsDos or Windows.</param>
            <returns>The string representation, in base-64, of the input string.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.ToBase64(Text,Boolean):Text">
            <summary>
            Converts the value of the input string to its equivalent string representation that is encoded with base-64 digits.
            </summary>
            <param name="String">The string to convert.</param>
            <param name="InsertLineBreaks">Specifies whether line breaks are inserted in the output.
            If true, inserts line breaks after every 76 characters.</param>
            <returns>The string representation, in base-64, of the input string.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.ToBase64(Text,Boolean,TextEncoding,Integer):Text">
            <summary>
            Converts the value of the input string to its equivalent string representation that is encoded with base-64 digits.
            </summary>
            <param name="String">The string to convert.</param>
            <param name="InsertLineBreaks">Specifies whether line breaks are inserted in the output.
            If true, inserts line breaks after every 76 characters.</param>
            <param name="TextEncoding">The TextEncoding for the input string.</param>
            <param name="Codepage">The Codepage if TextEncoding is MsDos or Windows.</param>
            <returns>The string representation, in base-64, of the input string.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.ToBase64(InStream):Text">
            <summary>
            Converts the value of the input stream to its equivalent string representation that is encoded with base-64 digits.
            </summary>
            <param name="InStream">The stream to read the input from.</param>
            <returns>The string representation, in base-64, of the input string.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.ToBase64(InStream,Boolean):Text">
            <summary>
            Converts the value of the input stream to its equivalent string representation that is encoded with base-64 digits.
            </summary>
            <param name="InStream">The stream to read the input from.</param>
            <param name="InsertLineBreaks">Specifies whether line breaks are inserted in the output.
            If true, inserts line breaks after every 76 characters.</param>
            <returns>The string representation, in base-64, of the input string.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.FromBase64(Text):Text">
            <summary>
            Converts the specified string, which encodes binary data as base-64 digits, to an equivalent regular string.
            </summary>
            <param name="Base64String">The string to convert.</param>
            <returns>Regular string that is equivalent to the input base-64 string.</returns>
            <error>The length of Base64String, ignoring white-space characters, is not zero or a multiple of 4.</error>
            <error>The format of Base64String is invalid. Base64String contains a non-base-64 character, more than two padding characters,
            or a non-white space-character among the padding characters.</error>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.FromBase64(SecretText):SecretText">
            <summary>
            Converts the specified secret string, which encodes binary data as base-64 digits, to an equivalent regular secret string.
            </summary>
            <param name="Base64SecretString">The secret string to convert.</param>
            <returns>Regular secret string that is equivalent to the input base-64 secret string.</returns>
            <error>The length of Base64SecretString, ignoring white-space characters, is not zero or a multiple of 4.</error>
            <error>The format of Base64SecretString is invalid. Base64String contains a non-base-64 character, more than two padding characters,
            or a non-white space-character among the padding characters.</error>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.FromBase64(Text,TextEncoding):Text">
            <summary>
            Converts the specified string, which encodes binary data as base-64 digits, to an equivalent regular string.
            </summary>
            <param name="Base64String">The string to convert.</param>
            <param name="TextEncoding">The TextEncoding for the input string.</param>
            <returns>Regular string that is equivalent to the input base-64 string.</returns>
            <error>The length of Base64String, ignoring white-space characters, is not zero or a multiple of 4.</error>
            <error>The format of Base64String is invalid. Base64String contains a non-base-64 character, more than two padding characters,
            or a non-white space-character among the padding characters.</error>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.FromBase64(Text,TextEncoding,Integer):Text">
            <summary>
            Converts the specified string, which encodes binary data as base-64 digits, to an equivalent regular string.
            </summary>
            <param name="Base64String">The string to convert.</param>
            <param name="TextEncoding">The TextEncoding for the inout string.</param>
            <param name="Codepage">The Codepage if TextEncoding is MsDos or Windows.</param>
            <returns>Regular string that is equivalent to the input base-64 string.</returns>
            <error>The length of Base64String, ignoring white-space characters, is not zero or a multiple of 4.</error>
            <error>The format of Base64String is invalid. Base64String contains a non-base-64 character, more than two padding characters,
            or a non-white space-character among the padding characters.</error>
        </member>
        <member name="M:Codeunit::System#Text#Base64 Convert.FromBase64(Text,OutStream)">
            <summary>
            Converts the specified string, which encodes binary data as base-64 digits, to an equivalent regular string.
            </summary>
            <param name="Base64String">The string to convert.</param>
            <param name="OutStream">The stream to write the output to.</param>
            <returns>Regular string that is equivalent to the input base-64 string.</returns>
            <error>The length of Base64String, ignoring white-space characters, is not zero or a multiple of 4.</error>
            <error>The format of Base64String is invalid. Base64String contains a non-base-64 character, more than two padding characters,
            or a non-white space-character among the padding characters.</error>
        </member>
        <member name="O:Codeunit::System#Text#Caption Class">
            <summary>
            Exposes events that can be used to resolve custom CaptionClass properties.
            </summary>
        </member>
        <member name="M:Codeunit::System#Text#Caption Class.OnResolveCaptionClass(Text,Text,Integer,Text@,Boolean@)">
            <summary>
            Integration event for resolving CaptionClass expression, split into CaptionArea and CaptionExpr.
            Note there should be a single subscriber per caption area.
            The event implements the "resolved" pattern - if a subscriber resolves the caption, it should set Resolved to TRUE.
            </summary>
            <param name="CaptionArea">The caption area used in the CaptionClass expression. Should be unique for every subscriber.</param>
            <param name="CaptionExpr">The caption expression used for resolving the CaptionClass expression.</param>
            <param name="Language">The current language ID that can be used for resolving the CaptionClass expression.</param>
            <param name="Caption">Exit parameter - the resolved caption</param>
            <param name="Resolved">Boolean for marking whether the CaptionClass expression was resolved.</param>
        </member>
        <member name="M:Codeunit::System#Text#Caption Class.OnAfterCaptionClassResolve(Integer,Text,Text[1024]@)">
            <summary>
            Integration event for after resolving CaptionClass expression.
            </summary>
            <param name="Language">The current language ID.</param>
            <param name="CaptionExpression">The original CaptionClass expression.</param>
            <param name="Caption">The resolved caption expression.</param>
        </member>
        <member name="O:Codeunit::System#Text#Encoding">
            <summary>
            Codeunig that exposes encoding functionality.
            </summary>
        </member>
        <member name="M:Codeunit::System#Text#Encoding.Convert(Integer,Integer,Text):Text">
            <summary>
            Converts a text from one encoding to another.
            </summary>
            <param name="SourceCodepage">Encoding code page identifier of the source text. Valid values are between 0 and 65535.</param>
            <param name="DestinationCodepage">Encoding code page identifier for the result text. Valid values are between 0 and 65535.</param>
            <param name="Text">The text to convert.</param>
            <returns>The text in the destination encoding.</returns>
        </member>
        <member name="O:Page::System#Text#Azure OpenAi Settings">
            <summary>
            Page for viewing settings for Azure OpenAI.
            </summary>
        </member>
        <member name="O:Table::System#Text#Azure OpenAi Settings">
            <summary>
            Contains settings for Azure OpenAI.
            </summary>
        </member>
        <member name="O:Page::System#Text#Copilot Information">
            <summary>
            Page for viewing information about Copilot.
            </summary>
        </member>
        <member name="O:Codeunit::System#Text#Entity Text">
            <summary>
            Exposes the public functionality for handling entity text.
            </summary>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text.IsEnabled(Boolean):Boolean">
            <summary>
            Gets if Entity Text functionality is enabled.
            </summary>
            <param name="Silent">If this should be evaluated silently.</param>
            <returns>True if the functionality is enabled.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text.IsEnabled:Boolean">
            <summary>
            Gets if Entity Text functionality is enabled.
            </summary>
            <returns>True if the functionality is enabled.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text.CanSuggest:Boolean">
            <summary>
            Gets if the Entity Text Suggest functionality is enabled
            </summary>
            <returns>True if the functionality is enabled.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text.GetText(Integer,Guid,Enum::System#Text#Entity Text Scenario):Text">
            <summary>
            Gets the rich text for a given Entity Text.
            </summary>
            <param name="TableId">The ID of the table for which to retrieve the entity text.</param>
            <param name="SystemId">The ID of the entity for which to retrieve the entity text.</param>
            <param name="EntityTextScenario">The entity text scenario to retrieve the text for.</param>
            <returns>The rich text content of the entity text (or an empty string if it is not found).</returns>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text.GetText(Entity Text@):Text">
            <summary>
            Gets the rich text for a given Entity Text.
            </summary>
            <param name="EntityText">The entity text record to read the text from.</param>
            <returns>The rich text content of the entity text.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text.GenerateText(Dictionary of [Text,Text],Enum::System#Text#Entity Text Tone,Enum::System#Text#Entity Text Format,Enum::System#Text#Entity Text Emphasis):Text">
            <summary>
            Generate Entity Text using AI capabilities.
            </summary>
            <param name="Facts">The Facts of the Entity used for generation.</param>
            <param name="Tone">The tone of the generated text.</param>
            <param name="TextFormat">The length and format of the generated text.</param>
            <param name="TextEmphasis">Feature to emphasize.</param>
            <returns>Generated entity text.</returns>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text.UpdateText(Entity Text@,Text)">
            <summary>
            Updates the Entity Text record with the current text.
            </summary>
            <param name="EntityText">The entity text record to update.</param>
            <param name="EntityTextContent">The new entity text content.</param>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text.SetEntityTextAuthorization(Text,Text,SecretText)">
            <summary>
            Sets AI authorization for the current Entity Text scope.
            </summary>
            <param name="Endpoint">The endpoint to use.</param>
            <param name="Deployment">The deployment to use for the endpoint.</param>
            <param name="ApiKey">The API key to use for the endpoint.</param>
            <remarks>Endpoint would look like: https://resource-name.openai.azure.com/
            Deployment would look like: gpt-35-turbo-16k
            </remarks>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text.OnRequestEntityContext(Integer,Guid,Enum::System#Text#Entity Text Scenario,Dictionary of [Text,Text]@,Enum::System#Text#Entity Text Tone@,Enum::System#Text#Entity Text Format@,Boolean@)">
            <summary>
            Event that is raised to build context for the given entity.
            </summary>
            <param name="SourceTableId">The ID of the table of the entity.</param>
            <param name="SourceSystemId">The ID of the entity.</param>
            <param name="SourceScenario">The scenario for which to get context for.</param>
            <param name="Facts">A dictionary of facts to provide about the entity. Only the first 20 facts will be used for text generation.</param>
            <param name="TextTone">The default tone of text to apply to this entity.</param>
            <param name="TextFormat">The default text format to apply to this entity.</param>
            <param name="Handled">Set if this scenario was handled.</param>
            <remarks>
            Subscribers should check against the table id, system id, and scenario before setting the facts, tone, and format. A runtime error will occur if Handled is false.
            </remarks>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text.OnEditEntityText(Entity Text@,Action@,Boolean@)">
            <summary>
            Event that is raised to override the default Edit behavior.
            </summary>
            <param name="TempEntityText">The Entity Text record to be modified.</param>
            <param name="Action">Must be set to the resulting action from the edit page (if handled).</param>
            <param name="Handled">If the edit event was handled (set to true even if the action was cancelled).</param>
            <remarks>
            Subscribers should check the Entity Text primary keys (table id, source id, scenario) if you should handle this record before opening a page.
            </remarks>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text.OnEditEntityTextWithTriggerAction(Entity Text@,Action@,Boolean@,Enum::System#Text#Entity Text Actions)">
            <summary>
            Event that is raised to override the default Edit behavior.
            </summary>
            <param name="TempEntityText">The Entity Text record to be modified.</param>
            <param name="Action">Must be set to the resulting action from the edit page (if handled).</param>
            <param name="Handled">If the edit event was handled (set to true even if the action was cancelled).</param>
            <param name="TriggerAction">The action that triggered the event.</param>
            <remarks>
            Subscribers should check the Entity Text primary keys (table id, source id, scenario) if you should handle this record before opening a page.
            </remarks>
        </member>
        <member name="O:Page::System#Text#Entity Text">
            <summary>
            The fallback edit page shown if the OnEditEntityText is not handled.
            Uses the "Entity Text Part" to render the rich text editor.
            </summary>
        </member>
        <member name="O:Codeunit::System#Text#Entity Text AOAI Settings">
            <summary>
            Implements functionality to call Azure OpenAI.
            </summary>
        </member>
        <member name="O:Enum::System#Text#Entity Text Emphasis">
            <summary>
            Enum containing supported ways to emphasize text for generation.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Emphasis.None">
            <summary>
            Do not emphasize a particular quality.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Emphasis.Innovation">
            <summary>
            Emphasizes innovation.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Emphasis.Sustainability">
            <summary>
            Emphasizes sustainability.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Emphasis.Power">
            <summary>
            Emphasizes power.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Emphasis.Elegance">
            <summary>
            Emphasizes elegance.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Emphasis.Reliability">
            <summary>
            Emphasizes reliability.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Emphasis.Speed">
            <summary>
            Emphasizes speed.
            </summary>
        </member>
        <member name="O:Page::System#Text#Entity Text Factbox Part">
            <summary>
            A card part to use on a factbox to display the entity text.
            Ensure the SetContext procedure is called OnAfterGetCurrentRecord on the parent page.
            </summary>
        </member>
        <member name="M:Page::System#Text#Entity Text Factbox Part.SetContext(Integer,Guid,Enum::System#Text#Entity Text Scenario,Text)">
            <summary>
            Sets the context for the Entity Text Factbox Part.
            </summary>
            <param name="SourceTableId">The ID of the table for which to retrieve the entity text.</param>
            <param name="SourceSystemId">The ID of the entity for which to retrieve the entity text.</param>
            <param name="SourceScenario">The entity text scenario to retrieve the entity text.</param>
            <param name="PlaceholderText">The placeholder text to display if no entity text exists.</param>
            <remarks>This must be called when including the part or no entity text will be rendered.</remarks>
        </member>
        <member name="O:Enum::System#Text#Entity Text Format">
            <summary>
            Enum containing supported text formats for generation.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Format.Tagline">
            <summary>
            Generate a short tagline.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Format.Paragraph">
            <summary>
            Generate a paragraph of text.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Format.TaglineParagraph">
            <summary>
            Generate a tagline and paragraph in one prompt.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Format.Brief">
            <summary>
            Generate a brief summary.
            </summary>
        </member>
        <member name="O:Codeunit::System#Text#Entity Text Impl#">
            <summary>
            Implements functionality to handle text suggestions.
            </summary>
        </member>
        <member name="M:Codeunit::System#Text#Entity Text Impl#.IsEnabled(Boolean):Boolean">
            <summary>
            Decides visibility on pages
            </summary>
        </member>
        <member name="O:Page::System#Text#Entity Text Part">
            <summary>
            A reusable component to modify entity texts with a rich text editor.
            See the "Entity Text" page for an example implementation.
            </summary>
        </member>
        <member name="M:Page::System#Text#Entity Text Part.SetContext(Text,Dictionary of [Text,Text]@,Enum::System#Text#Entity Text Tone@,Enum::System#Text#Entity Text Format@)">
            <summary>
            Sets the context for the Entity Text Page Part.
            </summary>
            <param name="InitialText">The initial text to set in the rich text editor.</param>
            <param name="InitialFacts">The initial facts to use for suggesting text.</param>
            <param name="InitialTextTone">The initial tone of text to use for suggesting text.</param>
            <param name="InitialTextFormat">The initial text format to use for suggesting text.</param>
            <remarks>Text cannot be suggested without calling SetContext.</remarks>
        </member>
        <member name="M:Page::System#Text#Entity Text Part.SetFacts(Dictionary of [Text,Text])">
            <summary>
            Sets the facts used for text suggestion.
            </summary>
            <param name="NewFacts">The new facts to use.</param>
        </member>
        <member name="M:Page::System#Text#Entity Text Part.SetTextTone(Enum::System#Text#Entity Text Tone)">
            <summary>
            Sets the text tone used for text suggestion.
            </summary>
            <param name="NewTextTone">The new text tone to use.</param>
        </member>
        <member name="M:Page::System#Text#Entity Text Part.SetTextFormat(Enum::System#Text#Entity Text Format)">
            <summary>
            Sets the text format used for text suggestion.
            </summary>
            <param name="NewTextFormat">The new text format to use.</param>
        </member>
        <member name="M:Page::System#Text#Entity Text Part.SetTextEmphasis(Enum::System#Text#Entity Text Emphasis)">
            <summary>
            Sets the text emphasis used for text suggestion.
            </summary>
            <param name="NewTextEmphasis">The new text emphasis to use.</param>
        </member>
        <member name="M:Page::System#Text#Entity Text Part.SetHasAdvancedOptions(Boolean)">
            <summary>
            Sets whether the parent page has advanced options used for text suggestion.
            </summary>
            <param name="NewHasAdvancedOptions">If the parent page has advanced options to use.</param>
        </member>
        <member name="M:Page::System#Text#Entity Text Part.ShowAdvancedOptions:Boolean">
            <summary>
            Gets whether the advanced options should be visible.
            </summary>
            <returns>True if the advanced options should be shown.</returns>
            <remarks>
            If the parent page has advanced options, it is recommended to check this OnAfterGetCurrRecord.
            Additionally, UpdatePropagation should be set to Both on the part.
            This way, the part can notify the parent when the state changes.
            </remarks>
        </member>
        <member name="M:Page::System#Text#Entity Text Part.UpdateRecord(Entity Text@)">
            <summary>
            Updates the Entity Text record with the current text.
            </summary>
            <param name="EntityText">The entity text record to update.</param>
        </member>
        <member name="M:Page::System#Text#Entity Text Part.SetContentCaption(Text)">
            <summary>
            Sets the field caption on the rich text editor.
            </summary>
            <param name="NewCaption">The caption to use.</param>
            <remarks>The caption specified here will also be used for the placeholder text in the editor if it is empty.</remarks>
        </member>
        <member name="O:Enum::System#Text#Entity Text Tone">
            <summary>
            Enum containing supported tones of text for generation.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Tone.Formal">
            <summary>
            The tone of voice should be formal.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Tone.Casual">
            <summary>
            The tone of voice should be casual.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Tone.Inspiring">
            <summary>
            The tone of voice should be inspiring.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Tone.Upbeat">
            <summary>
            The tone of voice should be upbeat.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Entity Text Tone.Creative">
            <summary>
            The tone of voice should be creative.
            </summary>
        </member>
        <member name="O:Codeunit::System#Text#Filter Tokens">
            <summary>
            Exposes functionality that allow users to specify pre-defined filter tokens that get converted to the correct values for various data types when filtering records.
            </summary>
        </member>
        <member name="M:Codeunit::System#Text#Filter Tokens.MakeDateFilter(Text@)">
            <summary>
            Turns text that represents date formats into a valid date filter expression with respect to filter tokens and date formulas.
            Call this function from onValidate trigger of page field that should behave similar to system filters.
            <param name="DateFilterText">The text from which the date filter should be extracted passed as VAR. For example: "YESTERDAY", or " 01-01-2012 ".</param>
            </summary>
        </member>
        <member name="M:Codeunit::System#Text#Filter Tokens.MakeTimeFilter(Text@)">
            <summary>
            Turns text that represents a time into a valid time filter with respect to filter tokens.
            Call this function from onValidate trigger of page field that should behave similar to system filters.
            </summary>
            <param name="TimeFilterText">The text from which the time filter should be extracted, passed as VAR. For example: "NOW".</param>
        </member>
        <member name="M:Codeunit::System#Text#Filter Tokens.MakeTextFilter(Text@)">
            <summary>
            Turns text into a valid text filter with respect to filter tokens.
            Call this function from onValidate trigger of page field that should behave similar to system filters.
            </summary>
            <param name="TextFilter">The expression from which the text filter should be extracted, passed as VAR. For example: "ME".</param>
        </member>
        <member name="M:Codeunit::System#Text#Filter Tokens.MakeDateTimeFilter(Text@)">
            <summary>
            Turns text that represents a DateTime into a valid date and time filter with respect to filter tokens.
            Call this function from onValidate trigger of page field that should behave similar to system filters.
            </summary>
            <param name="DateTimeFilterText">The text from which the date and time should be extracted, passed as VAR. For example: "NOW" or "01-01-2012 11:11:11..NOW".</param>
        </member>
        <member name="M:Codeunit::System#Text#Filter Tokens.OnResolveDateFilterToken(Text,Date@,Date@,Boolean@)">
            <summary>
            Use this event if you want to add support for additional tokens that user will be able to use when working with date filters, for example "Christmas" or "StoneAge".
            Ensure that in your subscriber you check that what user entered contains your keyword, then return proper date range for your filter token.
            </summary>
            <param name="DateToken">The date token to resolve, for example: "Summer".</param>
            <param name="FromDate">The start date to resolve from DateToken that the filter will use, for example: "01/06/2019". Passed by reference by using VAR keywords.</param>
            <param name="ToDate">The end date to resolve from DateToken that the filter will use, for example: "31/08/2019". Passed by reference by using VAR keywords.</param>
            <param name="Handled">Stores whether the operation was successful.</param>
        </member>
        <member name="M:Codeunit::System#Text#Filter Tokens.OnResolveTextFilterToken(Text,Text@,Boolean@)">
            <summary>
            Use this event if you want to add support for additional filter tokens that user will be able to use when working with text or code filters, for example "MyFilter".
            Ensure that in your subscriber you check that what user entered contains your token, then return properly formatted text for your filter token.
            </summary>
            <param name="TextToken">The text token to resolve.</param>
            <param name="TextFilter">The text to translate into a properly formatted text filter.</param>
            <param name="Handled">Stores whether the operation was successful.</param>
        </member>
        <member name="M:Codeunit::System#Text#Filter Tokens.OnResolveTimeFilterToken(Text,Time@,Boolean@)">
            <summary>
            Use this event if you want to add support for additional filter tokens that user will be able to use when working with time filters, for example "Lunch".
            Ensure that in your subscriber you check that what user entered contains your token, then return properly formatted time for your filter token.
            </summary>
            <param name="TimeToken">The time token to resolve, for example: "Lunch".</param>
            <param name="TimeFilter">The text to translate into a properly formatted time filter, for example: "12:00:00".</param>
            <param name="Handled">Stores whether the operation was successful.</param>
        </member>
        <member name="M:Codeunit::System#Text#Filter Tokens.OnResolveDateTokenFromDateTimeFilter(Text,Date@,Boolean@)">
            <summary>
            Use this event if you want to add support for additional filter tokens that user will be able to use as date in DateTime filters.
            Parses and translates a date token into a date filter.
            </summary>
            <param name="DateToken">The date token to resolve, for example: "Christmas".</param>
            <param name="DateFilter">The text to translate into a properly formatted date filter, for example: "25/12/2019".</param>
            <param name="Handled">Stores whether the operation was successful.</param>
        </member>
        <member name="M:Codeunit::System#Text#Filter Tokens.OnResolveTimeTokenFromDateTimeFilter(Text,Time@,Boolean@)">
            <summary>
            Use this event if you want to add support for additional filter tokens that user will be able to use as time in DateTime filters.
            Parses and translates a time token into a time filter.
            </summary>
            <param name="TimeToken">The time token to resolve, for example: "Lunch".</param>
            <param name="TimeFilter">The text to translate into a properly formatted time filter, for example:"12:00:00".</param>
            <param name="Handled">Stores whether the operation was successful.</param>
        </member>
        <member name="O:Table::System#Text#Barcode Encode Settings">
            <summary>
            Common setting used when encoding barcodes.
            </summary>
        </member>
        <member name="F:Table::System#Text#Barcode Encode Settings.Code Set">
            <summary>
            Code set option used by Code128 symbology
            </summary>
        </member>
        <member name="F:Table::System#Text#Barcode Encode Settings.Allow Extended Charset">
            <summary>
            Setting used in Code39 and Code93 symbologies.
            </summary>
        </member>
        <member name="F:Table::System#Text#Barcode Encode Settings.Enable Checksum">
            <summary>
            Flag to indicate whether to enable checksum when encoding the barcode.
            Used by barcode symbology Code39.
            </summary>
        </member>
        <member name="F:Table::System#Text#Barcode Encode Settings.Use mod 10">
            <summary>
            Barcode symbology Interleaved 2 of 5 setting.
            </summary>
        </member>
        <member name="O:Enum::System#Text#Barcode Symbology">
            <summary>
            The available barcode symbologies.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology.Code39">
            <summary>
            Code 39 - An alpha-numeric barcode that encodes uppercase letters, numbers and some symbols; it is also referred to as Barcode/39, the 3 of 9 Code and LOGMARS Code.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology.Codabar">
            <summary>
            Codabar - A numeric barcode encoding numbers with a slightly higher density than Code 39.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology.Code128">
            <summary>
            Code 128 - Alpha-numeric barcode with three character sets. Supports Code-128, GS1-128 (Formerly known as UCC/EAN-128) and ISBT-128.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology.Code93">
            <summary>
            Code 93 - Similar to Code 39, but requires two checksum characters.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology.Interleaved2of5">
            <summary>
            Interleaved 2 of 5 - The Interleaved 2 of 5 barcode symbology encodes numbers in pairs, similar to Code 128 set C.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology.Postnet">
            <summary>
            Postenet - The Intelligent Mail customer barcode combines the information of both the POSTNET and PLANET symbologies, and additional information, into a single barcode that is about the same size as the traditional POSTNET symbol.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology.MSI">
            <summary>
            MIS - The MSI Plessey barcode symbology was designed in the 1970s by the Plessey Company in England and has practiced primarily in libraries and retail applications.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology.EAN-8">
            <summary>
            EAN-8 - The MSI Plessey barcode symbology was designed in the 1970s by the Plessey Company in England and has practiced primarily in libraries and retail applications.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology.EAN-13">
            <summary>
            EAN-13 - The EAN-13 was developed as a superset of UPC-A, adding an extra digit to the beginning of every UPC-A number.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology.UPC-A">
            <summary>
            UPC-A - The Universal Product Code (UPC; redundantly: UPC code) is a barcode symbology that is widely used in the United States, Canada, Europe, Australia, New Zealand, and other countries/regions for tracking trade items in stores.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology.UPC-E">
            <summary>
            UPC-E -  To allow the use of UPC barcodes on smaller packages, where a full 12-digit barcode may not fit, a 'zero-suppressed version of UPC was developed, called UPC-E.
            </summary>
        </member>
        <member name="O:Table::System#Text#Barcode Encode Settings 2D">
            <summary>
            Common setting used when encoding 2D barcodes.
            </summary>
        </member>
        <member name="F:Table::System#Text#Barcode Encode Settings 2D.Error Correction Level">
            <summary>
            Error Correction Level option used by QR code symbology.
            </summary>
        </member>
        <member name="F:Table::System#Text#Barcode Encode Settings 2D.Module Size">
            <summary>
            Module Size option used by QR code symbology.
            </summary>
        </member>
        <member name="F:Table::System#Text#Barcode Encode Settings 2D.Quite Zone Width">
            <summary>
            Quite Zone Width option used by QR code symbology.
            </summary>
        </member>
        <member name="F:Table::System#Text#Barcode Encode Settings 2D.Code Page">
            <summary>
            Code Page option used by QR code symbology.
            </summary>
        </member>
        <member name="O:Enum::System#Text#Barcode Symbology 2D">
            <summary>
            The available 2D barcode symbologies.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology 2D.Aztec">
            <summary>
            Aztec barcodes are very efficient two-dimensional (2D) symbologies that use square modules with a unique finder pattern in the middle of the symbol, which helps the barcode scanner to determine cell locations to decode the symbol.
            Characters, numbers, text and bytes of data may be encoded in an Aztec barcode. The IDAutomation implementation of the Aztec barcode symbol is based on the ISO standard version released into the public domain by its inventor, Honeywell.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology 2D.Data Matrix">
            <summary>
            Data Matrix is a very efficient, two-dimensional (2D) barcode symbology that uses a small area of square modules with a unique perimeter pattern, which helps the barcode scanner determine cell locations and decode the symbol.
            Characters, numbers, text and actual bytes of data may be encoded, including Unicode characters and photos.
            The encoding and decoding process of Data Matrix is very complex. Several methods have been used for error correction in the past. All current implementations have been standardized on the ECC200 error correction method, which is approved by ANSI/AIM BC11 and the ISO/IEC 16022 specification.
            IDAutomation 2D Data Matrix barcode products all support ECC200 by default and are based on the ANSI/AIM BC11 and the ISO/IEC 16022 specifications. The Reed-Solomon error correction algorithms of ECC200 allow the recognition of barcodes that are up to 60% damaged.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology 2D.Maxi Code">
            <summary>
            Maxicode is an international 2D (two-dimensional) barcode that is currently used by UPS on shipping labels for world-wide addressing and package sortation. MaxiCode symbols are fixed in size and are made up of offset rows of hexagonal modules arranged around a unique finder pattern.
            MaxiCode includes error correction, which enables the symbol to be decoded when it is slightly damaged.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology 2D.PDF417">
            <summary>
            The PDF417 barcode is a two-dimensional (2D), high-density symbology capable of encoding text, numbers, files and actual data bytes.
            Large amounts of text and data can be stored securely and inexpensively when using the PDF417 barcode symbology. The printed symbol consists of several linear rows of stacked codewords. Each codeword represents 1 of 929 possible values from one of three different clusters.
            A different cluster is chosen for each row, repeating after every three rows. Because the codewords in each cluster are unique, the scanner is able to determine what line each cluster is from.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Symbology 2D.QR-Code">
            <summary>
            QR-Code is a two-dimensional (2D) barcode type similar to Data Matrix or Aztec, which is capable of encoding large amounts of data. QR means Quick Response, as the inventor intended the symbol to be quickly decoded. The data encoded in a QR-Code may include alphabetic characters, text, numbers, double characters and URLs.
            The symbology uses a small area of square modules with a unique perimeter pattern, which helps the barcode scanner determine cell locations to decode the symbol. IDAutomation’s implementation of QR-Code is based on the ISO/IEC 18004:2006 standard (also known as QR-Code 2005) and conforms to ISO/IEC 18004:2015 specifications.
            </summary>
        </member>
        <member name="O:Interface::System#Text#Barcode Font Encoder">
            <summary>
            Exposes common interface for barcode font encoder.
            </summary>
        </member>
        <member name="M:Interface::System#Text#Barcode Font Encoder.EncodeFont(Text,Barcode Encode Settings@):Text">
            <summary>
            Encodes a input text to a barcode font.
            </summary>
            <param name="InputText">The text to encode.</param>
            <param name="BarcodeEncodeSettings">Settings to use when encoding the input text.</param>
            <returns>The encoded barcode.</returns>
        </member>
        <member name="M:Interface::System#Text#Barcode Font Encoder.IsValidInput(Text,Barcode Encode Settings@):Boolean">
            <summary>
            Validates whether a text can be encoded.
            The validation is based on a regular expression according to
            https://www.neodynamic.com/Products/Help/BarcodeWinControl2.5/working_barcode_symbologies.htm
            </summary>
            <param name="InputText">The text to validate.</param>
            <returns>True if the validation succeeds; otherwise - false.</returns>
        </member>
        <member name="O:Enum::System#Text#Barcode Font Provider">
            <summary>
            The available barcode font providers.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Font Provider.IDAutomation1D">
            <summary>
            IDAutomation 1D-barcode provider.
            </summary>
        </member>
        <member name="O:Interface::System#Text#Barcode Font Provider">
            <summary>
            Interface for barcode font providers.
            </summary>
        </member>
        <member name="M:Interface::System#Text#Barcode Font Provider.GetSupportedBarcodeSymbologies(List of [Barcode Symbology]@)">
            <summary>
            Gets a list of the barcode symbologies that the provider supports.
            </summary>
            <param name="Result">A list of barcode symbologies.</param>
        </member>
        <member name="M:Interface::System#Text#Barcode Font Provider.EncodeFont(Text,Enum::System#Text#Barcode Symbology):Text">
            <summary>
            Encodes an input text into a barcode.
            </summary>
            <param name="InputText">The text to encode.</param>
            <param name="BarcodeSymbology">The symbology to use for the encoding.</param>
            <returns>The encoded barcode.</returns>
        </member>
        <member name="M:Interface::System#Text#Barcode Font Provider.EncodeFont(Text,Enum::System#Text#Barcode Symbology,Barcode Encode Settings):Text">
            <summary>
            Encodes an input text into a barcode.
            </summary>
            <param name="InputText">The text to encode.</param>
            <param name="BarcodeSymbology">The symbology to use for the encoding.</param>
            <param name="BarcodeEncodeSettings">The settings to use when encoding the text.</param>
            <returns>The encoded barcode.</returns>
        </member>
        <member name="M:Interface::System#Text#Barcode Font Provider.ValidateInput(Text,Enum::System#Text#Barcode Symbology)">
            <summary>
            Validates if the input text is in a valid format to be encoded using the provided barcode symbology.
            </summary>
            <remarks>The function should throw an error if the input text is in invalid format or if the symbology is not supported by the provider.</remarks>
            <param name="InputText">The text to validate</param>
            <param name="BarcodeSymbology">The barcode symbology for which to check.</param>
        </member>
        <member name="M:Interface::System#Text#Barcode Font Provider.ValidateInput(Text,Enum::System#Text#Barcode Symbology,Barcode Encode Settings)">
            <summary>
            Validates if the input text is in a valid format to be encoded using the provided barcode symbology.
            </summary>
            <remarks>The function should throw an error if the input text is in invalid format or if the symbology is not supported by the provider.</remarks>
            <param name="InputText">The text to validate</param>
            <param name="BarcodeSymbology">The barcode symbology for which to check.</param>
            <param name="BarcodeEncodeSettings">The settings to use for the validation.</param>
        </member>
        <member name="O:Interface::System#Text#Barcode Font Encoder 2D">
            <summary>
            Exposes common interface for 2D barcode font encoder.
            </summary>
        </member>
        <member name="M:Interface::System#Text#Barcode Font Encoder 2D.EncodeFont(Text):Text">
            <summary>
            Encodes a input text to a barcode font.
            </summary>
            <param name="InputText">The text to encode.</param>
            <returns>The encoded barcode.</returns>
        </member>
        <member name="O:Enum::System#Text#Barcode Font Provider 2D">
            <summary>
            The available 2D barcode font providers.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Font Provider 2D.IDAutomation2D">
            <summary>
            IDAutomation 2D-barcode provider.
            </summary>
        </member>
        <member name="O:Interface::System#Text#Barcode Font Provider 2D">
            <summary>
            Interface for 2D barcode font providers.
            </summary>
        </member>
        <member name="M:Interface::System#Text#Barcode Font Provider 2D.GetSupportedBarcodeSymbologies(List of [Barcode Symbology 2D]@)">
            <summary>
            Gets a list of the 2D barcode symbologies that the provider supports.
            </summary>
            <param name="Result">A list of barcode symbologies.</param>
        </member>
        <member name="M:Interface::System#Text#Barcode Font Provider 2D.EncodeFont(Text,Enum::System#Text#Barcode Symbology 2D):Text">
            <summary>
            Encodes an input text into a 2D barcode.
            </summary>
            <param name="InputText">The text to encode.</param>
            <param name="BarcodeSymbology2D">The 2D symbology to use for the encoding.</param>
            <returns>The encoded barcode.</returns>
        </member>
        <member name="O:Interface::System#Text#Barcode Image Encoder 2D">
            <summary>
            Exposes common interface for 2D barcode image encoder.
            </summary>
        </member>
        <member name="M:Interface::System#Text#Barcode Image Encoder 2D.EncodeImage(Text,Barcode Encode Settings 2D):Codeunit::System#Utilities#Temp Blob">
            <summary>
            Encodes a input text to a barcode image.
            </summary>
            <param name="InputText">The text to encode.</param>
            <param name="BarcodeEncodeSettings2D">The settings to use when encoding the text.</param>
            <returns>The encoded barcode.</returns>
        </member>
        <member name="O:Enum::System#Text#Barcode Image Provider 2D">
            <summary>
            The available 2D barcode font providers.
            </summary>
        </member>
        <member name="E:Enum::System#Text#Barcode Image Provider 2D.Dynamics2D">
            <summary>
            Dynamics QR Code Provider.
            </summary>
        </member>
        <member name="O:Interface::System#Text#Barcode Image Provider 2D">
            <summary>
            Interface for 2D barcode image providers.
            </summary>
        </member>
        <member name="M:Interface::System#Text#Barcode Image Provider 2D.GetSupportedBarcodeSymbologies(List of [Barcode Symbology 2D]@)">
            <summary>
            Gets a list of the 2D barcode symbologies that the provider supports.
            </summary>
            <param name="Result">A list of barcode symbologies.</param>
        </member>
        <member name="M:Interface::System#Text#Barcode Image Provider 2D.EncodeImage(Text,Enum::System#Text#Barcode Symbology 2D):Codeunit::System#Utilities#Temp Blob">
            <summary>
            Encodes an input text into a 2D barcode.
            </summary>
            <param name="InputText">The text to encode.</param>
            <param name="BarcodeSymbology2D">The 2D symbology to use for the encoding.</param>
            <returns>The encoded barcode.</returns>
        </member>
        <member name="M:Interface::System#Text#Barcode Image Provider 2D.EncodeImage(Text,Enum::System#Text#Barcode Symbology 2D,Barcode Encode Settings 2D):Codeunit::System#Utilities#Temp Blob">
            <summary>
            Encodes an input text into a 2D barcode.
            </summary>
            <param name="InputText">The text to encode.</param>
            <param name="BarcodeSymbology2D">The 2D symbology to use for the encoding.</param>
            <param name="BarcodeEncodeSettings2D">The settings to use when encoding the text.</param>
            <returns>The encoded barcode.</returns>
        </member>
        <member name="O:Codeunit::System#Text#IDA 1D Code128 Encoder">
            <summary>
            Code-128 barcode font implementation from IDAutomation
            from: https://www.idautomation.com/barcode-fonts/code-128/
            Alpha-numeric barcode with three character sets. Supports Code-128, GS1-128 (Formerly known as UCC/EAN-128) and ISBT-128.
            </summary>
        </member>
        <member name="O:Codeunit::System#Text#IDA 1D Code39 Encoder">
            <summary>
            Code-39 barcode font implementation from IDAutomation
            from: https://www.idautomation.com/barcode-fonts/code-39/
            An alpha-numeric barcode that encodes uppercase letters, numbers and some symbols; it is also referred to as Barcode/39, the 3 of 9 Code and LOGMARS Code.
            </summary>
        </member>
        <member name="O:Codeunit::System#Text#IDA 1D Code93 Encoder">
            <summary>
            Code-93 barcode font implementation from IDAutomation
            from: https://www.idautomation.com/barcode-fonts/code-93/
            Similar to Code 39, but requires two checksum characters.
            </summary>
        </member>
        <member name="O:Codeunit::System#Text#IDA 1D EAN13 Encoder">
            <summary>
            EAN-13 barcode font implementation from IDAutomation
            from: https://www.barcodefaq.com/barcode-properties/symbologies/ean-13/
            Is most commonly used to encode 13 digits of the GTIN barcode symbology and also to identify books with Bookland or ISBN barcode symbols.
            </summary>
        </member>
        <member name="O:Codeunit::System#Text#IDA 1D EAN8 Encoder">
            <summary>
            Ean-8 barcode font implementation from IDAutomation
            from: https://www.barcodefaq.com/barcode-properties/symbologies/ean-8/
            An EAN-8 is an EAN/UPC symbology barcode and is derived from the longer International Article Number (EAN-13) code
            </summary>
        </member>
        <member name="O:Codeunit::System#Text#IDA 1D I2of5 Encoder">
            <summary>
            ITF barcode font implementation from IDAutomation
            from: https://www.idautomation.com/barcode-fonts/interleaved-2of5/
            Interleaved 2 of 5 (ITF) is a numeric only barcode used to encode pairs of numbers into a self-checking, high-density barcode format
            </summary>
        </member>
        <member name="O:Codeunit::System#Utilities#Persistent Blob">
            <summary>
            The interface for storing BLOB data between sessions.
            </summary>
        </member>
        <member name="M:Codeunit::System#Utilities#Persistent Blob.Create:BigInteger">
            <summary>
            Create a new empty PersistentBlob.
            </summary>
            <returns>The key of the new BLOB.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Persistent Blob.Exists(BigInteger):Boolean">
            <summary>
            Check whether a BLOB with the Key exists.
            </summary>
            <param name="Key">The key of the BLOB.</param>
            <returns>True if the BLOB with the given key exists.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Persistent Blob.Delete(BigInteger):Boolean">
            <summary>
            Delete the BLOB with the Key.
            </summary>
            <param name="Key">The key of the BLOB.</param>
            <returns>True if the BLOB with the given key was deleted.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Persistent Blob.CopyFromInStream(BigInteger,InStream):Boolean">
            <summary>
            Save the content of the stream to the PersistentBlob.
            </summary>
            <param name="Key">The key of the BLOB.</param>
            <param name="SourceInStream">The InStream from which content will be copied to the PersistentBlob.</param>
            <returns>True if the BLOB with the given key was updated with the contents of the source.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Persistent Blob.CopyToOutStream(BigInteger,OutStream):Boolean">
            <summary>
            Write the content of the PersistentBlob to the Destination OutStream.
            </summary>
            <param name="Key">The key of the BLOB.</param>
            <param name="DestinationOutStream">The OutStream to which the contents of the PersistentBlob will be copied.</param>
            <returns>True if the BLOB with the given Key was copied to the Destination.</returns>
        </member>
        <member name="O:Codeunit::System#Utilities#Temp Blob">
            <summary>
            The container to store BLOB data in-memory.
            </summary>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.CreateInStream:InStream">
            <summary>
            Creates an InStream object with default encoding for the TempBlob. This enables you to read data from the TempBlob.
            </summary>
            <returns>The InStream variable with the BLOB content attached.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.CreateInStream(InStream@)">
            <summary>
            Creates an InStream object with default encoding for the TempBlob. This enables you to read data from the TempBlob.
            </summary>
            <param name="InStream">The InStream variable passed as a VAR to which the BLOB content will be attached.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.CreateInStream(TextEncoding):InStream">
            <summary>
            Creates an InStream object with default encoding for the TempBlob. This enables you to read data from the TempBlob.
            </summary>
            <param name="Encoding">The text encoding to use.</param>
            <returns>The InStream variable with the BLOB content attached.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.CreateInStream(InStream@,TextEncoding)">
            <summary>
            Creates an InStream object with the specified encoding for the TempBlob. This enables you to read data from the TempBlob.
            </summary>
            <param name="InStream">The InStream variable passed as a VAR to which the BLOB content will be attached.</param>
            <param name="Encoding">The text encoding to use.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.CreateOutStream:OutStream">
            <summary>
            Creates an OutStream object with default encoding for the TempBlob. This enables you to write data to the TempBlob.
            </summary>
            <returns>The OutStream variable passed which the BLOB content will be attached.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.CreateOutStream(OutStream@)">
            <summary>
            Creates an OutStream object with default encoding for the TempBlob. This enables you to write data to the TempBlob.
            </summary>
            <param name="OutStream">The OutStream variable passed as a VAR to which the BLOB content will be attached.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.CreateOutStream(TextEncoding):OutStream">
            <summary>
            Creates an OutStream object with the specified encoding for the TempBlob. This enables you to write data to the TempBlob.
            </summary>
            <param name="Encoding">The text encoding to use.</param>
            <returns>The OutStream variable with the BLOB content attached.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.CreateOutStream(OutStream@,TextEncoding)">
            <summary>
            Creates an OutStream object with the specified encoding for the TempBlob. This enables you to write data to the TempBlob.
            </summary>
            <param name="OutStream">The OutStream variable passed as a VAR to which the BLOB content will be attached.</param>
            <param name="Encoding">The text encoding to use.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.HasValue:Boolean">
            <summary>
            Determines whether the TempBlob has a value.
            </summary>
            <returns>True if the TempBlob has a value.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.Length:Integer">
            <summary>
            Determines the length of the data stored in the TempBlob.
            </summary>
            <returns>The number of bytes stored in the BLOB.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.FromRecord(Variant,Integer)">
            <summary>
            Copies the value of the BLOB field on the RecordVariant in the specified field to the TempBlob.
            </summary>
            <param name="RecordVariant">Any Record variable.</param>
            <param name="FieldNo">The field number of the BLOB field to be read.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.FromRecordRef(RecordRef,Integer)">
            <summary>
            Copies the value of the BLOB field on the RecordRef in the specified field to the TempBlob.
            </summary>
            <param name="RecordRef">A RecordRef variable attached to a Record.</param>
            <param name="FieldNo">The field number of the BLOB field to be read.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.ToRecordRef(RecordRef@,Integer)">
            <summary>
            Copies the value of the TempBlob to the specified field on the RecordRef.
            </summary>
            <param name="RecordRef">A RecordRef variable attached to a Record.</param>
            <param name="FieldNo">The field number of the Blob field to be written.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.FromFieldRef(FieldRef)">
            <summary>
            Copies the value of the FieldRef to the TempBlob.
            </summary>
            <param name="BlobFieldRef">A FieldRef variable attached to a field for a record.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob.ToFieldRef(FieldRef@)">
            <summary>
            Copies the value of the TempBlob to the specified FieldRef.
            </summary>
            <param name="BlobFieldRef">A FieldRef variable attached to a field for a record.</param>
        </member>
        <member name="O:Codeunit::System#Utilities#Temp Blob List">
            <summary>
            The interface for storing sequences of variables, each of which stores BLOB data.
            </summary>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob List.Exists(Integer):Boolean">
            <summary>
            Check if an element with the given index exists.
            </summary>
            <param name="Index">The index of the TempBlob in the list.</param>
            <returns>True if an element at the given index exists.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob List.Count:Integer">
            <summary>
            Returns the number of elements in the list.
            </summary>
            <returns>The number of elements in the list.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob List.Get(Integer,Codeunit::System#Utilities#Temp Blob@)">
            <summary>
            Get an element from the list at any given position.
            </summary>
            <error>The index is larger than the number of elements in the list or less than one.</error>
            <param name="Index">The index of the TempBlob in the list.</param>
            <param name="TempBlob">The TempBlob to return.</param>
            <returns>An element from the list at any given position.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob List.Set(Integer,Codeunit::System#Utilities#Temp Blob):Boolean">
            <summary>
            Set an element at the given index from the parameter TempBlob.
            </summary>
            <error>The index is larger than the number of elements in the list or less than one.</error>
            <param name="Index">The index of the TempBlob in the list.</param>
            <param name="TempBlob">The TempBlob to set.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob List.RemoveAt(Integer):Boolean">
            <summary>
            Remove the element at a specified location from a non-empty list.
            </summary>
            <error>The index is larger than the number of elements in the list or less than one.</error>
            <param name="Index">The index of the TempBlob in the list.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob List.RemoveRange(Integer,Integer):Boolean">
            <summary>
            Remove a number of elements starting from a specified location from a non-empty list.
            </summary>
            <error>The index is larger than the number of elements in the list or less than one.</error>
            <error>The element count is less than one.</error>
            <param name="Index">The index of the first element to be deleted.</param>
            <param name="ElementCount">The number of elements to be deleted.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob List.IsEmpty:Boolean">
            <summary>
            Return true if the list is empty, otherwise return false.
            </summary>
            <returns>True if the list is empty.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob List.Add(Codeunit::System#Utilities#Temp Blob):Boolean">
            <summary>
            Adds a TempBlob to the end of the list.
            </summary>
            <param name="TempBlob">The TempBlob to add.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob List.AddRange(Codeunit::System#Utilities#Temp Blob List):Boolean">
            <summary>
            Adds the elements of the specified TempBlobList to the end of the current TempBlobList object.
            </summary>
            <param name="TempBlobList">The TempBlob list to add.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Temp Blob List.GetRange(Integer,Integer,Codeunit::System#Utilities#Temp Blob List@)">
            <summary>
            Get a copy of a range of elements in the list starting from index,
            </summary>
            <error>The index is larger than the number of elements in the list or less than one.</error>
            <error>The range to return in not within the range of the list.</error>
            <param name="Index">The index of the first object.</param>
            <param name="ElemCount">The number of objects to be returned.</param>
            <param name="TempBlobListOut">The TempBlobList to be returned passed as a VAR.</param>
        </member>
        <member name="O:Codeunit::System#Utilities#Confirm Management">
            <summary>
            Exposes functionality to raise a confirm dialog with a question that is to be asked to the user.
            </summary>
        </member>
        <member name="M:Codeunit::System#Utilities#Confirm Management.GetResponseOrDefault(Text):Boolean">
            <summary>
            Raises a confirm dialog with a question and the default response on which the cursor is shown.
            If UI is not allowed, the default response is returned.
            </summary>
            <param name="ConfirmQuestion">The question to be asked to the user.</param>
            <returns>The response of the user or the default response passed if no UI is allowed.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Confirm Management.GetResponseOrDefault(Text,Boolean):Boolean">
            <summary>
            Raises a confirm dialog with a question and the default response on which the cursor is shown.
            If UI is not allowed, the default response is returned.
            </summary>
            <param name="ConfirmQuestion">The question to be asked to the user.</param>
            <param name="DefaultButton">The default response expected.</param>
            <returns>The response of the user or the default response passed if no UI is allowed.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Confirm Management.GetResponse(Text):Boolean">
            <summary>
            Raises a confirm dialog with a question and the default response on which the cursor is shown.
            If UI is not allowed, the function returns FALSE.
            </summary>
            <param name="ConfirmQuestion">The question to be asked to the user.</param>
            <returns>The response of the user or FALSE if no UI is allowed.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Confirm Management.GetResponse(Text,Boolean):Boolean">
            <summary>
            Raises a confirm dialog with a question and the default response on which the cursor is shown.
            If UI is not allowed, the function returns FALSE.
            </summary>
            <param name="ConfirmQuestion">The question to be asked to the user.</param>
            <param name="DefaultButton">The default response expected.</param>
            <returns>The response of the user or FALSE if no UI is allowed.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Confirm Management Impl#.OnBeforeGuiAllowed(Boolean@,Boolean@)">
            <summary>
            Raises an event to be able to change the return of IsGuiAllowed function. Used for testing.
            </summary>
        </member>
        <member name="O:Codeunit::System#Utilities#Image">
            <summary>
            Provides functionality for working with images.
            </summary>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.Clear(Integer,Integer,Integer,Integer)">
            <summary>
            Clears the entire drawing surface and fills it with the specified background color.
            </summary>
            <param name="Alpha">The alpha component. Valid values are 0 through 255.</param>
            <param name="Red">The red component. Valid values are 0 through 255.</param>
            <param name="Green">The green component. Valid values are 0 through 255.</param>
            <param name="Blue">The blue component. Valid values are 0 through 255.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.Clear(Integer,Integer,Integer)">
            <summary>
            Clears the entire drawing surface and fills it with the specified background color.
            </summary>
            <param name="Red">The red component. Valid values are 0 through 255.</param>
            <param name="Green">The green component. Valid values are 0 through 255.</param>
            <param name="Blue">The blue component. Valid values are 0 through 255.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.Crop(Integer,Integer,Integer,Integer)">
            <summary>
            Crops the image based on a rectangle specified by the user.
            The resulting crop will be a hole-cut in the image made by the rectangle.
            </summary>
            <param name="X">X coordinate of the rectangle.</param>
            <param name="Y">Y coordinate of the rectangle.</param>
            <param name="Width">Width of rectangle.</param>
            <param name="Height">Height of the rectangle./</param>
            <remarks>The Rectangles top left corner has to be within the image dimensions,
            but specifying a width or height that makes the rectangle go outside the image dimensions is allowed.
            Anything outside the image dimensions will be filled with the image background color.</remarks>
            <error>X and Y is not within the image dimensions.</error>
            <error>Width and Height is less than one.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.GetFormatAsText:Text">
            <summary>
            Gets the image format as a text.
            </summary>
            <returns>A text containing the format value.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.GetFormat:Enum::System#Utilities#Image Format">
            <summary>
            Gets the image format as an Enum "Image Format".
            </summary>
            <returns>The enum value.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.SetFormat(Enum::System#Utilities#Image Format)">
            <summary>
            Sets the image format from an Enum "Image Format".
            </summary>
            <remarks>Depending on the format selected, calling this method may result in loss of image quality.</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.FromBase64(Text)">
            <summary>
            Creates an Image from base64 encoding.
            </summary>
            <param name="Base64Text">A base64 encoded string the contains the image.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.FromStream(InStream)">
            <summary>
            Creates an image from the specified data stream.
            </summary>
            <param name="InStream">A Stream that contains the image data.</param>
            <error>Stream do not contain valid image data</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.GetWidth:Integer">
            <summary>
            Gets the width in pixels.
            </summary>
            <returns>The width in pixels.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.GetHeight:Integer">
            <summary>
            Gets the height in pixels.
            </summary>
            <returns>The height in pixels.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.Resize(Integer,Integer)">
            <summary>
            Resizes the Image to the specified size.
            </summary>
            <param name="Width">The resize width.</param>
            <param name="Height">The resize height.</param>
            <error>Width and Height is less than one.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.RotateFlip(Enum::System#Utilities#Rotate Flip Type)">
            <summary>
            Rotates, flips, or rotates and flips the image.
            </summary>
            <param name="RotateFlipType">The type of rotation and flip.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.Save(OutStream)">
            <summary>
            Saves the image to the specified stream in the specified format.
            </summary>
            <param name="OutStream">A Stream that will store the image data.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.ToBase64:Text">
            <summary>
            Convert the image to a base64 encoded string.
            </summary>
            <returns>A string containing the image data encoded with base64.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Image.GetRotateFlipType:Enum::System#Utilities#Rotate Flip Type">
            <summary>
            Gets the image rotation flip type.
            </summary>
            <returns>The type of rotation and flip of the image.</returns>
        </member>
        <member name="O:Enum::System#Utilities#Image Format">
            <summary>
            This enum contains the Image format types.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Image Format.Bmp">
            <summary>
            Bmp image format
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Image Format.Emf">
            <summary>
            Emf image format
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Image Format.Exif">
            <summary>
            Exif image format
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Image Format.Gif">
            <summary>
            Gif image format
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Image Format.Icon">
            <summary>
            Icon image format
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Image Format.Jpeg">
            <summary>
            Jpeg image format
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Image Format.Png">
            <summary>
            Png image format
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Image Format.Tiff">
            <summary>
            Tiff image format
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Image Format.Wmf">
            <summary>
            Wmf image format
            </summary>
        </member>
        <member name="O:Enum::System#Utilities#Rotate Flip Type">
            <summary>
            Specifies how much an image is rotated and the axis used to flip the image.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Rotate Flip Type.RotateNoneFlipNone">
            <summary>
            Specifies no clockwise rotation and no flipping.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Rotate Flip Type.Rotate90FlipNone">
            <summary>
            Specifies a 90-degree clockwise rotation without flipping.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Rotate Flip Type.Rotate180FlipNone">
            <summary>
            Specifies a 180-degree clockwise rotation without flipping.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Rotate Flip Type.Rotate270FlipNone">
            <summary>
            Specifies a 270-degree clockwise rotation without flipping.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Rotate Flip Type.RotateNoneFlipX">
            <summary>
            Specifies no clockwise rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Rotate Flip Type.Rotate90FlipX">
            <summary>
            Specifies a 90-degree clockwise rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Rotate Flip Type.Rotate180FlipX">
            <summary>
            Specifies a 180-degree clockwise rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Rotate Flip Type.Rotate270FlipX">
            <summary>
            Specifies a 270-degree clockwise rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="O:Codeunit::System#Utilities#Math">
            <summary>
            Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.
            </summary>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Pi:Decimal">
            <summary>
            Returns the value of pi.
            </summary>
            <returns>Value of pi.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.E:Decimal">
            <summary>
            Returns the value of E.
            </summary>
            <returns>Value of E.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Abs(Decimal):Decimal">
            <summary>
            Returns the absolute value of a Decimal number.
            </summary>
            <param name="decimalValue">A decimal.</param>
            <returns>A decimal number, x, such that 0 ≤ x ≤MaxValue</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Acos(Decimal):Decimal">
            <summary>
            Returns the angle whose cosine is the specified number.
            </summary>
            <param name="decimalValue">A number representing a cosine.</param>
            <returns>An angle, θ, measured in radians, such that 0 ≤θ≤π</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Asin(Decimal):Decimal">
            <summary>
            Returns the angle whose sine is the specified number.
            </summary>
            <param name="decimalValue">A number representing a sine, where decimalValue must be greater than or equal to -1, but less than or equal to 1.</param>
            <returns>An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Atan(Decimal):Decimal">
            <summary>
            Returns the angle whose tangent is the specified number.
            </summary>
            <param name="decimalValue">A number representing a tangent.</param>
            <returns>An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Atan2(Decimal,Decimal):Decimal">
            <summary>
            Returns the angle whose tangent is the quotient of two specified numbers.
            </summary>
            <param name="y">The y coordinate of a point.</param>
            <param name="x">The x coordinate of a point.</param>
            <returns>An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = y / x, where (x, y) is a point in the Cartesian plane. </returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.BigMul(Integer,Integer):BigInteger">
            <summary>
            Produces the full product of two 32-bit numbers.
            </summary>
            <param name="a">The first number to multiply.</param>
            <param name="b">The second number to multiply.</param>
            <returns>The number containing the product of the specified numbers.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Ceiling(Decimal):Decimal">
            <summary>
            Returns the smallest integral value that is greater than or equal to the specified decimal number.
            </summary>
            <param name="decimalValue">A decimal number.</param>
            <returns>The smallest integral value that is greater than or equal to decimalValue.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Cos(Decimal):Decimal">
            <summary>
            Returns the cosine of the specified angle.
            </summary>
            <param name="decimalValue">An angle, measured in radians.</param>
            <returns>The cosine of decimalValue. </returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Cosh(Decimal):Decimal">
            <summary>
            Returns the hyperbolic cosine of the specified angle.
            </summary>
            <param name="decimalValue">An angle, measured in radians.</param>
            <returns>The hyperbolic cosine of value.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Exp(Decimal):Decimal">
            <summary>
            Returns e raised to the specified power.
            </summary>
            <param name="decimalValue">A number specifying a power.</param>
            <returns>The number e raised to the power decimalValue.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Floor(Decimal):Decimal">
            <summary>
            Returns the largest integral value less than or equal to the specified decimal number.
            </summary>
            <param name="decimalValue">A decimal number.</param>
            <returns>The largest integral value less than or equal to decimalValue.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.IEEERemainder(Decimal,Decimal):Decimal">
            <summary>
            Returns the remainder resulting from the division of a specified number by another specified number.
            </summary>
            <param name="x">A dividend.</param>
            <param name="y">A divisor.</param>
            <returns>A number equal to x - (y Q), where Q is the quotient of x / y rounded to the nearest integer (if x / y falls halfway between two integers, the even integer is returned).</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Log(Decimal):Decimal">
            <summary>
            Returns the natural (base e) logarithm of a specified number.
            </summary>
            <param name="decimalValue">The number whose logarithm is to be found.</param>
            <returns>The natural logarithm of decimalValue; that is, ln decimalValue, or log e decimalValue</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Log(Decimal,Decimal):Decimal">
            <summary>
            Returns the logarithm of a specified number in a specified base.
            </summary>
            <param name="a">The number whose logarithm is to be found.</param>
            <param name="newBase">The base of the logarithm.</param>
            <returns>The logarithm of a specified number in a specified base.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Log10(Decimal):Decimal">
            <summary>
            Returns the base 10 logarithm of a specified number.
            </summary>
            <param name="decimalValue">A number whose logarithm is to be found.</param>
            <returns>The base 10 logarithm of the specified number</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Max(Decimal,Decimal):Decimal">
            <summary>
            Returns the larger of two decimal numbers.
            </summary>
            <param name="decimalValue1">The first of two decimal numbers to compare.</param>
            <param name="decimalValue2">The second of two decimal numbers to compare.</param>
            <returns>Parameter decimalValue1 or decimalValue2, whichever is larger.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Min(Decimal,Decimal):Decimal">
            <summary>
            Returns the smaller of two decimal numbers.
            </summary>
            <param name="decimalValue1">The first of two decimal numbers to compare.</param>
            <param name="decimalValue2">The second of two decimal numbers to compare.</param>
            <returns>Parameter decimalValue1 or decimalValue2, whichever is smaller.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Pow(Decimal,Decimal):Decimal">
            <summary>
            Returns a specified number raised to the specified power.
            </summary>
            <param name="x">A double-precision floating-point number to be raised to a power.</param>
            <param name="y">A double-precision floating-point number that specifies a power.</param>
            <returns>The number x raised to the power y.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Sign(Decimal):Integer">
            <summary>
            Returns an integer that indicates the sign of a decimal number.
            </summary>
            <param name="decimalValue">A signed decimal number.</param>
            <returns>A number that indicates the sign of value.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Sinh(Decimal):Decimal">
            <summary>
            Returns the hyperbolic sine of the specified angle.
            </summary>
            <param name="decimalValue">An angle, measured in radians.</param>
            <returns>The hyperbolic sine of value.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Sin(Decimal):Decimal">
            <summary>
            Returns the sine of the specified angle.
            </summary>
            <param name="decimalValue">An angle, measured in radians.</param>
            <returns>The sine of a.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Sqrt(Decimal):Decimal">
            <summary>
            Returns the square root of a specified number.
            </summary>
            <param name="decimalValue">The number whose square root is to be found.</param>
            <returns>The positive square root of decimalValue.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Tan(Decimal):Decimal">
            <summary>
            Returns the tangent of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>The tangent of a.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Tanh(Decimal):Decimal">
            <summary>
            Returns the hyperbolic tangent of the specified angle.
            </summary>
            <param name="decimalValue">An angle, measured in radians.</param>
            <returns>The hyperbolic tangent of value.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Math.Truncate(Decimal):Decimal">
            <summary>
            Calculates the integral part of a specified decimal number.
            </summary>
            <param name="decimalValue">A number to truncate.</param>
            <returns>The integral part of decimalValue.</returns>
        </member>
        <member name="O:Codeunit::System#Utilities#Record Link Management">
            <summary>
            Exposes functionality to administer record links related to table records.
            </summary>
        </member>
        <member name="M:Codeunit::System#Utilities#Record Link Management.CopyLinks(Variant,Variant)">
            <summary>
            Copies all the links from one record to the other and sets Notify to FALSE for them.
            </summary>
            <raises>OnAfterCopyLinks</raises>
            <param name="FromRecord">The source record from which links are copied.</param>
            <param name="ToRecord">The destination record to which links are copied.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Record Link Management.WriteNote(Record Link@,Text)">
            <summary>
            Writes the Note BLOB into the format the client code expects.
            </summary>
            <param name="RecordLink">The record link passed as a VAR to which the note is added.</param>
            <param name="Note">The note to be added.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Record Link Management.ReadNote(Record Link):Text">
            <summary>
            Read the Note BLOB
            </summary>
            <param name="RecordLink">The record link from which the note is read.</param>
            <returns>The note as a text.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Record Link Management.RemoveLinks(Variant)">
            <summary>
            Removes all record links from all records in the RecVariant within current filters
            </summary>
            <param name="RecVariant">A filtered record. All record links associated with records within the filtered recordset will be deleted.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Record Link Management.RemoveOrphanedLinks">
            <summary>
            Iterates over the record link table and removes those with obsolete record ids.
            </summary>
        </member>
        <member name="M:Codeunit::System#Utilities#Record Link Management.OnAfterCopyLinks(Variant,Variant)">
            <summary>
            Integration event for after copying links from one record to the other.
            </summary>
            <param name="FromRecord">The source record from which links are copied.</param>
            <param name="ToRecord">The destination record to which links are copied.</param>
        </member>
        <member name="O:Codeunit::System#Utilities#Remove Orphaned Record Links">
            <summary>
            This codeunit is created so that record links that have obsolete record ids can be deleted in a scheduled task.
            </summary>
        </member>
        <member name="O:Table::System#Utilities#Captures">
            <summary>
            Provides a representation of Regex Captures that models Capture objects in .Net
            </summary>
            <remark>
            For more information, visit https://go.microsoft.com/fwlink/?linkid=2210123.
            </remark>
        </member>
        <member name="M:Table::System#Utilities#Captures.ReadValue:Text">
            <summary>
            Reads the value of the capture
            </summary>
            <returns>The value of the capture.</returns>
        </member>
        <member name="O:Table::System#Utilities#Groups">
            <summary>
            Provides a representation of Regex Groups that models Group objects in .Net
            </summary>
            <remark>
            For more information, visit https://go.microsoft.com/fwlink/?linkid=2210032.
            </remark>
        </member>
        <member name="M:Table::System#Utilities#Groups.ReadValue:Text">
            <summary>
            Reads the value of the group
            </summary>
            <returns>The value of the group.</returns>
        </member>
        <member name="O:Table::System#Utilities#Matches">
            <summary>
            Provides a representation of Regex Matches that models Match objects in .Net
            </summary>
            <remark>
            For more information, visit https://go.microsoft.com/fwlink/?linkid=2210238.
            </remark>
        </member>
        <member name="M:Table::System#Utilities#Matches.ReadValue:Text">
            <summary>
            Reads the value of the match
            </summary>
            <returns>The value of the match.</returns>
        </member>
        <member name="O:Codeunit::System#Utilities#Regex">
            <summary>
            Provides functionality to use regular expressions to match text, split text, replace text etc.
            </summary>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Regex(Text)">
            <summary>
            Initializes a new instance of the Regex class for the specified regular expression.
            </summary>
            <param name="Pattern">A regular expression pattern to match.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Regex(Text,Regex Options@)">
            <summary>
            Initializes a new instance of the Regex class for the specified regular expression, with options that modify the pattern.
            </summary>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="RegexOptions">A combination of the enumeration values that modify the regular expression.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.GetCacheSize:Integer">
            <summary>
            Gets the maximum number of entries in the current static cache of compiled regular expressions.
            </summary>
            <returns>The maximum number of entries in the static cache.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.SetCacheSize(Integer)">
            <summary>
            Sets the maximum number of entries in the current static cache of compiled regular expressions.
            </summary>
            <param name="CacheSize">The maximum number of entries in the static cache.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.GetGroupNames(List of [Text]@)">
            <summary>
            Gets an array of capturing group names for the regular expression.
            </summary>
            <param name="GroupNames">An list of group names.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.GetGroupNumbers(List of [Integer]@)">
            <summary>
            Gets an array of capturing group numbers that correspond to group names in an array.
            </summary>
            <param name="GroupNumbers">An array of group numbers.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.GroupNameFromNumber(Integer):Text">
            <summary>
            Gets the group name that corresponds to the specified group number.
            </summary>
            <param name="Number">The group number to convert to the corresponding group name.</param>
            <returns>A string that contains the group name associated with the specified group number. If there is no group name that corresponds to i, the method returns Empty.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.GroupNumberFromName(Text):Integer">
            <summary>
            Gets the group number that corresponds to the specified group name.
            </summary>
            <param name="Name">The group name to convert to the corresponding group number.</param>
            <returns>The group number that corresponds to the specified group name, or -1 if name is not a valid group name.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.IsMatch(Text,Text,Integer):Boolean">
            <summary>
            Indicates whether the regular expression finds a match in the input string, beginning at the specified starting position in the string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="StartAt">The character position at which to start the search.</param>
            <returns>True if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.IsMatch(Text,Integer):Boolean">
            <summary>
            Indicates whether the regular expression specified in the Regex constructor finds a match in the input string, beginning at the specified starting position in the string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="StartAt">The character position at which to start the search.</param>
            <returns>True if the regular expression finds a match; otherwise, false.</returns>
            <error>Regex is not Instantiated. Consider calling Regex() first or use an overload supporting a pattern.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.IsMatch(Text,Text,Integer,Regex Options@):Boolean">
            <summary>
            Indicates whether the regular expression finds a match in the input string, beginning at the specified starting position in the string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="StartAt">The character position at which to start the search.</param>
            <param name="RegexOptions">A combination of the enumeration values that modify the regular expression.</param>
            <returns>True if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.IsMatch(Text,Text):Boolean">
            <summary>
            Indicates whether the regular expression finds a match in the input string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <returns>True if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.IsMatch(Text):Boolean">
            <summary>
            Indicates whether the regular expression specified in the Regex constructor finds a match in the input string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <returns>True if the regular expression finds a match; otherwise, false.</returns>
            <error>Regex is not Instantiated. Consider calling Regex() first or use an overload supporting a pattern.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.IsMatch(Text,Text,Regex Options@):Boolean">
            <summary>
            Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="RegexOptions">A combination of the enumeration values that modify the regular expression.</param>
            <returns>True if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Match(Text,Text,Integer,Matches@)">
            <summary>
            Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="StartAt">The zero-based character position at which to start the search.</param>
            <param name="Matches">The Match object to write information about the match to.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Match(Text,Integer,Matches@)">
            <summary>
            Searches the input string for the first occurrence of a regular expression specified in the Regex constructor, beginning at the specified starting position in the string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="StartAt">The zero-based character position at which to start the search.</param>
            <param name="Matches">The Match object to write information about the match to.</param>
            <error>Regex is not Instantiated. Consider calling Regex() first or use an overload supporting a pattern.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Match(Text,Text,Integer,Regex Options@,Matches@)">
            <summary>
            Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="StartAt">The zero-based character position at which to start the search.</param>
            <param name="RegexOptions">A combination of the enumeration values that provide options for matching.</param>
            <param name="Matches">The Match object to write information about the match to.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Match(Text,Text,Integer,Integer,Matches@)">
            <summary>
            Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="StartAt">The zero-based character position in the input string that defines the leftmost position to be searched.</param>
            <param name="Length">The number of characters in the substring to include in the search.</param>
            <param name="Matches">The Match object to write information about the match to.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Match(Text,Integer,Integer,Matches@)">
            <summary>
            Searches the input string for the first occurrence of a regular expression specified in the Regex constructor, beginning at the specified starting position and searching only the specified number of characters.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="StartAt">The zero-based character position in the input string that defines the leftmost position to be searched.</param>
            <param name="Length">The number of characters in the substring to include in the search.</param>
            <param name="Matches">The Match object to write information about the match to.</param>
            <error>Regex is not Instantiated. Consider calling Regex() first or use an overload supporting a pattern.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Match(Text,Text,Integer,Integer,Regex Options@,Matches@)">
            <summary>
            Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="StartAt">The zero-based character position in the input string that defines the leftmost position to be searched.</param>
            <param name="Length">The number of characters in the substring to include in the search.</param>
            <param name="RegexOptions">A combination of the enumeration values that provide options for matching.</param>
            <param name="Matches">The Match object to write information about the match to.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Match(Text,Text,Matches@)">
            <summary>
            Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Matches">The Match object to write information about the match to.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Match(Text,Matches@)">
            <summary>
            Searches the input string for the first occurrence of the specified regular expression specified in the Regex constructor, using the specified matching options.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Matches">The Match object to write information about the match to.</param>
            <error>Regex is not Instantiated. Consider calling Regex() first or use an overload supporting a pattern.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Match(Text,Text,Regex Options@,Matches@)">
            <summary>
            Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="RegexOptions">A combination of the enumeration values that provide options for matching.</param>
            <param name="Matches">The Match object to write information about the match to.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Replace(Text,Text,Text,Integer):Text">
            <summary>
            Replaces strings that match a regular expression pattern with a specified replacement string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Replacement">The replacement string.</param>
            <param name="Count">The maximum number of times the replacement can occur.</param>
            <returns>A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the pattern is not matched the method returns the current instance unchanged</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Replace(Text,Text,Integer):Text">
            <summary>
            Replaces strings that match a regular expression pattern specified in the Regex constructor with a specified replacement string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Replacement">The replacement string.</param>
            <param name="Count">The maximum number of times the replacement can occur.</param>
            <returns>A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the pattern is not matched the method returns the current instance unchanged</returns>
            <error>Regex is not Instantiated. Consider calling Regex() first or use an overload supporting a pattern.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Replace(Text,Text,Text,Integer,Regex Options@):Text">
            <summary>
            Replaces strings that match a regular expression pattern with a specified replacement string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Replacement">The replacement string.</param>
            <param name="Count">The maximum number of times the replacement can occur.</param>
            <param name="RegexOptions">A combination of the enumeration values that provide options for matching.</param>
            <returns>A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the pattern is not matched the method returns the current instance unchanged</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Replace(Text,Text,Text,Integer,Integer):Text">
            <summary>
            In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Replacement">The replacement string.</param>
            <param name="Count">The maximum number of times the replacement can occur.</param>
            <param name="StartAt">The character position in the input string where the search begins.</param>
            <returns>A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the pattern is not matched the method returns the current instance unchanged</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Replace(Text,Text,Integer,Integer):Text">
            <summary>
            In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern specified in the Regex constructor with a specified replacement string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Replacement">The replacement string.</param>
            <param name="Count">The maximum number of times the replacement can occur.</param>
            <param name="StartAt">The character position in the input string where the search begins.</param>
            <returns>A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the pattern is not matched the method returns the current instance unchanged</returns>
            <error>Regex is not Instantiated. Consider calling Regex() first or use an overload supporting a pattern.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Replace(Text,Text,Text,Integer,Integer,Regex Options@):Text">
            <summary>
            In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Replacement">The replacement string.</param>
            <param name="Count">The maximum number of times the replacement can occur.</param>
            <param name="StartAt">The character position in the input string where the search begins.</param>
            <param name="RegexOptions">A combination of the enumeration values that provide options for matching.</param>
            <returns>A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the pattern is not matched the method returns the current instance unchanged</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Replace(Text,Text,Text):Text">
            <summary>
            Replaces all strings that match a specified regular expression with a specified replacement string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Replacement">The replacement string.</param>
            <returns>A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the pattern is not matched the method returns the current instance unchanged</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Replace(Text,Text):Text">
            <summary>
            Replaces all strings that match a specified regular expression specified in the Regex constructor with a specified replacement string.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Replacement">The replacement string.</param>
            <returns>A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the pattern is not matched the method returns the current instance unchanged</returns>
            <error>Regex is not Instantiated. Consider calling Regex() first or use an overload supporting a pattern.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Replace(Text,Text,Text,Regex Options@):Text">
            <summary>
            Replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.
            </summary>
            <param name="Input">The string to search for a match.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Replacement">The replacement string.</param>
            <param name="RegexOptions">A combination of the enumeration values that provide options for matching.</param>
            <returns>A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the pattern is not matched the method returns the current instance unchanged</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Split(Text,Text,Integer,List of [Text]@)">
            <summary>
            Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression pattern.
            </summary>
            <param name="Input">The string to split.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Count">The maximum number of times the split can occur.</param>
            <param name="Array">An empty list that will be populated with the result of the split query.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Split(Text,Integer,List of [Text]@)">
            <summary>
            Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression pattern specified in the Regex constructor.
            </summary>
            <param name="Input">The string to split.</param>
            <param name="Count">The maximum number of times the split can occur.</param>
            <param name="Array">An empty list that will be populated with the result of the split query.</param>
            <error>Regex is not Instantiated. Consider calling Regex() first or use an overload supporting a pattern.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Split(Text,Text,Integer,Regex Options@,List of [Text]@)">
            <summary>
            Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression pattern.
            </summary>
            <param name="Input">The string to split.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Count">The maximum number of times the split can occur.</param>
            <param name="RegexOptions">A combination of the enumeration values that provide options for matching.</param>
            <param name="Array">An empty list that will be populated with the result of the split query.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Split(Text,Text,Integer,Integer,List of [Text]@)">
            <summary>
            Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression pattern. The search for the pattern starts at a specified character position in the input string.
            </summary>
            <param name="Input">The string to split.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Count">The maximum number of times the split can occur.</param>
            <param name="StartAt">The character position in the input string where the search will begin.</param>
            <param name="Array">An empty list that will be populated with the result of the split query.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Split(Text,Integer,Integer,List of [Text]@)">
            <summary>
            Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression pattern specified in the Regex constructor. The search for the pattern starts at a specified character position in the input string.
            </summary>
            <param name="Input">The string to split.</param>
            <param name="Count">The maximum number of times the split can occur.</param>
            <param name="StartAt">The character position in the input string where the search will begin.</param>
            <param name="Array">An empty list that will be populated with the result of the split query.</param>
            <error>Regex is not Instantiated. Consider calling Regex() first or use an overload supporting a pattern.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Split(Text,Text,Integer,Integer,Regex Options@,List of [Text]@)">
            <summary>
            Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression pattern. The search for the pattern starts at a specified character position in the input string.
            </summary>
            <param name="Input">The string to split.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Count">The maximum number of times the split can occur.</param>
            <param name="StartAt">The character position in the input string where the search will begin.</param>
            <param name="RegexOptions">A combination of the enumeration values that provide options for matching.</param>
            <param name="Array">An empty list that will be populated with the result of the split query.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Split(Text,Text,List of [Text]@)">
            <summary>
            Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression pattern. Specified options modify the matching operation.
            </summary>
            <param name="Input">The string to split.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="Array">An empty list that will be populated with the result of the split query.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Split(Text,List of [Text]@)">
            <summary>
            Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression pattern specified in the Regex constructor. Specified options modify the matching operation.
            </summary>
            <param name="Input">The string to split.</param>
            <param name="Array">An empty list that will be populated with the result of the split query.</param>
            <error>Regex is not Instantiated. Consider calling Regex() first or use an overload supporting a pattern.</error>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Split(Text,Text,Regex Options@,List of [Text]@)">
            <summary>
            Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression pattern. Specified options modify the matching operation.
            </summary>
            <param name="Input">The string to split.</param>
            <param name="Pattern">A regular expression pattern to match.</param>
            <param name="RegexOptions">A combination of the enumeration values that provide options for matching.</param>
            <param name="Array">An empty list that will be populated with the result of the split query.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.GetHashCode:Integer">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Escape(Text):Text">
            <summary>
            Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $, ., #, and white space) by replacing them with their escape codes.
            </summary>
            <param name="String">The input string that contains the text to convert.</param>
            <returns>A string of characters with metacharacters converted to their escaped form.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Unescape(Text):Text">
            <summary>
            Converts any escaped characters in the input string.
            </summary>
            <param name="String">The input string containing the text to convert.</param>
            <returns>A string of characters with any escaped characters converted to their unescaped form.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Groups(Matches@,Groups@)">
            <summary>
            Get the Groups for one particular Match.
            </summary>
            <param name="MatchesRec">The Match record to get Groups for.</param>
            <param name="GroupsRec">Groups Record to write the resulting Groups to.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.Captures(Groups@,Captures@)">
            <summary>
            Get the Captures for one particular Group.
            </summary>
            <param name="GroupsRec">The Group record to get Captures for.</param>
            <param name="CapturesRec">Captures Record to write the resulting Captures to.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Regex.MatchResult(Matches@,Text):Text">
            <summary>
            Returns the expansion of the specified replacement pattern.
            </summary>
            <param name="Matches">The Match Record to perform replacement on.</param>
            <param name="Replacement">The replacement pattern to use.</param>
            <returns>The expanded version of the replacement parameter.</returns>
        </member>
        <member name="O:Table::System#Utilities#Regex Options">
            <summary>
            Table with options to use with Regular Expressions
            </summary>
            <remark>
            For more information, visit https://go.microsoft.com/fwlink/?linkid=2209848.
            </remark>
        </member>
        <member name="M:Table::System#Utilities#Regex Options.GetRegexOptions:Integer">
            <summary>
            Gets the integer-representation of the combined regex options.
            </summary>
            <returns>An integer for the combined regex options.</returns>
        </member>
        <member name="O:Codeunit::System#Utilities#Uri">
            <summary>
            Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri for more information.</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.Init(Text)">
            <summary>
            Initializes a new instance of the Uri class with the specified URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri.-ctor#System_Uri__ctor_System_String_ for more information.</remarks>
            <param name="UriString">A string that identifies the resource to be represented by the Uri instance. Note that an IPv6 address in string form must be enclosed within brackets. For example, "http://[2607:f8b0:400d:c06::69]".</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.GetAbsoluteUri:Text">
            <summary>
            Gets the absolute URI.
            </summary>
            <returns>A string containing the entire URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.GetScheme:Text">
            <summary>
            Gets the scheme name for the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri.scheme for more information.</remarks>
            <returns>A text that contains the scheme for this URI, converted to lowercase.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.GetHost:Text">
            <summary>
            Gets the host name of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri.host for more information.</remarks>
            <returns>A text that contains the host name for this URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.GetAuthority:Text">
            <summary>
            Gets the authority of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri.authority for more information.</remarks>
            <returns>A text that contains the authority for this URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.GetPort:Integer">
            <summary>
            Gets the port number of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri.port for more information.</remarks>
            <returns>An integer that contains the port number for this URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.GetAbsolutePath:Text">
            <summary>
            Gets the absolute path of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri.absolutepath for more information.</remarks>
            <returns>A text that contains the absolute path for this URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.GetQuery:Text">
            <summary>
            Gets any query information included in the specified URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri.query for more information.</remarks>
            <returns>A text that contains the query information for this URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.GetFragment:Text">
            <summary>
            Gets the escaped URI fragment.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri.fragment for more information.</remarks>
            <returns>A text that contains the fragment portion for this URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.GetSegments(List of [Text]@)">
            <summary>
            Gets a list containing the path segments that make up the specified URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri.segments for more information.</remarks>
            <param name="Segments">An out variable that contains the path segments that make up the specified URI.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.EscapeDataString(Text):Text">
            <summary>
            Converts a string to its escaped representation.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri.escapedatastring for more information.</remarks>
            <param name="TextToEscape"></param>
            <returns>A string that contains the escaped representation of <paramref name="TextToEscape::"/>.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.UnescapeDataString(Text):Text">
            <summary>
            Converts a string to its unescaped representation.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uri.unescapedatastring for more information.</remarks>
            <param name="TextToUnescape"></param>
            <returns>A string that contains the unescaped representation of <paramref name="TextToUnescape::"/>.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.IsValidUri(Text):Boolean">
            <summary>
            Checks if the provded string is a valid URI.
            </summary>
            <param name="UriString">The string to check.</param>
            <returns>True if the provided string is a valid URI; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.IsWellFormedUriString(Text,Enum::System#Utilities#UriKind):Boolean">
            <summary>
            Indicates whether the string is well-formed by attempting to construct a URI with the string and ensures that the string does not require further escaping.
            </summary>
            <remarks>Visit https://learn.microsoft.com/en-us/dotnet/api/system.uri.iswellformeduristring for more information.</remarks>
            <param name="UriString">The string used to attempt to construct a Uri.</param>
            <param name="UriKind">The type of the Uri in uriString.</param>
            <returns>True if the string was well-formed; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.IsBaseOf(Codeunit::System#Utilities#Uri@):Boolean">
            <summary>
            Determines whether the current Uri instance is a base of the specified Uri instance.
            </summary>
            <remarks>Visit https://learn.microsoft.com/en-us/dotnet/api/system.uri.isbaseof for more information.</remarks>
            <param name="UriToTest">The specified URI to test.</param>
            <returns>True if the current Uri instance is a base of uri; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.GetUri(DotNetTypeDeclaration::System#Utilities#Uri@)">
            <summary>
            Gets the underlying .Net Uri variable.
            </summary>
            <param name="OutUri">A .Net object of class Uri that holds the underlying .Net Uri variable.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri.SetUri(DotNetTypeDeclaration::System#Utilities#Uri)">
            <summary>
            Sets the underlying .Net Uri variable.
            </summary>
            <param name="NewUri">A .Net object of class Uri to set to the underlying .Net Uri variable.</param>
        </member>
        <member name="O:Codeunit::System#Utilities#Uri Builder">
            <summary>
            Provides a custom constructor for uniform resource identifiers (URIs) and modifies URIs for the Uri codeunit.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder for more information.</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.Init(Text)">
            <summary>
            Initializes a new instance of the UriBuilder class with the specified URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.-ctor#System_UriBuilder__ctor_System_String_ for more information.</remarks>
            <param name="Uri">A URI string.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.SetScheme(Text)">
            <summary>
            Sets the scheme name of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.scheme for more information.</remarks>
            <param name="Scheme">A string that represents the scheme name to set.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.GetScheme:Text">
            <summary>
            Gets the scheme name of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.scheme for more information.</remarks>
            <returns>The scheme name of the URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.SetHost(Text)">
            <summary>
            Sets the host name of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.host for more information.</remarks>
            <param name="Host">A string that represents the host name to set.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.GetHost:Text">
            <summary>
            Gets the host name of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.host for more information.</remarks>
            <returns>The host name of the URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.SetPort(Integer)">
            <summary>
            Sets the port number of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.port for more information.</remarks>
            <param name="Port">An integer that represents the port number to set.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.GetPort:Integer">
            <summary>
            Gets the port number of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.port for more information.</remarks>
            <returns>The port number of the URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.SetPath(Text)">
            <summary>
            Sets the path to the resource referenced by the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.path for more information.</remarks>
            <param name="Path">A string that represents the path to set.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.GetPath:Text">
            <summary>
            Gets the path to the resource referenced by the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.path for more information.</remarks>
            <returns>The path to the resource referenced by the URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.SetQuery(Text)">
            <summary>
            Sets any query information included in the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.query for more information.</remarks>
            <param name="Query">A string that represents the query information to set.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.GetQuery:Text">
            <summary>
            Gets the query information included in the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.query for more information.</remarks>
            <returns>The query information included in the URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.SetFragment(Text)">
            <summary>
            Sets the fragment portion of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.fragment for more information.</remarks>
            <param name="Fragment">A string that represents the fragment portion to set.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.GetFragment:Text">
            <summary>
            Gets the fragment portion of the URI.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.fragment for more information.</remarks>
            <returns>The fragment portion of the URI.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.GetUri(Codeunit::System#Utilities#Uri@)">
            <summary>
            Gets the Uri instance constructed by the specified "Uri Builder" instance.
            </summary>
            <remarks>Visit https://learn.microsoft.com/dotnet/api/system.uribuilder.uri for more information.</remarks>
            <param name="Uri">A Uri that contains the URI constructed by the Uri Builder.</param>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.AddQueryFlag(Text,Enum::System#Utilities#Uri Query Duplicate Behaviour)">
            <summary>
            Adds a flag to the query string of this UriBuilder. In case the same query flag exists already, the action in <paramref name="DuplicateAction"/> is taken.
            </summary>
            <param name="Flag">A flag to add to the query string of this UriBuilder. This value will be encoded before being added to the URI query string. Cannot be empty.</param>
            <param name="DuplicateAction">Specifies which action to take if the flag already exist.</param>
            <error>If the provided <paramref name="Flag"/> is empty.</error>
            <error>If the provided <paramref name="DuplicateAction"/> is <c>"Throw Error"</c> and the flag already exists in the URI.</error>
            <error>If the provided <paramref name="DuplicateAction"/> is not a valid value for the enum.</error>
            <remarks>This function could alter the order of the existing query string parts. For example, if the previous URL was "https://microsoft.com?foo=bar&amp;john=doe" and the new flag is "contoso", the result could be "https://microsoft.com?john=doe&amp;foo=bar&amp;contoso".</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.AddQueryFlag(Text)">
            <summary>
            Adds a flag to the query string of this UriBuilder. In case the same query flag exists already, only one occurrence is kept.
            </summary>
            <param name="Flag">A flag to add to the query string of this UriBuilder. This value will be encoded before being added to the URI query string. Cannot be empty.</param>
            <error>If the provided <paramref name="Flag"/> is empty.</error>
            <remarks>This function could alter the order of the existing query string parts. For example, if the previous URL was "https://microsoft.com?foo=bar&amp;john=doe" and the new flag is "contoso", the result could be "https://microsoft.com?john=doe&amp;foo=bar&amp;contoso".</remarks>
            <remarks>This function will encode OData parameters (and will ensure encoding of the ones added to the <see cref="UriBuilder"/> before). For example "$skip=3" will result in "%24skip=3". Some servers don't support the encoded version. Use <see cref="AddODataQueryParameter"/> in these cases instead.</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.AddQueryParameter(Text,Text,Enum::System#Utilities#Uri Query Duplicate Behaviour)">
            <summary>
            Adds a parameter key-value pair to the query string of this UriBuilder (in the form <c>ParameterKey=ParameterValue</c>). In case the same query key exists already, the action in <paramref name="DuplicateAction"/> is taken.
            </summary>
            <param name="ParameterKey">The key for the new query parameter. This value will be encoded before being added to the URI query string. Cannot be empty.</param>
            <param name="ParameterValue">The value for the new query parameter. This value will be encoded before being added to the URI query string. Can be empty.</param>
            <param name="DuplicateAction">Specifies which action to take if the ParameterKey specified already exist.</param>
            <error>If the provided <paramref name="ParameterKey"/> is empty.</error>
            <error>If the provided <paramref name="DuplicateAction"/> is <c>"Throw Error"</c>.</error>
            <error>If the provided <paramref name="DuplicateAction"/> is not a valid value for the enum.</error>
            <remarks>This function could alter the order of the existing query string parts. For example, if the previous URL was "https://microsoft.com?foo=bar&amp;john=doe" and the new flag is "contoso=42", the result could be "https://microsoft.com?john=doe&amp;foo=bar&amp;contoso=42".</remarks>
            <remarks>This function will encode OData parameters (and will ensure encoding of the ones added to the <see cref="UriBuilder"/> before). For example "$skip=3" will result in "%24skip=3". Some servers don't support the encoded version. Use <see cref="AddODataQueryParameter"/> in these cases instead.</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.AddQueryParameter(Text,Text)">
            <summary>
            Adds a parameter key-value pair to the query string of this UriBuilder (in the form <c>ParameterKey=ParameterValue</c>). In case the same query key exists already, its value is overwritten.
            </summary>
            <param name="ParameterKey">The key for the new query parameter. This value will be encoded before being added to the URI query string. Cannot be empty.</param>
            <param name="ParameterValue">The value for the new query parameter. This value will be encoded before being added to the URI query string. Can be empty.</param>
            <error>If the provided <paramref name="ParameterKey"/> is empty.</error>
            <remarks>This function could alter the order of the existing query string parts. For example, if the previous URL was "https://microsoft.com?foo=bar&amp;john=doe" and the new flag is "contoso=42", the result could be "https://microsoft.com?john=doe&amp;foo=bar&amp;contoso=42".</remarks>
            <remarks>This function will encode OData parameters (and will ensure encoding of the ones added to the <see cref="UriBuilder"/> before). For example "$skip=3" will result in "%24skip=3". Some servers don't support the encoded version. Use <see cref="AddODataQueryParameter"/> in these cases instead.</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.AddODataQueryParameter(Text,Text)">
            <summary>
            Adds an OData parameter key-value pair to the query string of this UriBuilder (in the form <c>ParameterKey=ParameterValue</c>), preserving the "$" sign in unencoded form. In case the same query key exists already, its value is overwritten.
            </summary>
            <param name="ParameterKey">The key for the new query parameter. This value will be encoded before being added to the URI query string, except for any "$" sign. Cannot be empty.</param>
            <param name="ParameterValue">The value for the new query parameter. This value will be encoded before being added to the URI query string. Can be empty.</param>
            <error>If the provided <paramref name="ParameterKey"/> is empty.</error>
            <remarks>This function could alter the order of the existing query string parts. For example, if the previous URL was "https://microsoft.com?foo=bar&amp;john=doe" and the new flag is "contoso=42", the result could be "https://microsoft.com?john=doe&amp;foo=bar&amp;contoso=42".</remarks>
            <remarks>This function might modify existing query parameters to apply the same encoding rules. For example if the URL is "https://microsoft.com?%24top=1" and the new flag is "$skip=42", the result could be "https://microsoft.com?$skip=42&amp;$top=1".</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.RemoveQueryFlag(Text,Enum::System#Utilities#Uri Query Duplicate Behaviour)">
            <summary>
            Removes a flag from the query string of this UriBuilder. In case the same query flag exists already, the action in <paramref name="DuplicateAction"/> is taken.
            </summary>
            <param name="Flag">A flag to Remove from the query string of this UriBuilder. This value will be encoded before being Removed to the URI query string. Cannot be empty.</param>
            <param name="DuplicateAction">Specifies which action to take if the flag specified already exist.</param>
            <error>If the provided <paramref name="Flag"/> is empty.</error>
            <error>If the provided <paramref name="DuplicateAction"/> is <c>"Throw Error"</c> and the flag does not exist in the URI.</error>
            <error>If the provided <paramref name="DuplicateAction"/> is not a valid value for the enum.</error>
            <remarks>This function could alter the order of the existing query string parts. For example, if the previous URL was "https://microsoft.com?foo=bar&amp;john=doe" and the new flag is "contoso", the result could be "https://microsoft.com?john=doe&amp;foo=bar&amp;contoso".</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.RemoveQueryFlag(Text)">
            <summary>
            Removes a flag from the query string of this UriBuilder. In case the same query flag exists already, only one occurrence is kept.
            </summary>
            <param name="Flag">A flag to Remove from the query string of this UriBuilder. This value will be encoded before being Removed to the URI query string. Cannot be empty.</param>
            <error>If the provided <paramref name="Flag"/> is empty.</error>
            <remarks>This function could alter the order of the existing query string parts. For example, if the previous URL was "https://microsoft.com?foo=bar&amp;john=doe" and the new flag is "contoso", the result could be "https://microsoft.com?john=doe&amp;foo=bar&amp;contoso".</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.RemoveQueryParameter(Text,Text,Enum::System#Utilities#Uri Query Duplicate Behaviour)">
            <summary>
            Removes a parameter key-value pair from the query string of this UriBuilder (in the form <c>ParameterKey=ParameterValue</c>). In case the same query key exists already, the action in <paramref name="DuplicateAction"/> is taken.
            </summary>
            <param name="ParameterKey">The key for the new query parameter. This value will be encoded before being Removed to the URI query string. Cannot be empty.</param>
            <param name="ParameterValue">The value for the new query parameter. This value will be encoded before being Removed to the URI query string. Can be empty.</param>
            <param name="DuplicateAction">Specifies which action to take if the ParameterKey specified already exist.</param>
            <error>If the provided <paramref name="ParameterKey"/> is empty.</error>
            <error>If the provided <paramref name="DuplicateAction"/> is <c>"Throw Error"</c>.</error>
            <error>If the provided <paramref name="DuplicateAction"/> is not a valid value for the enum.</error>
            <remarks>This function could alter the order of the existing query string parts. For example, if the previous URL was "https://microsoft.com?foo=bar&amp;john=doe" and the new flag is "contoso=42", the result could be "https://microsoft.com?john=doe&amp;foo=bar&amp;contoso=42".</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.RemoveQueryParameter(Text,Text)">
            <summary>
            Removes a parameter key-value pair from the query string of this UriBuilder (in the form <c>ParameterKey=ParameterValue</c>). In case the same query key exists already, its value is overwritten.
            </summary>
            <param name="ParameterKey">The key for the new query parameter. This value will be encoded before being Removed to the URI query string. Cannot be empty.</param>
            <param name="ParameterValue">The value for the new query parameter. This value will be encoded before being Removed to the URI query string. Can be empty.</param>
            <error>If the provided <paramref name="ParameterKey"/> is empty.</error>
            <remarks>This function could alter the order of the existing query string parts. For example, if the previous URL was "https://microsoft.com?foo=bar&amp;john=doe" and the new flag is "contoso=42", the result could be "https://microsoft.com?john=doe&amp;foo=bar&amp;contoso=42".</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.RemoveQueryParameters">
            <summary>
            Removes a parameter key-value pair from the query string of this UriBuilder (in the form <c>ParameterKey=ParameterValue</c>). In case the same query key exists already, the action in <paramref name="DuplicateAction"/> is taken.
            </summary>
            <param name="ParameterKey">The key for the new query parameter. This value will be encoded before being Removed to the URI query string. Cannot be empty.</param>
            <param name="DuplicateAction">Specifies which action to take if the ParameterKey specified already exist.</param>
            <error>If the provided <paramref name="ParameterKey"/> is empty.</error>
            <error>If the provided <paramref name="DuplicateAction"/> is <c>"Throw Error"</c>.</error>
            <error>If the provided <paramref name="DuplicateAction"/> is not a valid value for the enum.</error>
            <remarks>This function could alter the order of the existing query string parts. For example, if the previous URL was "https://microsoft.com?foo=bar&amp;john=doe" and the new flag is "contoso=42", the result could be "https://microsoft.com?john=doe&amp;foo=bar&amp;contoso=42".</remarks>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.GetQueryFlags:List of [Text]">
            <summary>
            Gets the flags in the query string of this UriBuilder.
            </summary>
            <returns>A list of flags in the query string of this UriBuilder.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.GetQueryParameters:Dictionary of [Text,List]">
            <summary>
            Gets the parameters in the query string of this UriBuilder.
            </summary>
            <returns>A dictionary of parameters in the query string of this UriBuilder.</returns>
        </member>
        <member name="M:Codeunit::System#Utilities#Uri Builder.GetQueryParameter(Text):List of [Text]">
            <summary>
            Gets the value of the specified query parameter.
            </summary>
            <param name="ParameterKey">The key of the query parameter to get the value of.</param>
            <returns>The value of the specified query parameter.</returns>
        </member>
        <member name="O:Enum::System#Utilities#UriKind">
            <summary>
            Defines the different kinds of URIs.
            </summary>
            <remarks>Visit https://learn.microsoft.com/en-us/dotnet/api/system.urikind for more information.</remarks>
        </member>
        <member name="E:Enum::System#Utilities#UriKind.RelativeOrAbsolute">
            <summary>
            The URI kind is indeterminate.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#UriKind.Absolute">
            <summary>
            The URI is absolute.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#UriKind.Relative">
            <summary>
            The URI is relative.
            </summary>
        </member>
        <member name="O:Enum::System#Utilities#Uri Query Duplicate Behaviour">
            <summary>
            Specifies the behaviour when adding a new query parameter or flag to a URI.
            </summary>
        </member>
        <member name="E:Enum::System#Utilities#Uri Query Duplicate Behaviour.Skip">
            <summary>
            Skips adding the value if the same flag or parameter already exists.
            </summary>
            <example>Adding "foo=bar" to "https://microsoft.com?foo=goofy" and using this option results in "https://microsoft.com?foo=goofy".</example>
        </member>
        <member name="E:Enum::System#Utilities#Uri Query Duplicate Behaviour.Overwrite All Matching">
            <summary>
            Keeps the new value (overwrites all existing matching flags or parameters).
            </summary>
            <example>Adding "foo=bar" to "https://microsoft.com?foo=goofy" and using this option results in "https://microsoft.com?foo=bar".</example>
        </member>
        <member name="E:Enum::System#Utilities#Uri Query Duplicate Behaviour.Keep All">
            <summary>
            Keeps both the existing values and the new value.
            </summary>
            <example>Adding "foo=bar" to "https://microsoft.com?foo=goofy" and using this option results in "https://microsoft.com?foo=goofy&amp;foo=bar".</example>
        </member>
        <member name="E:Enum::System#Utilities#Uri Query Duplicate Behaviour.Throw Error">
            <summary>
            Throws an error if the flag or parameter already exists.
            </summary>
            <example>Adding "foo=bar" to "https://microsoft.com?foo=goofy" and using this option results in an error.</example>
        </member>
        <member name="O:Codeunit::System#Visualization#Business Chart">
            <summary>
            Provides functionality for working with the business chart control add-in.
            </summary>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.Initialize">
            <summary>
            Initializes all the underlying objects needed for working with business charts.
            </summary>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.SetXDimension(Text,Enum::System#Visualization#Business Chart Data Type)">
            <summary>
            Sets the x dimension on the business chart.
            </summary>
            <param name="Caption">x dimension caption.</param>
            <param name="BusinessChartDataType">The data type of the column.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.GetXDimension:Text">
            <summary>
            Gets the x dimension caption.
            </summary>
            <returns>The x dimension caption.</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.GetXDimensionDataType:Enum::System#Visualization#Business Chart Data Type">
            <summary>
            Gets the x dimension data type.
            </summary>
            <returns>The x dimension data type.</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.AddMeasure(Text,Variant,Enum::System#Visualization#Business Chart Data Type,Enum::System#Visualization#Business Chart Type)">
            <summary>
            Adds a new measure to the business chart.
            </summary>
            <param name="Caption">Measure caption.</param>
            <param name="MeasureValueVariant">The value of the measure.</param>
            <param name="DataColumnType">The data type of the measure.</param>
            <param name="BusinessChartType">The type of the business chart.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.AddDataRowWithXDimension(Text)">
            <summary>
            Adds a new data row and sets the value of the x dimension column in this row to the specified value.
            </summary>
            <param name="XDimensionColumnValue">The value to assign to the x dimension column in the new row.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.AddDataColumn(Text,Enum::System#Visualization#Business Chart Data Type)">
            <summary>
            Adds the data column to the data table that the business chart is based on.
            </summary>
            <param name="Caption">Column caption.</param>
            <param name="ValueType">The data type of the column.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.SetValue(Text,Integer,Variant)">
            <summary>
            Sets the value of the scpecified measure at the specified index.
            </summary>
            <param name="MeasureName">The name of the measure</param>
            <param name="XAxisIndex">The X axis index.</param>
            <param name="MeasureValueVariant">The value of the measure to set.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.SetValue(Integer,Integer,Variant)">
            <summary>
            Sets the value of the scpecified measure index at the specified x axis index.
            </summary>
            <param name="MeasureIndex">The index of the measure</param>
            <param name="XAxisIndex">The X axis index.</param>
            <param name="MeasureValueVariant">The value of the measure to set.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.GetValue(Text,Integer,Variant@)">
            <summary>
            Gets the value of the scpecified measure at the specified index.
            </summary>
            <param name="MeasureName">The name of the measure</param>
            <param name="XAxisIndex">The X axis index.</param>
            <param name="MeasureValueVariant">The returned value of the measure.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.GetMaxNumberOfMeasures:Integer">
            <summary>
            Gets the maximum number of measures that the business chart can display.
            </summary>
            <returns>The maximum number of measures that the business chart can display.</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.Update(DotNetTypeDeclaration::System#Visualization#BusinessChartAddIn)">
            <summary>
            Updates the provided business chart control add-in.
            </summary>
            <param name="DotNetBusinessChartAddIn">The business chart add-in to update.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.Update(ControlAddIn::System#Integration#BusinessChart)">
            <summary>
            Updates the provided business chart control add-in.
            </summary>
            <param name="BusinessChartAddIn">The business chart add-in to update.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.GetMeasureNameToValueMap:Dictionary of [Text,Text]">
            <summary>
            Gets the dictionary of measure names and values.
            </summary>
            <returns>The dictionary of measure names and values.</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.SetShowChartCondensed(Boolean)">
            <summary>
            Sets a value indicating whether the XAxis Margin is visible or not.
            </summary>
            <param name="ShowChartCondensed">Indicates whether the XAxis Margin is visible or not.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Business Chart.WriteToXMLDocument(DotNetTypeDeclaration::System#XmlDocument)">
            <summary>
            Exports the underlying data table to the provided XML document for testing purposes.
            </summary>
            <param name="DotNetXMLDocument">The resulting XML document.</param>
        </member>
        <member name="O:Enum::System#Visualization#Business Chart Data Type">
            <summary>
            Contains the possible data types that business chart can show.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Data Type.String">
            <summary>
            String type, corresponds to 'System.String'
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Data Type.Integer">
            <summary>
            Integer type, corresponds to 'System.Int32'
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Data Type.Decimal">
            <summary>
            Decimal type, corresponds to 'System.Decimal'
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Data Type.DateTime">
            <summary>
            DateTime type, corresponds to 'System.DateTime'
            </summary>
        </member>
        <member name="O:Enum::System#Visualization#Business Chart Type">
            <summary>
            Represents all the available types of business charts
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.Point">
            <summary>
            Uses points to represent data points.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.Bubble">
            <summary>
            A variation of the Point chart type, where the data points are replaced by bubbles of different sizes.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.Line">
            <summary>
            Illustrates trends in data with the passing of time.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.StepLine">
            <summary>
            Similar to the Line chart type, but uses vertical and horizontal lines to connect the data points in a series forming a step-like progression.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.Column">
            <summary>
            Uses a sequence of columns to compare values across categories.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.StackedColumn">
            <summary>
            Used to compare the contribution of each value to a total across categories.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.StackedColumn100">
            <summary>
            Displays multiple series of data as stacked columns. The cumulative proportion of each stacked element is always 100% of the Y axis.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.Area">
            <summary>
            Emphasizes the degree of change over time and shows the relationship of the parts to a whole.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.StackedArea">
            <summary>
            An Area chart that stacks two or more data series on top of one another.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.StackedArea100">
            <summary>
            Displays multiple series of data as stacked areas. The cumulative proportion of each stacked element is always 100% of the Y axis.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.Pie">
            <summary>
            Shows how proportions of data, shown as pie-shaped pieces, contribute to the data as a whole.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.Doughnut">
            <summary>
            Similar to the Pie chart type, except that it has a hole in the center.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.Range">
            <summary>
            Displays a range of data by plotting two Y values per data point, with each Y value being drawn as a line chart.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.Radar">
            <summary>
            A circular chart that is used primarily as a data comparison tool.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Business Chart Type.Funnel">
            <summary>
            Displays in a funnel shape data that equals 100% when totaled.
            </summary>
        </member>
        <member name="O:Codeunit::System#Visualization#Cues And KPIs">
            <summary>
            Exposes functionality to set up and retrieve styles for cues.
            </summary>
        </member>
        <member name="M:Codeunit::System#Visualization#Cues And KPIs.OpenCustomizePageForCurrentUser(Integer)">
            <summary>
            Opens the cue setup user page with an implicit filter on table id.
            The page shows previously added entries in the Cue Setup Administration page that have the UserId being either the current user or blank.
            The page also displays all other fields the that the passed table might have of type decimal or integer.
            Closing this page will transfer any changed or added setup entries to the cue setup table.
            </summary>
            <param name="TableId">The ID of the table for which the page will be customized.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Cues And KPIs.ChangeUserForSetupEntry(RecordRef@,Text[30],Text[50])">
            <summary>
            Changes the user of a cue setup entry.
            A Recref pointing to the newly modified record is returned by var.
            </summary>
            <param name="RecordRef">The recordref that poins to the record that will be modified.</param>
            <param name="Company">The company in which the table will be modified.</param>
            <param name="UserName">The new UserName to which the setup entry will belong to.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Cues And KPIs.SetCueStyle(Integer,Integer,Decimal,Enum::System#Visualization#Cues And KPIs Style@)">
            <summary>
            Retrieves a Cues And KPIs Style enum based on the cue setup of the provided TableId, FieldID and Amount.
            The computed cue style is returned by var.
            </summary>
            <param name="TableID">The ID of the table containing the field for which the style is wanted.</param>
            <param name="FieldID">The ID of the field for which the style is wanted.</param>
            <param name="Amount">The amount for which the style will be calculated based on the threshold values of the setup.</param>
            <param name="FinalStyle">The amount for which the style will be calculated based on the threshold values of the setup</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Cues And KPIs.PersonalizedCueSetupExistsForCurrentUser(Integer,Integer):Boolean">
            <summary>
            Checks if a personalized Cue Setup record exists for the current user.
            <param name="TableID">The ID of the table containing the field for which the style is wanted.</param>
            <param name="FieldID">The ID of the field for which the style is wanted.</param>
            </summary>
            <returns>If a personalized Cue Setup record exists for the current user.</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Cues And KPIs.ConvertStyleToStyleText(Enum::System#Visualization#Cues And KPIs Style):Text">
            <summary>
            Converts a Cues And KPIs Style enum to a style text.
            Enum values 0,7,8,9,10 are defined by default, if custom values are needed take a look at OnConvertStyleToStyleText event.
            </summary>
            <seealso cref="OnConvertStyleToStyleText"/>
            <param name="CueStyle">A Cues And KPIs Style enum from which the style text will be converted.</param>
            <returns>The converted style</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Cues And KPIs.InsertData(Integer,Integer,Enum::System#Visualization#Cues And KPIs Style,Decimal,Enum::System#Visualization#Cues And KPIs Style,Decimal,Enum::System#Visualization#Cues And KPIs Style):Boolean">
            <summary>
            Inserts cue setup data. The entries inserted via this method will have no value for the userid field.
            </summary>
            <param name="TableID">The ID of the table where the cue is defined.</param>
            <param name="FieldNo">The ID of the field which the cue is based on.</param>
            <param name="LowRangeStyle">A Cues And KPIs Style enum representing the style that cues which have a value under threshold 1 will take.</param>
            <param name="Threshold1">The lower amount which defines which style cues get based on their value</param>
            <param name="MiddleRangeStyle">A Cues And KPIs Style enum representing the style that cues which have a value over threshold 1 but under threshold 2 will take.</param>
            <param name="Threshold2">The upper amount which defines which style cues get based on their value</param>
            <param name="HighRangeStyle">A Cues And KPIs Style enum representing the style that cues which have a value over threshold 2 will take.</param>
            <returns>True if the data was inserted successfully, false otherwise</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Cues And KPIs.OnConvertStyleToStyleText(Enum::System#Visualization#Cues And KPIs Style,Text@,Boolean@)">
            <summary>
            Event that is called to convert from the style enum to a text value in case of extended enum values.
            Subscribe to this event if you want to introduce new cue styles.
            </summary>
            <param name="CueStyle">A Cues And KPIs Style enum from which the style text will be converted.</param>
            <param name="Result">A text vaue returned by var, which is the result of the conversion from the style enum.</param>
            <param name="Resolved">A boolean value that describes whether or not the custom conversion was executed.</param>
        </member>
        <member name="M:Codeunit::System#Visualization#Cues And KPIs.OnBeforeGetCustomizedCueStyleOption(Integer,Integer,Decimal,Enum::System#Visualization#Cues And KPIs Style@,Boolean@)">
            <summary>
            Event that allows definition of cue style for a cue using style enum without the usage of a cue setup table.
            Subscribe to this event if you want to define a cue style for a cue using custom prerequisites.
            </summary>
            <param name="TableID">The ID of the table where the cue is defined.</param>
            <param name="FieldNo">The ID of the field which the cue is based on.</param>
            <param name="CueValue">Cue value parameter that can be used to determine cue style.</param>
            <param name="CueStyle">Exit parameter that holds newly determined cue style based on custom prerequisites.</param>
            <param name="Resolved">A boolean value that describes whether or not the cue style has been determined.</param>
        </member>
        <member name="O:Enum::System#Visualization#Cues And KPIs Style">
            <summary>
            This enum has the styles for the cues and KPIs on RoleCenter pages.
            <remarks>The values match the original option field on the Cue Setup table, values 1 to 6 are blank options to be extended.</remarks>
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Cues And KPIs Style.None">
            <summary>
            Specifies that no style will be used when rendering the cue.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Cues And KPIs Style.Favorable">
            <summary>
            Specifies that the Favorable style will be used when rendering the cue.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Cues And KPIs Style.Unfavorable">
            <summary>
            Specifies that the Unfavorable style will be used when rendering the cue.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Cues And KPIs Style.Ambiguous">
            <summary>
            Specifies that the Ambiguous style will be used when rendering the cue.
            </summary>
        </member>
        <member name="E:Enum::System#Visualization#Cues And KPIs Style.Subordinate">
            <summary>
            Specifies that the Subordinate style will be used when rendering the cue.
            </summary>
        </member>
        <member name="O:Page::System#Visualization#Cue Setup Administrator">
            <summary>
            List page that contains settings that define the appearance of cues on all pages.
            Administrators can use this page to define a general style, which users can customize from the Cue Setup End User page.
            </summary>
        </member>
        <member name="O:Page::System#Visualization#Cue Setup End User">
            <summary>
            List page that contains settings that define the appearance of cues for the current user and page.
            </summary>
        </member>
        <member name="O:Codeunit::System#Visualization#Headlines">
             <summary>
             Various functions related to headlines functionality.
            
             Payload - the main text of the headline.
             Qualifier - smaller text, hint to the payload.
             Expression property - value for the field on the page with type HeadlinePart.
             </summary>
        </member>
        <member name="M:Codeunit::System#Visualization#Headlines.Truncate(Text,Integer):Text">
            <summary>
            Truncate the text from the end for its length to be no more than MaxLength.
            If the text has to be shortened, "..." is be added at the end.
            </summary>
            <param name="TextToTruncate">Text that be shortened in order to fit on the headline.</param>
            <param name="MaxLength">The maximal length of the string. Usually obtained through
            <see cref="GetMaxQualifierLength"/> or <see cref="GetMaxPayloadLength"/> function.</param>
            <returns>The truncated text</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Headlines.Emphasize(Text):Text">
            <summary>
            Emphasize a string of text in the headline. Applies the style to the text.
            </summary>
            <param name="TextToEmphasize">The text that the style will be applied on.</param>
            <returns>Emphasized text (special tags are added to the input).</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Headlines.GetHeadlineText(Text,Text,Text@):Boolean">
            <summary>
            Combine the text from Qualifier and Payload in order to get a single string with headline
            text. This text is usually assigned to Expression property on the HeadlinePart page.
            </summary>
            <param name="Qualifier">The text to be displayed on the qualifier (smaller text above the main one)
            of the headline (parts of it can be emphasized, see <see cref="Emphasize"/>).</param>
            <param name="Payload">The text to be displayed on the payload (the main text of the headline)
            of the headline (parts of it can be emphasized, see <see cref="Emphasize"/>).</param>
            <param name="ResultText">Output parameter. Contains the combined text, ready to be assigned to
            the Expression property, if the function returns 'true', the unchanged value otherwise.</param>
            <returns>'false' if payload is empty, or payload is too long, or qualifier is too long,
            'true' otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Headlines.GetUserGreetingText:Text">
            <summary>
            Get a greeting text for the current user relevant to the time of the day.
            Timespans and correspondant greetings:
            00:00-10:59     Good morning, John Doe!
            11:00-13:59     Hi, John Doe!
            14:00-18:59     Good afternoon, John Doe!
            19:00-23:59     Good evening, John Doe!
            if the user name is blank for the current user, simplified version
            is used (for example, "Good afternoon!").
            </summary>
            <returns>The greeting text.</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Headlines.ShouldUserGreetingBeVisible:Boolean">
            <summary>
            Determines if a greeting text should be visible.
            </summary>
            <returns>True if the user logged in less than 10 minutes ago, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Headlines.GetMaxQualifierLength:Integer">
            <summary>
            The accepted maximum length of a qualifier.
            </summary>
            <returns>The number of characters, 50.</returns>
        </member>
        <member name="M:Codeunit::System#Visualization#Headlines.GetMaxPayloadLength:Integer">
            <summary>
            The accepted maximum length of a payload.
            </summary>
            <returns>The number of characters, 75.</returns>
        </member>
        <member name="O:Codeunit::System#Device#Camera">
            <summary>
            Provides the functions for getting the data from a camera on the client device.
            </summary>
        </member>
        <member name="M:Codeunit::System#Device#Camera.GetPicture(InStream,Text@):Boolean">
            <summary>
            Takes a picture from a camera on the client device and returns the data in the InStream.
            </summary>
            <param name="PictureInStream">An InStream object that will hold the image in case taking a picture was successful.</param>
            <param name="PictureName">A generated name for the taken picture. It will include the current date and time (for example, "Picture_05_03_2020_12_49_23.jpeg").</param>
            <returns>True if the camera is available, the user took a picture and decided to use it, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Device#Camera.GetPicture(Integer,InStream,Text@):Boolean">
            <summary>
            Takes a picture from a camera on the client device and returns the data in the InStream.
            </summary>
            <param name="Quality">Sets the quality of the saved image, expressed as a number between 0 and 100, where 100 is the highest available resolution.</param>
            <param name="PictureInStream">An InStream object that will hold the image in case taking a picture was successful.</param>
            <param name="PictureName">A generated name for the taken picture. It will include the current date and time (for example, "Picture_05_03_2020_12_49_23.jpeg").</param>
            <returns>True if the camera is available, the user took a picture and decided to use it, false otherwise.</returns>
            <error>The picture quality must be in the range from 0 to 100.</error>
        </member>
        <member name="M:Codeunit::System#Device#Camera.IsAvailable:Boolean">
            <summary>
            Checks whether the camera on the client device is available.
            </summary>
            <returns>True if the camera is available, false otherwise.</returns>
        </member>
        <member name="O:Page::System#Device#Camera">
            <summary>
            Provides an interface for accessing the camera on the client device.
            </summary>
            <example>
            <code>
            Camera.RunModal();
            if Camera.HasPicture() then begin
                Camera.GetPicture(InStream);
            ...
            end;
            Clear(Camera);
            </code>
            </example>
        </member>
        <member name="M:Page::System#Device#Camera.OnOpenPage">
            <summary>
            When the page is open the view for taking a picture is available.
            After the picture is taken the view will close automatically.
            </summary>
            <remarks>You can edit the picture if <see cref="SetAllowEdit"/> with parameter true was called.</remarks>
        </member>
        <member name="M:Page::System#Device#Camera.IsAvailable:Boolean">
            <summary>
            Checks whether the camera on the client device is available.
            </summary>
            <returns>True if the camera is available, false otherwise.</returns>
        </member>
        <member name="M:Page::System#Device#Camera.SetAllowEdit(Boolean)">
            <summary>
            Indicates whether simple editing is allowed before the picture is stored.
            </summary>
            <param name="AllowEdit">True to enable simple editing, false otherwise.</param>
        </member>
        <member name="M:Page::System#Device#Camera.SetEncodingType(Enum::System#Device#Image Encoding)">
            <summary>
            Sets the returned image file's encoding. The default is <see cref="JPEG"/>.
            </summary>
            <param name="EncodingType">The encoding to use when saving the picture.</param>
        </member>
        <member name="M:Page::System#Device#Camera.SetQuality(Integer)">
            <summary>
            Sets the quality of the saved image, expressed as a number
            between 0 and 100, where 100 is the highest available resolution.
            The default is 50.
            </summary>
            <param name="Quality">The quality of the picture to be taken.</param>
            <error>The picture quality must be in the range from 0 to 100.</error>
        </member>
        <member name="M:Page::System#Device#Camera.GetPicture(Codeunit::System#Utilities#Temp Blob@)">
            <summary>
            Gets the picture that was taken when the page was opened.
            An error is displayed if the function is called without opening the page first.
            </summary>
            <param name="TempBlob">The object to put the picture BLOB in.</param>
            <error>The picture is not available.</error>
        </member>
        <member name="M:Page::System#Device#Camera.HasPicture:Boolean">
            <summary>
            Checks if the picture is available and can be obtained with a <see cref="GetPicture"/> method.
            </summary>
            <remarks>
            The picture will not be available if the page was not opened
            (e. g. Camera.RunModal() function was not called) or if the dialog was canceled.
            </remarks>
            <returns>True if the picture is available, false otherwise.</returns>
        </member>
        <member name="M:Page::System#Device#Camera.GetPicture(InStream)">
            <summary>
            Gets the picture that was taken when the page was opened.
            An error is displayed if the function is called without opening the page first.
            </summary>
            <param name="InStream">The InStream to read the picture from.</param>
            <error>The picture is not available.</error>
        </member>
        <member name="O:Enum::System#Device#Image Encoding">
            <summary>
            Specifies the supported encodings for the Camera Interaction page.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Image Encoding.JPEG">
            <summary>
            JPEG image encoding format.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Image Encoding.PNG">
            <summary>
            PNG image encoding format.
            </summary>
        </member>
        <member name="O:Enum::System#Device#Media Type">
            <summary>
            Specifies media type for the Media Interaction page.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Media Type.All Media">
            <summary>
            Choose from either pictures or videos.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Media Type.Picture">
            <summary>
            Choose from pictures.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Media Type.Video">
            <summary>
            Choose from videos.
            </summary>
        </member>
        <member name="O:Page::System#Device#Media Upload">
            <summary>
            Provides an interface for accessing the media on the client device.
            </summary>
            <example>
            <code>
            MediaUpload.RunModal();
            if MediaUpload.HasMedia() then begin
                MediaUpload.GetMedia(InStream);
            ...
            end;
            Clear(MediaUpload);
            </code>
            </example>
        </member>
        <member name="M:Page::System#Device#Media Upload.OnOpenPage">
            <summary>
            When the page is opened, the view for selecting a media file will appear.
            After the picture or video is chosen the page will automatically close..
            </summary>
        </member>
        <member name="M:Page::System#Device#Media Upload.IsAvailable:Boolean">
            <summary>
            Checks whether media upload on the client device is available.
            </summary>
            <returns>True if the media upload is available, false otherwise.</returns>
        </member>
        <member name="M:Page::System#Device#Media Upload.SetMediaType(Enum::System#Device#Media Type)">
            <summary>
            Sets the type of media to select from.
            </summary>
            <param name="MediaType">The type of media to upload.</param>
        </member>
        <member name="M:Page::System#Device#Media Upload.SetUploadFromSavedPhotoAlbum(Boolean)">
            <summary>
            Sets the media source to Saved Photo Album. The default media source is Photo Library.
            </summary>
            <remarks>Has no effect on Android.</remarks>
            <param name="UploadFromSavedPhotoAlbum">Whether to upload media from Saved Photo Album.</param>
        </member>
        <member name="M:Page::System#Device#Media Upload.GetMedia(Codeunit::System#Utilities#Temp Blob@)">
            <summary>
            Gets the picture or video that was chosen when the page was opened.
            An error is displayed if the function is called without opening the page first.
            </summary>
            <param name="TempBlob">The object to put the picture BLOB in.</param>
            <error>The picture is not available.</error>
        </member>
        <member name="M:Page::System#Device#Media Upload.HasMedia:Boolean">
            <summary>
            Checks if the media is available and can be obtained with a <see cref="GetMedia"/> method.
            </summary>
            <remarks>
            The media will not be available if the page was not opened
            (e. g. MediaUpload.RunModal() function was not called) or if the dialog was canceled.
            </remarks>
            <returns>True if the media is available, false otherwise.</returns>
        </member>
        <member name="M:Page::System#Device#Media Upload.GetMedia(InStream)">
            <summary>
            Gets the picture or video that was chosen when the page was opened.
            An error is thrown if the function is called without opening the page first.
            </summary>
            <param name="InStream">The InStream to read the picture from.</param>
            <error>The picture is not available.</error>
        </member>
        <member name="O:Enum::System#Device#BarcodeFailure">
            <summary>
            The failure for the barcode scanner.
            </summary>
        </member>
        <member name="E:Enum::System#Device#BarcodeFailure.Cancel">
            <summary>
            The barcode scanning action was canceled.
            </summary>
        </member>
        <member name="E:Enum::System#Device#BarcodeFailure.NoBarcode">
            <summary>
            No barcode was found.
            </summary>
        </member>
        <member name="E:Enum::System#Device#BarcodeFailure.Error">
            <summary>
            An error occurred while scanning the barcode.
            </summary>
        </member>
        <member name="O:ControlAddIn::System#Device#BarcodeScannerProviderAddIn">
            <summary>
            The failure reason for the barcode scanner.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Device#BarcodeScannerProviderAddIn.RequestBarcodeScannerAsync">
            <summary>
            This method is used to request the barcode scanner.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Device#BarcodeScannerProviderAddIn.RequestBarcodeScannerAsync(Text,Text,Text,Text)">
            <summary>
            This method is used to request the barcode scanner.
            </summary>
            <param name="IntentAction">The intent action to which the barcode scanner receiver is registered.</param>
            <param name="IntentCategory">The intent category to which the barcode scanner receiver is registered.</param>
            <param name="DataString">The intent data string key to which the barcode data is added.</param>
            <param name="DataFormat">The intent data format key to which the barcode format is added.</param>
        </member>
        <member name="EV:">
            <summary>
            This event is raised when the control is ready.
            </summary>
            <param name="IsSupported">Whether the barcode scanner is supported on the device.</param>
        </member>
        <member name="EV:">
            <summary>
            This event is raised when the barcode is received.
            </summary>
            <param name="Barcode">The barcode value.</param>
            <param name="Format">The barcode format.</param>
        </member>
        <member name="O:ControlAddIn::System#Device#CameraBarcodeScannerProviderAddIn">
            <summary>
            The control add-in for the camera barcode scanner provider.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Device#CameraBarcodeScannerProviderAddIn.RequestBarcodeAsync">
            <summary>
            This method is used to request the camera barcode scanner.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Device#CameraBarcodeScannerProviderAddIn.RequestBarcodeAsync(Boolean,Boolean,Integer)">
            <summary>
            This method is used to request the camera barcode scanner.
            </summary>
            <param name="ShowFlipCameraButton">Indicates whether the flip camera button should be shown.</param>
            <param name="ShowTorchButton">Indicates whether the torch button should be shown.</param>
            <param name="ResultDisplayDuration">The duration in milliseconds for which the barcode result should be displayed.</param>
        </member>
        <member name="M:ControlAddIn::System#Device#CameraBarcodeScannerProviderAddIn.RequestBarcodeAsync(Text,Boolean,Boolean,Integer)">
            <summary>
            This method is used to request the camera barcode scanner.
            </summary>
            <param name="BarcodeFormats">A list of comma-separated barcode formats that the scanner should recognize. The available formats are: QR_CODE,DATA_MATRIX,UPC_A,UPC_E,EAN_8,EAN_13,CODE_39,CODE_93,CODE_128,CODABAR,ITF,RSS14,PDF_417,RSS_EXPANDED,MSI,AZTEC</param>
            <param name="ShowFlipCameraButton">Indicates whether the flip camera button should be shown.</param>
            <param name="ShowTorchButton">Indicates whether the torch button should be shown.</param>
            <param name="ResultDisplayDuration">The duration in milliseconds for which the barcode result should be displayed.</param>
        </member>
        <member name="EV:">
            <summary>
            This event is raised when the control is ready.
            </summary>
            <param name="IsSupported">Whether the camera barcode scanner is supported on the device.</param>
        </member>
        <member name="EV:">
            <summary>
            This event is raised when the barcode is available.
            </summary>
            <param name="Barcode">The barcode value.</param>
            <param name="Format">The barcode format.</param>
        </member>
        <member name="EV:">
            <summary>
            This event is raised when the barcode scanner had a failure.
            </summary>
            <param name="Failure">The barcode failure.</param>
        </member>
        <member name="O:Codeunit::System#Device#Geolocation">
            <summary>
            Provides functionality for getting geographical location information from the client device.
            <example>
            <code>
            Geolocation.SetHighAccuracy(true);
            if Geolocation.RequestGeolocation() then
               Geolocation.GetGeolocation(Latitude, Longitude);
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Codeunit::System#Device#Geolocation.RequestGeolocation:Boolean">
            <summary>
            Requests a geographical location from the client device and returns whether the request was succesful.
            </summary>
            <returns>True if the geographical location data was retrieved and is available, and the user agreed to share it, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Device#Geolocation.GetGeolocation(Decimal@,Decimal@)">
            <summary>
            Gets a geographical location from the client device and returns it in the the longitude and latitude parameters.
            </summary>
            <param name="Latitude">The latitude value of the geographical location.</param>
            <param name="Longitude">The longitude value of the geographical location.</param>
        </member>
        <member name="M:Codeunit::System#Device#Geolocation.IsAvailable:Boolean">
            <summary>
            Checks whether geographical location data is available on the client device.
            </summary>
            <returns>True if the location is available; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Device#Geolocation.HasGeolocation:Boolean">
            <summary>
            Checks whether geographical location data has been retrieved from the client device and is available.
            </summary>
            <returns>True if geographical location data is retrieved and is available, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Device#Geolocation.GetGeolocationStatus:Enum::System#Device#Geolocation Status">
            <summary>
            Gets the status of the geographical location data of the client device.
            </summary>
            <returns>The status of the geographical location data.</returns>
        </member>
        <member name="M:Codeunit::System#Device#Geolocation.SetHighAccuracy(Boolean)">
            <summary>
            Sets whether the geographical location data for the device should have the highest level of accuracy.
            </summary>
            <param name="Enable">Instructs the device that the geographical location data for this request must have the highest level of accuracy.</param>
        </member>
        <member name="M:Codeunit::System#Device#Geolocation.SetTimeout(Integer)">
            <summary>
            Sets a timeout for the geographical location data request.
            </summary>
            <param name="Timeout">The maximum length of time (milliseconds) that is allowed to pass to a location request.</param>
        </member>
        <member name="M:Codeunit::System#Device#Geolocation.SetMaximumAge(Integer)">
            <summary>
            Sets a maximum age for the geographical location data request.
            </summary>
            <param name="Age">The maximum length of time (milliseconds) of cached geographical location data.</param>
        </member>
        <member name="M:Codeunit::System#Device#Geolocation.GetHighAccuracy:Boolean">
            <summary>
            Gets whether the device should have the highest level of accuracy for geographical location data.
            </summary>
            <returns>Whether high accuracy is set. A value to provide a hint to the device that this request must have the best possible location accuracy.</returns>
        </member>
        <member name="M:Codeunit::System#Device#Geolocation.GetTimeout:Integer">
            <summary>
            Gets the timeout for the geographical location data request.
            </summary>
            <returns>The maximum length of time (milliseconds) that is allowed to pass to a location request.</returns>
        </member>
        <member name="M:Codeunit::System#Device#Geolocation.GetMaximumAge:Integer">
            <summary>
            Gets the maximum age for the geographical location data request.
            </summary>
            <returns>The maximum length of time (milliseconds) of geographical location data.</returns>
        </member>
        <member name="O:Page::System#Device#Geolocation">
            <summary>
            This page shows instructional text for the user and is opened when the geographical location of the client device is requested.
            </summary>
        </member>
        <member name="M:Page::System#Device#Geolocation.OnOpenPage">
            <summary>
            When the page opens it requests the location from the client and shows a view.
            After getting the location, the page will close automatically.
            </summary>
        </member>
        <member name="O:Enum::System#Device#Geolocation Status">
            <summary>
            Specifies the status of the geographical location data.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Geolocation Status.Available">
            <summary>
            Available
            </summary>
        </member>
        <member name="E:Enum::System#Device#Geolocation Status.No Data">
            <summary>
            No data (no data could be obtained).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Geolocation Status.Timed Out">
            <summary>
            Timed out (location information not obtained in due time).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Geolocation Status.Not Available">
            <summary>
            Not available (for example user denied app access to location).
            </summary>
        </member>
        <member name="O:Page::System#Device#Printer Management">
            <summary>
            Exposes the list of available printers.
            </summary>
        </member>
        <member name="O:Enum::System#Device#Printer Paper Kind">
            <summary>
            Specifies the standard paper sizes
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.A2">
            <summary>
            A2 paper (420 mm by 594 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.A3">
            <summary>
            A3 paper (297 mm by 420 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.A4">
            <summary>
            A4 paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.A5">
            <summary>
            A5 paper (148 mm by 210 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.A6">
            <summary>
            A6 paper (105 mm by 148 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.B4">
            <summary>
            B4 paper (250 mm by 353 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.B4Envelope">
            <summary>
            B4 envelope (250 mm by 353 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.B5">
            <summary>
            B5 paper (176 mm by 250 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.B5Envelope">
            <summary>
            B5 envelope (176 mm by 250 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.B6Envelope">
            <summary>
            B6 envelope (176 mm by 125 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.B6Jis">
            <summary>
            JIS B6 paper (128 mm by 182 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.C3Envelope">
            <summary>
            C3 envelope (324 mm by 458 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.C4Envelope">
            <summary>
            C4 envelope (229 mm by 324 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.C5Envelope">
            <summary>
            C5 envelope (162 mm by 229 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.C65Envelope">
            <summary>
            C65 envelope (114 mm by 229 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.C6Envelope">
            <summary>
            C6 envelope (114 mm by 162 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.CSheet">
            <summary>
            C paper (17 in. by 22 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.DLEnvelope">
            <summary>
            DL envelope (110 mm by 220 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.DSheet">
            <summary>
            D paper (22 in. by 34 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.ESheet">
            <summary>
            E paper (34 in. by 44 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Executive">
            <summary>
            Executive paper (7.25 in. by 10.5 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Folio">
            <summary>
            Folio paper (8.5 in. by 13 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.GermanLegalFanfold">
            <summary>
            German legal fanfold (8.5 in. by 13 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.GermanStandardFanfold">
            <summary>
            German standard fanfold (8.5 in. by 12 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.InviteEnvelope">
            <summary>
            Invitation envelope (220 mm by 220 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.IsoB4">
            <summary>
            ISO B4 (250 mm by 353 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.ItalyEnvelope">
            <summary>
            Italy envelope (110 mm by 230 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.JapaneseDoublePostcard">
            <summary>
            Japanese double postcard (200 mm by 148 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.JapaneseEnvelopeChouNumber3">
            <summary>
            Japanese Chou #3 envelope.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.JapaneseEnvelopeChouNumber4">
            <summary>
            Japanese Chou #4 envelope.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.JapaneseEnvelopeKakuNumber2">
            <summary>
            Japanese Kaku #2 envelope.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.JapaneseEnvelopeKakuNumber3">
            <summary>
            Japanese Kaku #3 envelope.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.JapaneseEnvelopeYouNumber4">
            <summary>
            Japanese You #4 envelope.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.JapanesePostcard">
            <summary>
            Japanese postcard (100 mm by 148 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Ledger">
            <summary>
            Ledger paper (17 in. by 11 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Legal">
            <summary>
            Legal paper (8.5 in. by 14 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Letter">
            <summary>
            Letter paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.MonarchEnvelope">
            <summary>
            Monarch envelope (3.875 in. by 7.5 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Note">
            <summary>
            Note paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Number10Envelope">
            <summary>
            #10 envelope (4.125 in. by 9.5 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Number11Envelope">
            <summary>
            #11 envelope (4.5 in. by 10.375 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Number12Envelope">
            <summary>
            #12 envelope (4.75 in. by 11 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Number14Envelope">
            <summary>
            #14 envelope (5 in. by 11.5 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Number9Envelope">
            <summary>
            #9 envelope (3.875 in. by 8.875 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.PersonalEnvelope">
            <summary>
            6 3/4 envelope (3.625 in. by 6.5 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Prc16K">
            <summary>
            16K paper (146 mm by 215 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Prc32K">
            <summary>
            32K paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.PrcEnvelopeNumber1">
            <summary>
            #1 envelope (102 mm by 165 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.PrcEnvelopeNumber10">
            <summary>
            #10 envelope (324 mm by 458 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.PrcEnvelopeNumber2">
            <summary>
            #2 envelope (102 mm by 176 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.PrcEnvelopeNumber3">
            <summary>
            #3 envelope (125 mm by 176 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.PrcEnvelopeNumber4">
            <summary>
            #4 envelope (110 mm by 208 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.PrcEnvelopeNumber5">
            <summary>
            #5 envelope (110 mm by 220 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.PrcEnvelopeNumber6">
            <summary>
            #6 envelope (120 mm by 230 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.PrcEnvelopeNumber7">
            <summary>
            #7 envelope (160 mm by 230 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.PrcEnvelopeNumber8">
            <summary>
            #8 envelope (120 mm by 309 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.PrcEnvelopeNumber9">
            <summary>
            #9 envelope (229 mm by 324 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Quarto">
            <summary>
            Quarto paper (215 mm by 275 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Standard10x11">
            <summary>
            Standard paper (10 in. by 11 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Standard10x14">
            <summary>
            Standard paper (10 in. by 14 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Standard11x17">
            <summary>
            Standard paper (11 in. by 17 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Standard12x11">
            <summary>
            Standard paper (12 in. by 11 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Standard15x11">
            <summary>
            Standard paper (15 in. by 11 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Standard9x11">
            <summary>
            Standard paper (9 in. by 11 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Statement">
            <summary>
            Statement paper (5.5 in. by 8.5 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Tabloid">
            <summary>
            Tabloid paper (11 in. by 17 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.USStandardFanfold">
            <summary>
            US standard fanfold (14.875 in. by 11 in.).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Kind.Custom">
            <summary>
            Custom. The paper size is defined by the user.
            </summary>
        </member>
        <member name="O:Enum::System#Device#Printer Paper Source Kind">
            <summary>
            Standard paper sources.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.AutomaticFeed">
            <summary>
            Automatically fed paper.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.Cassette">
            <summary>
            A paper cassette.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.Custom">
            <summary>
            A printer-specific paper source.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.Envelope">
            <summary>
            An envelope.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.FormSource">
            <summary>
            The default input bin of printer.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.LargeCapacity">
            <summary>
            The large-capacity bin of printer.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.LargeFormat">
            <summary>
            Large-format paper.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.Lower">
            <summary>
            The lower bin of a printer.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.Manual">
            <summary>
            Manually fed paper.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.ManualFeed">
            <summary>
            Manually fed envelope.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.Middle">
            <summary>
            The middle bin of a printer.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.SmallFormat">
            <summary>
            Small-format paper.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.TractorFeed">
            <summary>
            A tractor feed.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Paper Source Kind.Upper">
            <summary>
            The upper bin of a printer.
            </summary>
        </member>
        <member name="O:Codeunit::System#Device#Printer Setup">
            <summary>
            Exposes functionality to manage printer settings.
            </summary>
        </member>
        <member name="M:Codeunit::System#Device#Printer Setup.GetPrinterType(Printer):Enum::System#Device#Printer Type">
            <summary>
            Gets the type of a printer.
            </summary>
            <param name="Printer">The printer.</param>
            <returns>The printer type.</returns>
        </member>
        <member name="M:Codeunit::System#Device#Printer Setup.OnOpenPrinterSettings(Text,Boolean@)">
            <summary>
            Integration event that is called to view and edit the settings of a printer.
            Subscribe to this event if you want to introduce user configurable settings for a printer.
            </summary>
            <param name="PrinterID">A value that determines the printer being drilled down.</param>
            <param name="IsHandled">Stores whether the operation was successful.</param>
        </member>
        <member name="M:Codeunit::System#Device#Printer Setup.OnSetAsDefaultPrinter(Text,Text,Boolean@)">
            <summary>
            Integration event that is called to set the default printer for all reports.
             Subscribe to this event to specify a value in the Printer Name field and leave the User ID and Report ID fields blank in Printers Selection.
            </summary>
            <param name="PrinterID">A value that determines the printer being set as default.</param>
            <param name="UserID">A value that determines the user for whom the printer is being set as default. Empty value implies all users.</param>
            <param name="IsHandled">Stores whether the operation was successful.</param>
        </member>
        <member name="M:Codeunit::System#Device#Printer Setup.GetPrinterSelectionsPage(Integer@,Boolean@)">
            <summary>
            Integration event that is called to get the page ID of the Printer Selection page.
            </summary>
            <param name="PageID">An out value that determines the id of the Printer Selection page.</param>
            <param name="IsHandled">Stores whether the operation was successful.</param>
        </member>
        <member name="O:Codeunit::System#Device#Printer Setup Impl#">
            <summary>
            Implements functionality to manage printer settings.
            </summary>
        </member>
        <member name="O:Enum::System#Device#Printer Type">
            <summary>
            Specifies the type of a printer.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Type.Local Printer">
            <summary>
            Specifies a local printer.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Type.Network Printer">
            <summary>
            Specifies a cloud printer.
            </summary>
        </member>
        <member name="O:Enum::System#Device#Printer Unit">
            <summary>
            Specifies several of the units of measure used for printing.
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Unit.Display">
            <summary>
            The default unit (0.01 in.)
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Unit.HundredthsOfAMillimeter">
            <summary>
            One-hundredth of a millimeter (0.01 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Unit.TenthsOfAMillimeter">
            <summary>
            One-tenth of a millimeter (0.1 mm).
            </summary>
        </member>
        <member name="E:Enum::System#Device#Printer Unit.ThousandthsOfAnInch">
            <summary>
            One-thousandth of an inch (0.001 in.).
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the AddIn is ready for communication through its API
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when an error occurs in the add-in
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the page of the embedded report changes
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the embedded report finishes loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the embedded dashboard finishes loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the embedded dashboard tile finishes loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the embedded report visual finishes loading
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.SetToken(Text)">
            <summary>
            Initializes the token to be used when embedding Power BI content
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.EmbedPowerBIReport(Text,Text,Text)">
            <summary>
            Initializes the Power BI embed Report into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.EmbedPowerBIDashboard(Text,Text)">
            <summary>
            Initializes the Power BI embed Dashboard into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.EmbedPowerBIDashboardTile(Text,Text,Text)">
            <summary>
            Initializes the Power BI embed Dashboard Tile into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.EmbedPowerBIReportVisual(Text,Text,Text,Text)">
            <summary>
            Initializes the Power BI embed Report Visual into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.FullScreen">
            <summary>
            Enters full screen mode for the current embed
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.UpdateReportFilters(Text)">
            <summary>
            Updates the report filters with the provided new filters
            </summary>
            <param name="filters">A serialized JSON array of filters</param>
            <remarks>
            The new filters will replace any existing report filter for the same table columns
            </remarks>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.RemoveReportFilters">
            <summary>
            Removes the current report level filters
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.UpdatePageFilters(Text)">
            <summary>
            Updates the page filters with the provided new filters
            </summary>
            <param name="filters">A serialized JSON array of filters</param>
            <remarks>
            The new filters will replace any existing page filter for the same table columns
            </remarks>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.RemovePageFilters">
            <summary>
            Removes the current page level filters
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.SetPage(Text)">
            <summary>
            Changes the active page of the report
            </summary>
            <param name="PageName">The name of the new page to set as active</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.SetLocale(Text)">
            <summary>
            Changes the locale used to render the embedded element. If not specified, it will use the default Power BI language.
            </summary>
            <param name="NewLocale">The locale to use, for example "en-us".</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.SetBookmarksVisible(Boolean)">
            <summary>
            Controls whether the bookmark selection pane will be visible in the embed experience. Defaults to false.
            </summary>
            <param name="Visible">Whether bookmarks should be visible.</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.SetFiltersVisible(Boolean)">
            <summary>
            Controls whether the filter pane will be visible in the embed experience. Defaults to false.
            </summary>
            <param name="Visible">Whether filters should be visible.</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.SetPageSelectionVisible(Boolean)">
            <summary>
            Controls whether the page selection bar will be visible in the embed experience. Defaults to false.
            </summary>
            <param name="Visible">Whether page selection should be visible.</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.SetTransparentBackground(Boolean)">
            <summary>
            Controls whether the report background should be set to transparent regardless of the actual color. Defaults to false.
            </summary>
            <param name="Visible">Whether the background should be force to transparent.</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.AddBottomPadding(Boolean)">
            <summary>
            Controls whether the addin includes a bottom padding that makes it look nicer in some embedded scenarios. Defaults to false.
            </summary>
            <param name="AddPadding">Whether the bottom padding should be added.</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.SetSettings(Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean)">
             <summary>
             Sets the properties for the embed experience
             </summary>
            <param name="ShowBookmarkSelection">Shows the bookmark selection pane.</param>
            <param name="ShowFilterSelection">Shows the filter pane to filter embed.</param>
            <param name="ShowPageSelection">Shows the pane to select the report page.</param>
            <param name="ShowZoomSelection">Shows the bar that allows manual zoom in and zoom out for the embed.</param>
            <param name="ForceTransparentBackground">Forces a transparent background to the embed.</param>
            <param name="ForceFitToPage">Forces the Fit To Page behaviour for the embed.</param>
            <param name="AddBottomPadding">Controls whether a padding is needed on the bottom of the page (useful in case the embed is the only element displayed on the page).</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.InitializeFrame(Boolean,Text)">
            <summary>
            Sets the properties for the browser frame containing the embed
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.InitializeReport(Text,Text,Text,Text)">
            <summary>
            Initializes the Power BI Embed into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.EmbedReportWithOptions(Text,Text,Text,Text,Boolean)">
            <summary>
            Initializes the Power BI embed Report into the page, with additional options
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.ViewMode">
            <summary>
            Changes the current mode into View
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.EditMode">
            <summary>
            Changes the current mode into Edit
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.EmbedReport(Text,Text,Text,Text)">
            <summary>
            Initializes the Power BI embed Report into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.EmbedDashboard(Text,Text,Text)">
            <summary>
            Initializes the Power BI embed Dashboard into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.EmbedDashboardTile(Text,Text,Text,Text)">
            <summary>
            Initializes the Power BI embed Dashboard Tile into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#PowerBI#PowerBIManagement.EmbedReportVisual(Text,Text,Text,Text,Text)">
            <summary>
            Initializes the Power BI embed Report Visual into the page
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Excel#Edit in Excel">
            <summary>
            This codeunit provides an interface to running Edit in Excel for a specific page.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel.EditPageInExcel(Text[240],Integer)">
            <summary>
            Creates web service for the specified page, and uses the web service to prepare and download an Excel file for the Edit in Excel functionality.
            </summary>
            <param name="PageCaption">The name of the page. This will be used for the name of the downloaded excel file, additionally the web service will be called [PageCaption]_Excel. Note if the PageCaption starts with a digit, the web service name will be WS[PageCaption]_Excel.</param>
            <param name="PageId">The ID of the page, for example, 21.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel.EditPageInExcel(Text[240],Integer,Codeunit::System#Integration#Excel#Edit in Excel Filters)">
            <summary>
            Creates web service for the specified page, and uses the web service to prepare and download an Excel file for the Edit in Excel functionality.
            </summary>
            <param name="PageCaption">The name of the page. This will be used for the name of the downloaded excel file, additionally the web service will be called [PageCaption]_Excel. Note if the PageCaption starts with a digit, the web service name will be WS[PageCaption]_Excel.</param>
            <param name="PageId">The ID of the page, for example, 21.</param>
            <param name="EditinExcelFilters">The filters which will be applied to Edit in Excel.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel.EditPageInExcel(Text[240],Integer,Codeunit::System#Integration#Excel#Edit in Excel Filters,Text)">
            <summary>
            Creates web service for the specified page, and uses the web service to prepare and download an Excel file for the Edit in Excel functionality.
            </summary>
            <param name="PageCaption">The name of the page. This will be used for the name of the downloaded excel file, if the FileName parameter is not set. Additionally, the web service will be called [PageCaption]_Excel. Note if the PageCaption starts with a digit, the web service name will be WS[PageCaption]_Excel.</param>
            <param name="PageId">The ID of the page, for example, 21.</param>
            <param name="EditinExcelFilters">The filters which will be applied to Edit in Excel.</param>
            <param name="FileName">The name of the downloaded excel file.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel.GenerateExcelWorkBook(Tenant Web Service,Text)">
            <summary>
            Prepares an Excel file for the Edit in Excel functionality by using the specified web service, and downloads the file.
            </summary>
            <param name="TenantWebService">The web service referenced through Edit in Excel.</param>
            <param name="SearchFilter">The search filter of the user.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel.GenerateExcelWorkBook(Tenant Web Service,Codeunit::System#Integration#Excel#Edit in Excel Filters)">
            <summary>
            Prepares an Excel file for the Edit in Excel functionality by using the specified web service, and downloads the file.
            </summary>
            <param name="TenantWebService">The web service referenced through Edit in Excel.</param>
            <param name="EditinExcelFilters">The filters which will be applied to Edit in Excel.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel.OnEditInExcelWithStructuredFilter(Text[240],JsonObject,JsonObject,Text,Boolean@)">
            <summary>
            This event is called when Edit in Excel is invoked, handling JSON structured filters. It also allows overriding the Edit in Excel functionality.
            It is however recommended to use OnEditInExcelWithFilters below if possible to avoid taking dependency on a given structure.
            </summary>
            <param name="ServiceName">The name of the web service already created for use with Edit in Excel.</param>
            <param name="Filter">Business Central Filter to be applied in Edit in Excel.</param>
            <param name="Payload">Object binding the name of the filtered field with its EdmType</param>
            <param name="SearchFilter">The search filter of the user.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel.OnEditInExcelWithFilters(Text[240],Codeunit::System#Integration#Excel#Edit in Excel Filters@,Text,Boolean@)">
            <summary>
            This event is called when the Edit in Excel system action is invoked or EditInExcel is called in this codeunit.
            It allows modifying filters or overriding the Edit in Excel functionality completely.
            </summary>
            <param name="ServiceName">The name of the web service already created for use with Edit in Excel.</param>
            <param name="EditinExcelFilters">The filters which will be applied to Edit in Excel.</param>
            <param name="SearchFilter">The search filter of the user.</param>
        </member>
        <member name="O:Table::System#Integration#Excel#Edit in Excel Settings">
            <summary>
            Contains settings for Edit in Excel.
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Excel#Edit in Excel Workbook">
            <summary>
            This codeunit provides an interface to create workbooks using the Excel Add-in.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Workbook.Initialize(Text[250])">
            <summary>
            Initialize the workbook. This will setup all required information for the add-in.
            </summary>
            <param name="ServiceName">The name of the service the Excel add-in should connect to. This service must exist and be published.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Workbook.SetFilters(Codeunit::System#Integration#Excel#Edit in Excel Filters)">
            <summary>
            Sets the filters in the Excel Add-in.
            </summary>
            <param name="EditInExcelFilters">Filters to be applied.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Workbook.SetSearchText(Text)">
            <summary>
            Set the search text of the Excel Add-in. This works similar to searching on a page for the specified text.
            </summary>
            <param name="SearchText">The text that should be searched for.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Workbook.AddColumn(Text,Text)">
            <summary>
            Add the specified OdataField with the given caption to the Excel file.
            </summary>
            <param name="Caption">Caption of the field.</param>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Workbook.InsertColumn(Integer,Text,Text)">
            <summary>
            Add the specified OdataField with the given caption to the Excel file at the specified location.
            </summary>
            <param name="Index">Location to insert.</param>
            <param name="Caption">Caption of the field.</param>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Workbook.ImposeExcelOnlineRestrictions">
            <summary>
            When the Excel file is opened in Excel online, there are certain restrictions such as a column limit. This will trim additional columns and impose any future restrictions.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Workbook.ExportToStream:InStream">
            <summary>
            Generate an Excel file and create an InStream with the content.
            </summary>
            <returns>An InStream containing the generated Excel file.</returns>
        </member>
        <member name="O:Codeunit::System#Integration#Excel#Edit in Excel Workbook Impl#">
            <summary>
            This codeunit provides an interface to create Workbook using the Excel Add-in.
            </summary>
        </member>
        <member name="O:Page::System#Integration#Excel#Excel Centralized Depl# Wizard">
            <summary>
            This is a wizard which guides the user through setting up their tenant for using Edit in Excel with Excel add-in installed through centralized deployments.
            </summary>
        </member>
        <member name="O:Enum::System#Integration#Excel#Edit in Excel Edm Type">
            <summary>
            This enum specifies the OData Edm type of the fields added to excel.
            These should generally reflect those in the $metadata document.
            </summary>
        </member>
        <member name="O:Interface::System#Integration#Excel#Edit in Excel Field Filter">
            <summary>
            This codeunit provides an interface to create a filter for a specific field for Edit in Excel.
            </summary>
        </member>
        <member name="M:Interface::System#Integration#Excel#Edit in Excel Field Filter.AddFilterValue(Enum::System#Integration#Excel#Edit in Excel Filter Type,Text):Interface::System#Integration#Excel#Edit in Excel Field Filter">
            <summary>
            Add a filter value
            </summary>
            <param name="EditInExcelFilterType">The filter type, such as Equal, Greater than.</param>
            <param name="FilterValue">The value which the field should be Equal to, Greater than etc.</param>
        </member>
        <member name="M:Interface::System#Integration#Excel#Edit in Excel Field Filter.Get(Integer,Enum::System#Integration#Excel#Edit in Excel Filter Type@,Text@)">
            <summary>
            Get a specific filter
            </summary>
            <param name="Index">The index of the filter.</param>
            <param name="EditInExcelFilterType">The filter type, such as Equal, Greater than.</param>
            <param name="FilterValue">The value which the field should be Equal to, Greater than etc.</param>
        </member>
        <member name="M:Interface::System#Integration#Excel#Edit in Excel Field Filter.Remove(Integer)">
            <summary>
            Remove a specific filter
            </summary>
            <param name="Index">The index of the filter.</param>
        </member>
        <member name="M:Interface::System#Integration#Excel#Edit in Excel Field Filter.Count:Integer">
            <summary>
            Counts the number of filters
            </summary>
            <returns>The number of filters</returns>
        </member>
        <member name="O:Interface::System#Integration#Excel#Edit in Excel Field Filter v2">
            <summary>
            This codeunit provides an interface to create a filter for a specific field for Edit in Excel.
            </summary>
        </member>
        <member name="M:Interface::System#Integration#Excel#Edit in Excel Field Filter v2.AddFilterValueV2(Enum::System#Integration#Excel#Edit in Excel Filter Type,Text):Interface::System#Integration#Excel#Edit in Excel Field Filter v2">
            <summary>
            Add a filter value
            </summary>
            <param name="EditInExcelFilterType">The filter type, such as Equal, Greater than.</param>
            <param name="FilterValue">The value which the field should be Equal to, Greater than etc.</param>
        </member>
        <member name="M:Interface::System#Integration#Excel#Edit in Excel Field Filter v2.Get(Integer,Enum::System#Integration#Excel#Edit in Excel Filter Type@,Text@)">
            <summary>
            Get a specific filter
            </summary>
            <param name="Index">The index of the filter.</param>
            <param name="EditInExcelFilterType">The filter type, such as Equal, Greater than.</param>
            <param name="FilterValue">The value which the field should be Equal to, Greater than etc.</param>
        </member>
        <member name="M:Interface::System#Integration#Excel#Edit in Excel Field Filter v2.GetCollectionType:Enum::System#Integration#Excel#Edit in Excel Filter Collection Type">
            <summary>
            Get the filter collection type
            </summary>
            <returns>The collection type of the filter</returns>
        </member>
        <member name="M:Interface::System#Integration#Excel#Edit in Excel Field Filter v2.Remove(Integer)">
            <summary>
            Remove a specific filter
            </summary>
            <param name="Index">The index of the filter.</param>
        </member>
        <member name="M:Interface::System#Integration#Excel#Edit in Excel Field Filter v2.Count:Integer">
            <summary>
            Counts the number of filters
            </summary>
            <returns>The number of filters</returns>
        </member>
        <member name="O:Enum::System#Integration#Excel#Edit in Excel Filter Collection Type">
            <summary>
            This enum specifies whether filters for the given field are connected or disconnected
            In other words if the filter being added specifies "Field = a&amp;b" (and) or "Field = a|b" (or).
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Excel#Edit in Excel Filters">
            <summary>
            This codeunit provides an interface to create filters for Edit in Excel.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Filters.AddField(Text,Enum::System#Integration#Excel#Edit in Excel Edm Type):Interface::System#Integration#Excel#Edit in Excel Field Filter">
            <summary>
            Add the specified field using 'and' collection type.
            </summary>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
            <param name="EditInExcelEdmType">The Edm type of the OData field as specified in the $metadata document.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Filters.AddFieldV2(Text,Enum::System#Integration#Excel#Edit in Excel Edm Type):Interface::System#Integration#Excel#Edit in Excel Field Filter v2">
            <summary>
            Add the specified field using 'and' collection type.
            </summary>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
            <param name="EditInExcelEdmType">The Edm type of the OData field as specified in the $metadata document.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Filters.AddField(Text,Enum::System#Integration#Excel#Edit in Excel Filter Collection Type,Enum::System#Integration#Excel#Edit in Excel Edm Type):Interface::System#Integration#Excel#Edit in Excel Field Filter">
            <summary>
            Add the specified field with a specified collection type.
            </summary>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
            <param name="EditInExcelFilterOperatorType">Specifies whether filters for this field have 'and' or 'or', such as Field1 = a|b|c (or operator) or Field1 = &lt;a&amp;>b&gt;amp;>c (and operator). Both operators for the same field is currently not supported.</param>
            <param name="EditInExcelEdmType">The Edm type of the OData field as specified in the $metadata document.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Filters.AddFieldV2(Text,Enum::System#Integration#Excel#Edit in Excel Filter Collection Type,Enum::System#Integration#Excel#Edit in Excel Edm Type):Interface::System#Integration#Excel#Edit in Excel Field Filter v2">
            <summary>
            Add the specified field with a specified collection type.
            </summary>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
            <param name="EditInExcelFilterOperatorType">Specifies whether filters for this field have 'and' or 'or', such as Field1 = a|b|c (or operator) or Field1 = &lt;a&amp;>b&gt;amp;>c (and operator). Both operators for the same field is currently not supported.</param>
            <param name="EditInExcelEdmType">The Edm type of the OData field as specified in the $metadata document.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Filters.AddField(Text,Enum::System#Integration#Excel#Edit in Excel Filter Type,Text,Enum::System#Integration#Excel#Edit in Excel Edm Type)">
            <summary>
            Add the specified field with an initial value using 'and' collection type.
            This is mainly intended for fields that only filter on a single value.
            </summary>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
            <param name="EditInExcelFilterType">The filter type, such as Equal, Greater than etc.</param>
            <param name="FilterValue">The value which the field should be Equal to, Greater than etc.</param>
            <param name="EditInExcelEdmType">The Edm type of the OData field as specified in the $metadata document.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Filters.AddFieldV2(Text,Enum::System#Integration#Excel#Edit in Excel Filter Type,Text,Enum::System#Integration#Excel#Edit in Excel Edm Type)">
            <summary>
            Add the specified field with an initial value using 'and' collection type.
            This is mainly intended for fields that only filter on a single value.
            </summary>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
            <param name="EditInExcelFilterType">The filter type, such as Equal, Greater than etc.</param>
            <param name="FilterValue">The value which the field should be Equal to, Greater than etc.</param>
            <param name="EditInExcelEdmType">The Edm type of the OData field as specified in the $metadata document.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Filters.Get(Text):Interface::System#Integration#Excel#Edit in Excel Field Filter">
            <summary>
            Get the field filters for the specified field.
            </summary>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
            <returns></returns>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Filters.GetV2(Text):Interface::System#Integration#Excel#Edit in Excel Field Filter v2">
            <summary>
            Get the field filters for the specified field.
            </summary>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
            <returns></returns>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Filters.Remove(Text):Boolean">
            <summary>
            Removes the filter for the specified field.
            </summary>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
            <returns>Whether the field was removed.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Excel#Edit in Excel Filters.Contains(Text):Boolean">
            <summary>
            Check whether there is a filter for the specified field.
            </summary>
            <param name="ODataFieldName">The OData name of the field referenced.</param>
            <returns>Whether the field has been added. Note this returns true even if there are no filters.</returns>
        </member>
        <member name="O:Codeunit::System#Integration#Excel#Edit in Excel Filters Impl#">
            <summary>
            This codeunit provides an interface to running Edit in Excel for a specific page.
            </summary>
        </member>
        <member name="O:Enum::System#Integration#Excel#Edit in Excel Filter Type">
            <summary>
            This enum specifies the type of filter comparison to perform with the given value. Ex. Field &lt; 1000 is "Less Than".
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Excel#Edit in Excel Fld Filter Impl#">
            <summary>
            This codeunit provides an interface to running Edit in Excel for a specific page.
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Graph#Authorization#Graph Authorization">
            <summary>
            Provides functionality for creating means for authorizing HTTP requests made to Microsoft Graph API.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Authorization#Graph Authorization.CreateAuthorizationWithClientCredentials(Text,Text,SecretText,Text):Interface::System#Integration#Graph#Authorization#Graph Authorization">
            <summary>
            Creates an authorization mechanism with authentication code.
            </summary>
            <param name="AadTenantId">Azure Active Directory tenant ID</param>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>        
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>    
            <param name="Scope">A scope that you want the user to consent to.</param>
            <returns>Codeunit instance implementing authorization interface</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Authorization#Graph Authorization.CreateAuthorizationWithClientCredentials(Text,Text,SecretText,List of [Text]):Interface::System#Integration#Graph#Authorization#Graph Authorization">
            <summary>
            Creates an authorization mechanism with authentication code.
            </summary>
            <param name="AadTenantId">Azure Active Directory tenant ID</param>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>        
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <returns>Codeunit instance implementing authorization interface</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Authorization#Graph Authorization.CreateAuthorizationWithClientCredentials(Text,Text,SecretText,SecretText,Text):Interface::System#Integration#Graph#Authorization#Graph Authorization">
            <summary>
            Creates an authorization mechanism with authentication code.
            </summary>
            <param name="AadTenantId">Azure Active Directory tenant ID</param>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>  
            <param name="Scope">A scope that you want the user to consent to.</param>
            <returns>Codeunit instance implementing authorization interface</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Authorization#Graph Authorization.CreateAuthorizationWithClientCredentials(Text,Text,SecretText,SecretText,List of [Text]):Interface::System#Integration#Graph#Authorization#Graph Authorization">
            <summary>
            Creates an authorization mechanism with authentication code.
            </summary>
            <param name="AadTenantId">Azure Active Directory tenant ID</param>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>  
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <returns>Codeunit instance implementing authorization interface</returns>
        </member>
        <member name="O:Interface::System#Integration#Graph#Authorization#Graph Authorization">
            <summary>
            Common interface for different authorization options.
            </summary>
        </member>
        <member name="M:Interface::System#Integration#Graph#Authorization#Graph Authorization.GetHttpAuthorization:Interface::System#RestClient#Http Authentication">
            <summary>
            Returns an Http Authentication Instance
            </summary> 
        </member>
        <member name="O:Enum::System#Integration#Graph#Graph API Version">
            <summary>
            Defines the available API versions for Microsoft Graph API.
            See: https://learn.microsoft.com/en-us/graph/versioning-and-support#versions
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Graph#Graph Client">
            <summary>
            Exposes functionality to query Microsoft Graph Api
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Client.Initialize(Enum::System#Integration#Graph#Graph API Version,Interface::System#Integration#Graph#Authorization#Graph Authorization)">
            <summary>
            Initializes Microsoft Graph client.
            </summary>
            <remarks>Should be called before any GET,PATCH,POST,DELTE request</remarks>
            <param name="GraphAPIVersion">API Version to use.</param>
            <param name="GraphAuthorizationInstance">The authorization to use.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Client.Initialize(Enum::System#Integration#Graph#Graph API Version,Interface::System#Integration#Graph#Authorization#Graph Authorization,Interface::System#RestClient#Http Client Handler)">
            <summary>
            Initializes Microsoft Graph client.
            </summary>
            <remarks>Should be called before any GET,PATCH,POST,DELTE request</remarks>
            <param name="GraphAPIVersion">API Version to use.</param>
            <param name="GraphAuthorizationInstance">The authorization to use.</param>
            <param name="HttpClientHandlerInstance">The authorization to use.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Client.SetBaseUrl(Text)">
            <summary>
            The base URL to use when constructing the final request URI.
            If not set, the base URL is https://graph.microsoft.com . 
            </summary>
            <remarks>It's optional to set the BaseUrl.</remarks>
            <param name="BaseUrl">A valid URL string</param>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Client.Get(Text,Codeunit::System#RestClient#Http Response Message@):Boolean">
            <summary>
            Get any request to the microsoft graph API
            </summary>
            <remarks>Does not require UI interaction.</remarks>
            <param name="RelativeUriToResource">A relativ uri including the resource segments</param>
            <param name="HttpResponseMessage">The response message object.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
            <error>Authentication failed.</error>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Client.Get(Text,Codeunit::System#Integration#Graph#Graph Optional Parameters,Codeunit::System#RestClient#Http Response Message@):Boolean">
            <summary>
            Get any request to the microsoft graph API
            </summary>
            <remarks>Does not require UI interaction.</remarks>
            <param name="RelativeUriToResource">A relativ uri including the resource segment</param>
            <param name="GraphOptionalParameters">A wrapper for optional header and query parameters</param>
            <param name="HttpResponseMessage">The response message object.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
            <error>Authentication failed.</error>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Client.Post(Text,Codeunit::System#Integration#Graph#Graph Optional Parameters,Codeunit::System#RestClient#Http Content,Codeunit::System#RestClient#Http Response Message@):Boolean">
            <summary>
            Post any request to the microsoft graph API
            </summary>
            <remarks>Does not require UI interaction.</remarks>
            <param name="RelativeUriToResource">A relativ uri including the resource segment</param>
            <param name="GraphOptionalParameters">A wrapper for optional header and query parameters</param>
            <param name="RequestHttpContent">The HttpContent object for the request.</param>
            <param name="HttpResponseMessage">The response message object.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
            <error>Authentication failed.</error>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Client.Patch(Text,Codeunit::System#Integration#Graph#Graph Optional Parameters,Codeunit::System#RestClient#Http Content,Codeunit::System#RestClient#Http Response Message@):Boolean">
            <summary>
            Patch any request to the microsoft graph API
            </summary>
            <remarks>Does not require UI interaction.</remarks>
            <param name="RelativeUriToResource">A relativ uri including the resource segment</param>
            <param name="GraphOptionalParameters">A wrapper for optional header and query parameters</param>
            <param name="RequestHttpContent">The HttpContent object for the request.</param>
            <param name="HttpResponseMessage">The response message object.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
            <error>Authentication failed.</error>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Client.Put(Text,Codeunit::System#Integration#Graph#Graph Optional Parameters,Codeunit::System#RestClient#Http Content,Codeunit::System#RestClient#Http Response Message@):Boolean">
            <summary>
            Put any request to the microsoft graph API
            </summary>
            <remarks>Does not require UI interaction.</remarks>
            <param name="RelativeUriToResource">A relativ uri including the resource segment</param>
            <param name="GraphOptionalParameters">A wrapper for optional header and query parameters</param>
            <param name="RequestHttpContent">The HttpContent object for the request.</param>
            <param name="HttpResponseMessage">The response message object.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
            <error>Authentication failed.</error>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Client.Delete(Text,Codeunit::System#Integration#Graph#Graph Optional Parameters,Codeunit::System#RestClient#Http Response Message@):Boolean">
            <summary>
            Send a DELETE request to the microsoft graph API
            </summary>
            <remarks>Does not require UI interaction.</remarks>
            <param name="RelativeUriToResource">A relativ uri to the resource - e.g. /users/{id|userPrincipalName}.</param>
            <param name="GraphOptionalParameters">A wrapper for optional header and query parameters</param>
            <param name="HttpResponseMessage">The response message object.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
            <error>Authentication failed.</error>
        </member>
        <member name="O:Enum::System#Integration#Graph#Graph ConflictBehavior">
            <summary>
            The conflict resolution behavior for actions that create a new item.
            You can use the values fail, replace, or rename. 
            The default for PUT is replace. 
            An item will never be returned with this annotation. Write-only.
            See: https://learn.microsoft.com/en-us/graph/api/resources/driveitem?view=graph-rest-1.0#instance-attributes
            </summary>
        </member>
        <member name="O:Enum::System#Integration#Graph#Graph OData Query Parameter">
            <summary>
            A Microsoft Graph API operation might support one or more of the following OData system query options.
            These query options are compatible with the OData V4 query language and are supported only in GET operations.
            See: hhttps://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#odata-system-query-options
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph OData Query Parameter.count">
            <summary>
            Query Parameter '$count'.
            see: https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#count-parameter
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph OData Query Parameter.expand">
            <summary>
            OData Query Parameter '$expand'.
            see: https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#expand-parameter
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph OData Query Parameter.filter">
            <summary>
            OData Query Parameter '$filter'.
            see: https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#filter-parameter
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph OData Query Parameter.format">
            <summary>
            OData Query Parameter '$format'.
            see: https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#format-parameter
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph OData Query Parameter.orderby">
            <summary>
            OData Query Parameter '$orderBy'.
            see: https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#orderby-parameter
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph OData Query Parameter.search">
            <summary>
            OData Query Parameter '$search'.
            see: https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#search-parameter
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph OData Query Parameter.select">
            <summary>
            OData Query Parameter '$select'.
            see: https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#select-parameter
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph OData Query Parameter.skip">
            <summary>
            OData Query Parameter '$skip'.
            see: https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#skip-parameter
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph OData Query Parameter.skiptoken">
            <summary>
            OData Query Parameter '$skipToken'.
            see: https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#skiptoken-parameter
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph OData Query Parameter.top">
            <summary>
            OData Query Parameter '$top'.
            see: https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#top-parameter
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Graph#Graph Optional Parameters">
            <summary>
            Holder for the optional Microsoft Graph HTTP headers and URL parameters.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Optional Parameters.SetIfMatch(Text)">
            <summary>
            Sets the value for 'IF-Match' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Optional Parameters.SetIfNoneMatchRequestHeader(Text)">
            <summary>
            Sets the value for 'If-None-Match' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Optional Parameters.SetPreferRequestHeader(Text)">
            <summary>
            Sets the value for 'Prefer' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Optional Parameters.SetConsistencyLevelRequestHeader(Text)">
            <summary>
            Sets the value for 'ConsistencyLevel' HttpHeader for a request.
            </summary>
            <param name="Value">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Optional Parameters.SetRequestHeader(Enum::System#Integration#Graph#Graph Request Header,Text)">
            <summary>
            Sets the value for a HttpHeader for a request.
            </summary>
            <param name="GraphRequestHeader">The Request Header</param>
            <param name="HeaderValue">Text value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Optional Parameters.SetMicrosftGraphConflictBehavior(Enum::System#Integration#Graph#Graph ConflictBehavior)">
            <summary>
            Sets the value for '@microsoft.graph.conflictBehavior' HttpHeader for a request.
            </summary>
            <param name="GraphConflictBehavior">Enum "Graph ConflictBehavior" value specifying the HttpHeader value</param>
        </member>
        <member name="M:Codeunit::System#Integration#Graph#Graph Optional Parameters.SetODataQueryParameter(Enum::System#Integration#Graph#Graph OData Query Parameter,Text)">
            <summary>
            Sets the value for an OData Query Parameter
            see: https://learn.microsoft.com/en-us/graph/query-parameters?tabs=http#odata-system-query-options
            </summary>
            <param name="GraphODataQueryParameter">The OData query parameter</param>
            <param name="ODataQueryParameterValue">Text value specifying the query parameter</param>
        </member>
        <member name="O:Enum::System#Integration#Graph#Graph Request Header">
            <summary>
            The supported request header for the Microsoft Graph API
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph Request Header.If-Match">
            <summary>
            If-Match Request Header
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph Request Header.If-None-Match">
            <summary>
            If-None-Match Request Header
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph Request Header.Prefer">
            <summary>
            Prefer Request Header
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Graph#Graph Request Header.ConsistencyLevel">
            <summary>
            ConsistencyLevel Request Header
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Sharepoint#SharePoint Client">
            <summary>
            Provides functionality for interacting with SharePoint REST API
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.Initialize(Text,Interface::System#Integration#Sharepoint#SharePoint Authorization)">
            <summary>
            Initializes SharePoint client.
            </summary>
            <param name="BaseUrl">SharePoint URL to use.</param>
            <param name="Authorization">The authorization to use.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.Initialize(Text,Text,Interface::System#Integration#Sharepoint#SharePoint Authorization)">
            <summary>
            Initializes SharePoint client.
            </summary>
            <param name="BaseUrl">SharePoint URL to use.</param>
            <param name="Namespace">Namespace to use.</param>
            <param name="Authorization">The authorization to use.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.GetDiagnostics:Interface::System#Integration#Sharepoint#HTTP Diagnostics">
            <summary>
            Returns detailed information on last API call.
            </summary>
            <returns>Codeunit holding http resonse status, reason phrase, headers and possible error information for tha last API call</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.GetLists(SharePoint List@):Boolean">
            <summary>
            Gets all lists on the given site.
            </summary>
            <param name="SharePointList">Collection of the result (temporary record).</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.GetListItems(Text,SharePoint List Item@):Boolean">
            <summary>
            Gets all list items for the given list.
            </summary>
            <raises>ProcessSharePointListItemMetadata</raises>
            <param name="ListTitle">The title of the list/</param>
            <param name="SharePointListItem">Collection of the result (temporary record).</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.GetListItems(Guid,SharePoint List Item@):Boolean">
            <summary>
            Gets all list items for the given list.
            </summary>
            <raises>ProcessSharePointListItemMetadata</raises>
            <param name="ListId">The GUID of the list/</param>
            <param name="SharePointListItem">Collection of the result (temporary record).</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.GetListItemAttachments(Text,Integer,SharePoint List Item Atch@):Boolean">
            <summary>
            Gets all attachments for the given list item.
            </summary>
            <param name="ListTitle">The title of the list</param>
            <param name="ListItemId">Unique id of the item within the list. </param>
            <param name="SharePointListItemAtch">Collection of the result (temporary record).</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.GetListItemAttachments(Guid,Integer,SharePoint List Item Atch@):Boolean">
            <summary>
            Gets all attachments for the given list item.
            </summary>
            <param name="ListId">The GUID of the list</param>
            <param name="ListItemId">Unique id of the item within the list. </param>
            <param name="SharePointListItemAtch">Collection of the result (temporary record).</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DownloadListItemAttachmentContent(Text,Integer,Text):Boolean">
            <summary>
            Downloads the specified attachment file to the client.
            </summary>
            <param name="ListTitle">The title of the list</param>
            <param name="ListItemId">Unique id of the item within the list. </param>
            <param name="FileName">Name to be given to the file on the client side. Does not need to match the server side name.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DownloadListItemAttachmentContent(Guid,Integer,Text):Boolean">
            <summary>
            Downloads the specified attachment file to the client.
            </summary>
            <param name="ListId">The GUID of the list</param>
            <param name="ListItemId">Unique id of the item within the list. </param>
            <param name="FileName">Name to be given to the file on the client side. Does not need to match the server side name.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DownloadListItemAttachmentContent(Text):Boolean">
            <summary>
            Downloads the specified attachment file to the client.
            </summary>
            <remarks>The server side file name will be used.</remarks>
            <param name="OdataId">The odata.id parameter of the attachment entity.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.CreateListItemAttachment(Text,Integer,SharePoint List Item Atch@):Boolean">
             <summary>
             Creates the list item attachment for given item.
             </summary>
             <remarks>Requires UI interaction to pick a file.</remarks>
             <param name="ListTitle">The title of the list.</param>
             <param name="ListItemId">Unique id of the item within the list. </param>
             <param name="SharePointListItemAtch">Collection of the result (temporary record). Always one element.</param>
            
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.CreateListItemAttachment(Guid,Integer,SharePoint List Item Atch@):Boolean">
            <summary>
            Creates the list item attachment for given item.
            </summary>
            <remarks>Requires UI interaction to pick a file.</remarks>
            <param name="ListID">The GUID of the list.</param>
            <param name="ListItemId">Unique id of the item within the list. </param>
            <param name="SharePointListItemAtch">Collection of the result (temporary record). Always one element.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.CreateListItemAttachment(Text,Integer,Text,InStream@,SharePoint List Item Atch@):Boolean">
            <summary>
            Creates a list item attachment for specific list item.
            </summary>
            <remarks>Does not require UI interaction.</remarks>
            <param name="ListTitle">The title of the list.</param>
            <param name="ListItemId">Unique id of the item within the list. </param>
            <param name="FileName">File name to use on SharePoint.</param>
            <param name="FileInStream">File stream to upload.</param>
            <param name="SharePointListItemAtch">Collection of the result (temporary record). Always one element.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.CreateListItemAttachment(Guid,Integer,Text,InStream@,SharePoint List Item Atch@):Boolean">
            <summary>
            Creates a list item attachment for specific list item.
            </summary>
            <remarks>Does not require UI interaction.</remarks>
            <param name="ListID">The GUID of the list.</param>
            <param name="ListItemId">Unique id of the item within the list. </param>
            <param name="FileName">File name to use on SharePoint.</param>
            <param name="FileInStream">File stream to upload.</param>
            <param name="SharePointListItemAtch">Collection of the result (temporary record). Always one element.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.CreateList(Text,Text,SharePoint List@):Boolean">
            <summary>
            Creates a new list.
            </summary>
            <param name="ListTitle">Title for the new list.</param>
            <param name="ListDescription">Description for the new list.</param>
            <param name="SharePointList">Collection of the result (temporary record). Always one element.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.CreateListItem(Text,Text,Text,SharePoint List Item@):Boolean">
            <summary>
            Creates a new list item in specific list.
            </summary>
            <raises>ProcessSharePointListItemMetadata</raises>
            <param name="ListTitle">The title of the list.</param>
            <param name="ListItemEntityTypeFullName">The Entity Type for the list. Parameter can be found on a list object (ListItemEntityType).</param>
            <param name="ListItemTitle">The title of the new list item.</param>
            <param name="SharePointListItem">Collection of the result (temporary record).</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.CreateListItem(Guid,Text,Text,SharePoint List Item@):Boolean">
            <summary>
            Creates a new list item in specific list.
            </summary>
            <raises>ProcessSharePointListItemMetadata</raises>
            <param name="ListId">The GUID of the list.</param>
            <param name="ListItemEntityTypeFullName">The Entity Type for the list. Parameter can be found on a list object (ListItemEntityType).</param>
            <param name="ListItemTitle">The title of the new list item.</param>
            <param name="SharePointListItem">Collection of the result (temporary record).</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.GetSubFoldersByServerRelativeUrl(Text,SharePoint Folder@):Boolean">
            <summary>
            Lists all subfolders in the given folder.
            </summary>
            <remarks>Only top level subfolders are included.</remarks>
            <param name="ServerRelativeUrl">URL of the parent folder.</param>
            <param name="SharePointFolder">Collection of the result (temporary record).</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.GetFolderFilesByServerRelativeUrl(Text,SharePoint File@):Boolean">
            <summary>
            Lists all files in the given folder.
            </summary>
            <raises>ProcessSharePointFileMetadata</raises>
            <param name="ServerRelativeUrl">URL of the parent folder.</param>
            <param name="SharePointFile">Collection of the result (temporary record).</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.GetFolderFilesByServerRelativeUrl(Text,SharePoint File@,Boolean):Boolean">
            <summary>
            Lists all files in the given folder.
            </summary>
            <raises>ProcessSharePointFileMetadata</raises>
            <param name="ServerRelativeUrl">URL of the parent folder.</param>
            <param name="SharePointFile">Collection of the result (temporary record).</param>
            <param name="ListAllFields">Include metadata in results.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.GetFileByServerRelativeUrl(Text,SharePoint File@,Boolean):Boolean">
            <summary>
            Gets file data by server relative url
            </summary>
            <raises>ProcessSharePointFileMetadata</raises>
            <param name="ServerRelativeUrl">URL of the file.</param>
            <param name="SharePointFile">Collection of the result (temporary record).</param>
            <param name="ListAllFields">Include metadata in results.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DownloadFileContent(Text,InStream@):Boolean">
            <summary>
            Downloads a file to an InStream.
            </summary>
            <param name="OdataId">The odata.id parameter of the file entity.</param>
            <param name="FileInStream">The InStream that will be populated with the file content.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DownloadFileContent(Text,Text):Boolean">
            <summary>
            Downloads a file to the client.
            </summary>
            <param name="OdataId">The odata.id parameter of the file entity.</param>
            <param name="FileName">Name to be given to the file on the client side. Does not need to match the server side name.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DownloadFileContent(Text,Codeunit::System#Utilities#Temp Blob@):Boolean">
            <summary>
            Downloads a file to a TempBlob.
            </summary>
            <param name="OdataId">The odata.id parameter of the file entity.</param>
            <param name="TempBlob">The TempBlob that will be populated with the file content.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DownloadFileContentByServerRelativeUrl(Text,InStream@):Boolean">
            <summary>
            Downloads a file to an InStream.
            </summary>
            <param name="ServerRelativeUrl">URL of the file to Download.</param>
            <param name="FileInStream">The InStream that will be populated with the file content.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DownloadFileContentByServerRelativeUrl(Text,Text):Boolean">
            <summary>
            Downloads a file to the client.
            </summary>
            <param name="ServerRelativeUrl">URL of the file to Download.</param>
            <param name="FileName">Name to be given to the file on the client side. Does not need to match the server side name.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DownloadFileContentByServerRelativeUrl(Text,Codeunit::System#Utilities#Temp Blob@):Boolean">
            <summary>
            Downloads a file to a TempBlob.
            </summary>
            <param name="ServerRelativeUrl">URL of the file to Download.</param>
            <param name="TempBlob">The TempBlob that will be populated with the file content.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DeleteFile(Text):Boolean">
            <summary>
            Deletes a file.
            </summary>
            <param name="OdataId">The odata.id parameter of the file entity.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DeleteFileByServerRelativeUrl(Text):Boolean">
            <summary>
            Deletes a file.
            </summary>
            <param name="ServerRelativeUrl">URL of the file to delete.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.GetDocumentLibraryRootFolder(Text,SharePoint Folder@):Boolean">
            <summary>
            Gets root folder for the list entity (Document Library).
            </summary>
            <remarks>See "Is Catalog" parameter of the list.</remarks>
            <param name="OdataId">The odata.id parameter of the list entity.</param>
            <param name="SharePointFolder">Collection of the result (temporary record). Always one element.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.CreateFolder(Text,SharePoint Folder@):Boolean">
            <summary>
            Creates a new folder.
            </summary>
            <remarks>Create subfolders by manipulating URL.</remarks>
            <param name="ServerRelativeUrl">URL of the new folder.</param>
            <param name="SharePointFolder">Collection of the result (temporary record). Always one element.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.FolderExistsByServerRelativeUrl(Text):Boolean">
            <summary>
            Checks if a folder exists.
            </summary>
            <param name="ServerRelativeUrl">URL of the folder to check.</param>
            <returns>True if the folder exists; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DeleteFolder(Text):Boolean">
            <summary>
            Deletes a folder.
            </summary>
            <param name="OdataId">The odata.id parameter of the folder entity.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.DeleteFolderByServerRelativeUrl(Text):Boolean">
            <summary>
            Deletes a folder.
            </summary>
            <param name="ServerRelativeUrl">URL of the folder to delete.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.AddFileToFolder(Text,SharePoint File@):Boolean">
            <summary>
            Adds a file to specific folder.
            </summary>
            <raises>ProcessSharePointFileMetadata</raises>
            <remarks>Requires UI interaction to pick a file.</remarks>
            <param name="ServerRelativeUrl">URL of the parent folder.</param>
            <param name="SharePointFile">Collection of the result (temporary record). Always one element.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.AddFileToFolder(Text,SharePoint File@,Boolean):Boolean">
            <summary>
            Adds a file to specific folder.
            </summary>
            <raises>ProcessSharePointFileMetadata</raises>
            <remarks>Requires UI interaction to pick a file.</remarks>
            <param name="ServerRelativeUrl">URL of the parent folder.</param>
            <param name="SharePointFile">Collection of the result (temporary record). Always one element.</param>
            <param name="ListAllFields">Include metadata in results.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.AddFileToFolder(Text,Text,InStream@,SharePoint File@):Boolean">
            <summary>
            Adds a file to specific folder.
            </summary>
            <raises>ProcessSharePointFileMetadata</raises>
            <remarks>Does not require UI interaction.</remarks>
            <param name="ServerRelativeUrl">URL of the parent folder.</param>
            <param name="FileName">File name to use on SharePoint.</param>
            <param name="FileInStream">File stream to upload.</param>
            <param name="SharePointFile">Collection of the result (temporary record). Always one element.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.AddFileToFolder(Text,Text,InStream@,SharePoint File@,Boolean):Boolean">
            <summary>
            Adds a file to specific folder.
            </summary>
            <raises>ProcessSharePointFileMetadata</raises>
            <remarks>Does not require UI interaction.</remarks>
            <param name="ServerRelativeUrl">URL of the parent folder.</param>
            <param name="FileName">File name to use on SharePoint.</param>
            <param name="FileInStream">File stream to upload.</param>
            <param name="SharePointFile">Collection of the result (temporary record). Always one element.</param>
            <param name="ListAllFields">Include metadata in results.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.UpdateListItemMetaDataField(Text,Integer,Text,Text,Text):Boolean">
            <summary>
            Updates metadata field for list item.
            </summary>
            <param name="ListTitle">The title of the list.</param>
            <param name="ItemId">The GUID of the item.</param>
            <param name="ListItemEntityTypeFullName">The Entity Type for the list. Parameter can be found on a list object (ListItemEntityType).</param>
            <param name="FieldName">The name of the metadata field.</param>
            <param name="FieldValue">Value.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Client.UpdateListItemMetaDataField(Guid,Integer,Text,Text,Text):Boolean">
            <summary>
            Updates metadata field for list item.
            </summary>
            <param name="ListId">The GUID of the list.</param>
            <param name="ItemId">The GUID of the item.</param>
            <param name="ListItemEntityTypeFullName">The Entity Type for the list. Parameter can be found on a list object (ListItemEntityType).</param>
            <param name="FieldName">The name of the metadata field.</param>
            <param name="FieldValue">Value.</param>
            <returns>True if the operation was successful; otherwise - false.</returns>
        </member>
        <member name="O:Codeunit::System#Integration#Sharepoint#SharePoint Auth#">
            <summary>
            Provides functionality for creating means for authorizing HTTP requests made to SharePoint REST API.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Auth#.CreateAuthorizationCode(Text,Text,Text,Text):Interface::System#Integration#Sharepoint#SharePoint Authorization">
            <summary>
            Creates an authorization mechanism with authentication code.
            </summary>
            <param name="EntraTenantId">Microsoft Entra tenant ID</param>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="Scope">A scope that you want the user to consent to.</param>
            <returns>Codeunit instance implementing authorization interface</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Auth#.CreateAuthorizationCode(Text,Text,Text,List of [Text]):Interface::System#Integration#Sharepoint#SharePoint Authorization">
            <summary>
            Creates an authorization mechanism with authentication code.
            </summary>
            <param name="EntraTenantId">Microsoft Entra tenant ID</param>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <returns>Codeunit instance implementing authorization interface</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Auth#.CreateAuthorizationCode(Text,Text,SecretText,Text):Interface::System#Integration#Sharepoint#SharePoint Authorization">
            <summary>
            Creates an authorization mechanism with authentication code.
            </summary>
            <param name="EntraTenantId">Microsoft Entra tenant ID</param>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="Scope">A scope that you want the user to consent to.</param>
            <returns>Codeunit instance implementing authorization interface</returns>    
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Auth#.CreateAuthorizationCode(Text,Text,SecretText,List of [Text]):Interface::System#Integration#Sharepoint#SharePoint Authorization">
            <summary>
            Creates an authorization mechanism with authentication code.
            </summary>
            <param name="EntraTenantId">Microsoft Entra tenant ID</param>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>
            <param name="ClientSecret">The Application (client) secret configured in the "Azure Portal - Certificates &amp; Secrets".</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <returns>Codeunit instance implementing authorization interface</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Auth#.CreateClientCredentials(Text,Text,SecretText,SecretText,Text):Interface::System#Integration#Sharepoint#SharePoint Authorization">
            <summary>
            Creates an authorization mechanism with the Client Credentials Grant Flow.
            </summary>
            <param name="AadTenantId">Azure Active Directory tenant ID</param>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>        
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="Scope">A scope that you want the user to consent to.</param>
            <returns>Codeunit instance implementing authorization interface</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Auth#.CreateClientCredentials(Text,Text,SecretText,SecretText,List of [Text]):Interface::System#Integration#Sharepoint#SharePoint Authorization">
            <summary>
            Creates an authorization mechanism with the Client Credentials Grant Flow.
            </summary>
            <param name="AadTenantId">Azure Active Directory tenant ID</param>
            <param name="ClientId">The Application (client) ID that the Azure portal - App registrations experience assigned to your app.</param>        
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="Scopes">A list of scopes that you want the user to consent to.</param>
            <returns>Codeunit instance implementing authorization interface</returns>
        </member>
        <member name="O:Interface::System#Integration#Sharepoint#SharePoint Authorization">
            <summary>
            Common interface for different authorization options.
            </summary>
        </member>
        <member name="M:Interface::System#Integration#Sharepoint#SharePoint Authorization.Authorize(HttpRequestMessage@)">
            <summary>
            Authorizes an HTTP request by providing the needed authorization information to it.
            </summary>
            <param name="HttpRequest">The HTTP request to authorize.</param>
        </member>
        <member name="O:Interface::System#Integration#Sharepoint#HTTP Diagnostics">
            <summary>
            Interface to get diagnostics from an HTTP call.
            </summary>
        </member>
        <member name="M:Interface::System#Integration#Sharepoint#HTTP Diagnostics.IsSuccessStatusCode:Boolean">
            <summary>
            Gets reponse details.
            </summary>
            <returns>HttpResponseMessage.IsSuccessStatusCode</returns>
        </member>
        <member name="M:Interface::System#Integration#Sharepoint#HTTP Diagnostics.GetHttpStatusCode:Integer">
            <summary>
            Gets response details.
            </summary>
            <returns>HttpResponseMessage.StatusCode</returns>
        </member>
        <member name="M:Interface::System#Integration#Sharepoint#HTTP Diagnostics.GetHttpRetryAfter:Integer">
            <summary>
            Gets response details.
            </summary>
            <returns>Retry-after header value</returns>
        </member>
        <member name="M:Interface::System#Integration#Sharepoint#HTTP Diagnostics.GetErrorMessage:Text">
            <summary>
            Gets reponse details
            </summary>
            <returns>Error message</returns>
        </member>
        <member name="M:Interface::System#Integration#Sharepoint#HTTP Diagnostics.GetResponseReasonPhrase:Text">
            <summary>
            Gets response details.
            </summary>
            <returns>HttpResponseMessage.ResponseReasonPhrase</returns>
        </member>
        <member name="O:Codeunit::System#Integration#Sharepoint#SharePoint Diagnostics">
            <summary>
            Stores detailed information about failed api call
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Diagnostics.IsSuccessStatusCode:Boolean">
            <summary>
            Gets reponse details.
            </summary>
            <returns>HttpResponseMessage.IsSuccessStatusCode</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Diagnostics.GetHttpStatusCode:Integer">
            <summary>
            Gets response details.
            </summary>
            <returns>HttpResponseMessage.StatusCode</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Diagnostics.GetHttpRetryAfter:Integer">
            <summary>
            Gets response details.
            </summary>
            <returns>Retry-after header value</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Diagnostics.GetErrorMessage:Text">
            <summary>
            Gets reponse details
            </summary>
            <returns>Error message</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Sharepoint#SharePoint Diagnostics.GetResponseReasonPhrase:Text">
            <summary>
            Gets response details.
            </summary>
            <returns>HttpResponseMessage.ResponseReasonPhrase</returns>
        </member>
        <member name="O:Table::System#Integration#Sharepoint#SharePoint File">
            <summary>
            Holds information about file entity.
            </summary>
        </member>
        <member name="O:Table::System#Integration#Sharepoint#SharePoint Folder">
            <summary>
            Holds information about folder entity.
            </summary>
        </member>
        <member name="O:Table::System#Integration#Sharepoint#SharePoint List">
            <summary>
            Holds information about list entity.
            </summary>
        </member>
        <member name="O:Table::System#Integration#Sharepoint#SharePoint List Item">
            <summary>
            Holds information about list item entity.
            </summary>
        </member>
        <member name="O:Table::System#Integration#Sharepoint#SharePoint List Item Atch">
            <summary>
            Holds information about list item attachment entity.
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Word#Word Template">
            <summary>
            Exposes functionality to create and consume Word templates.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.DownloadTemplate">
            <summary>
            Downloads the set template.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.DownloadDocument">
            <summary>
            Downloads the resulting document.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.GetTemplate(InStream@)">
            <summary>
            Gets an InStream for the template.
            </summary>
            <param name="InStream">Out parameter, the InStream to set.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.GetDocument(InStream@)">
            <summary>
            Gets an InStream for the resulting document.
            </summary>
            <param name="DocumentInStream">Out parameter, the InStream to set.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.GetDocumentSize:Integer">
            <summary>
            Gets size for the resulting document.
            </summary>
            <returns>The size for the resulting document in bytes.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Create">
            <summary>
            Creates a template with the fields of a table. The table is selected by the user via a popup window.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Create(Integer)">
            <summary>
            Creates a template with the fields of the given table.
            </summary>
            <param name="TableId">Specifies the ID of the table whose fields will be used to populate the template.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Create(Integer,List of [Integer],List of [Code])">
            <summary>
            Creates a template with the fields from a selected table and a list of related table IDs.
            </summary>
            <param name="TableId">Specifies the ID of the table from which fields will be used to insert data in the template.</param>
            <param name="RelatedTableIds">Specifies the IDs of tables that are related to the selected table. Fields from these tables will also be used to insert data in the template.</param>
            <param name="RelatedTableCodes">Specifies the IDs for each related table. The IDs must be the same length as the RelatedTableIds, and be between 1 and 5 characters.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Create(List of [Text])">
            <summary>
            Creates a template with given merge fields.
            </summary>
            <param name="MergeFields">Names of mail merge fields to be available in the template.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Load(Code[30])">
            <summary>
            Loads the template to be used for merging.
            </summary>
            <param name="WordTemplateCode">The code of the Word template to use.</param>
            <error>The document format is not recognized or not supported.</error>
            <error>The document appears to be corrupted and cannot be loaded.</error>
            <error>There is an input/output exception.</error>
            <error>The document is encrypted.</error>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Load(InStream)">
            <summary>
            Loads the template to be used for merging.
            </summary>
            <param name="WordTemplateStream">InStream of the Word template to use.</param>
            <error>The document format is not recognized or not supported.</error>
            <error>The document appears to be corrupted and cannot be loaded.</error>
            <error>There is an input/output exception.</error>
            <error>The document is encrypted.</error>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Load(InStream,Code[30])">
            <summary>
            Loads the template to be used for merging from the stream and additional related fields from the WordTemplateCode which is used as the base.
            </summary>
            <param name="WordTemplateStream">InStream of the Word template to use.</param>
            <param name="WordTemplateCode">The Word template which contains the related tables and fields.</param>
            <error>The document format is not recognized or not supported.</error>
            <error>The document appears to be corrupted and cannot be loaded.</error>
            <error>There is an input/output exception.</error>
            <error>The document is encrypted.</error>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Merge(Dictionary of [Text,Text])">
            <summary>
            Performs mail merge on set template and given data. Output document is of type .docx.
            </summary>
            <param name="Data">Input data to be merged into the document. The key is the merge field name and value is the replacement value.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Merge(Dictionary of [Text,Text],Enum::System#Integration#Word#Word Templates Save Format)">
            <summary>
            Performs mail merge on set template and given data. Output document type is of specified save format.
            </summary>
            <param name="Data">Input data to be merged into the document. The key is the merge field name and value is the replacement value.</param>
            <param name="SaveFormat">Format of the document to generate.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Merge(Dictionary of [Text,Text],Enum::System#Integration#Word#Word Templates Save Format,Boolean)">
            <summary>
            Performs mail merge on set template and given data. Output document type is of specified save format.
            </summary>
            <param name="Data">Input data to be merged into the document. The key is the merge field name and value is the replacement value.</param>
            <param name="SaveFormat">Format of the document to generate.</param>
            <param name="EditDoc">Edit document in Word after merging. Only available if OneDrive has been enabled. If true, the default value for conflict behaviors is to replace the existing file in OneDrive.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Merge(Dictionary of [Text,Text],Enum::System#Integration#Word#Word Templates Save Format,Boolean,Enum::System#Integration#Doc# Sharing Conflict Behavior)">
            <summary>
            Performs mail merge on set template and given data. Output document type is of specified save format.
            </summary>
            <param name="Data">Input data to be merged into the document. The key is the merge field name and value is the replacement value.</param>
            <param name="SaveFormat">Format of the document to generate.</param>
            <param name="EditDoc">Edit document in Word after merging. Only available if OneDrive has been enabled.</param>
            <param name="DocSharingConflictBehavior">The behavior when the file being uploaded has a conflict. Only used if EditDoc is true.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Merge(Boolean)">
            <summary>
            Performs mail merge on set template and data taken from the Record associated with the Document. Output document is of type .docx.
            </summary>
            <param name="SplitDocument">Specifies whether a separate document per record should be created.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Merge(Boolean,Enum::System#Integration#Word#Word Templates Save Format)">
            <summary>
            Performs mail merge on set template and data taken from the Record associated with the Document. Output document type is of specified save format.
            </summary>
            <param name="SplitDocument">Specifies whether a separate document per record should be created.</param>
            <param name="SaveFormat">Format of the document to generate.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Merge(Variant,Boolean)">
            <summary>
            Performs mail merge on set template and data taken from the given Record. Output document is of type .docx.
            </summary>
            <param name="RecordVariant">The Record to take data from, any filters on the Record will be respected.</param>
            <param name="SplitDocument">Specifies whether a separate document per record should be created.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Merge(Variant,Boolean,Enum::System#Integration#Word#Word Templates Save Format)">
            <summary>
            Performs mail merge on set template and data taken from the given Record. Output document type is of specified save format.
            </summary>
            <param name="RecordVariant">The Record to take data from, any filters on the Record will be respected.</param>
            <param name="SplitDocument">Specifies whether a separate document per record should be created.</param>
            <param name="SaveFormat">Format of the document to generate.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Merge(Variant,Boolean,Enum::System#Integration#Word#Word Templates Save Format,Boolean)">
            <summary>
            Performs mail merge on set template and data taken from the given Record. Output document type is of specified save format.
            </summary>
            <param name="RecordVariant">The Record to take data from, any filters on the Record will be respected.</param>
            <param name="SplitDocument">Specifies whether a separate document per record should be created.</param>
            <param name="SaveFormat">Format of the document to generate.</param>
            <param name="EditDoc">Edit document in Word after merging. Only available if OneDrive has been enabled.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.Merge(Variant,Boolean,Enum::System#Integration#Word#Word Templates Save Format,Boolean,Enum::System#Integration#Doc# Sharing Conflict Behavior)">
            <summary>
            Performs mail merge on set template and data taken from the given Record. Output document type is of specified save format.
            </summary>
            <param name="RecordVariant">The Record to take data from, any filters on the Record will be respected.</param>
            <param name="SplitDocument">Specifies whether a separate document per record should be created.</param>
            <param name="SaveFormat">Format of the document to generate.</param>
            <param name="EditDoc">Edit document in Word after merging. Only available if OneDrive has been enabled.</param>
            <param name="DocSharingConflictBehavior">The behavior when the file being uploaded has a conflict. Only used if EditDoc is true.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.AddTable(Integer)">
            <summary>
            Add a table to the list of available tables for Word templates.
            </summary>
            <param name="TableID">The ID of the table to add.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.GetTableId:Integer">
            <summary>
            Get the table ID for this Template.
            </summary>
            <remarks>The function Load needs to be called before this function.</remarks>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.AddRelatedTable(Code[30],Code[5],Integer,Integer,Integer):Boolean">
            <summary>
            Add related table.
            </summary>
            <param name="WordTemplateCode">The code of an existing parent Word template.</param>
            <param name="RelatedCode">The code of the related table to add.</param>
            <param name="TableID">The ID of the parent Word template.</param>
            <param name="RelatedTableID">The ID of the related table to add.</param>
            <param name="FieldNo">The field no. of the parent table that references the related table.</param>
            <remarks>The function shows a message if the related code or table ID is already used for the parent table</remarks>
            <returns>True if the related table was added, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.SetDefaultFields(Code[30],Integer)">
            <summary>
            Set the default fields for the table.
            </summary>
            <param name="WordTemplateCode">The code of an existing parent Word template.</param>
            <param name="RelatedTableID">The ID of the table.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.AddUnrelatedTable(Code[30],Code[5],Integer,Guid):Boolean">
            <summary>
            Add unrelated table.
            </summary>
            <param name="WordTemplateCode">The code of an existing parent Word template.</param>
            <param name="PrefixCode">The code of the unrelated table to add.</param>
            <param name="UnrelatedTableId">The ID of the unrelated table to add.</param>
            <param name="RecordSystemId">The system id of the record to add.</param>
            <returns>True if the unrelated table was added, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.SetExcludedFields(Code[30],Integer,List of [Text])">
            <summary>
            Set the fields to be excluded from the word template.
            </summary>
            <param name="WordTemplateCode">The code of an existing parent Word template.</param>
            <param name="TableId">The ID of the table.</param>
            <param name="ExcludeFieldNames">The fields that should be excluded.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.GetExcludedFields(Code[30],Integer):List of [Text]">
            <summary>
            Get the fields to be excluded from the word template.
            </summary>
            <param name="WordTemplateCode">The code of an existing parent Word template.</param>
            <param name="TableId">The ID of the table.</param>
            <returns>The fields that are being excluded.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.GetCustomTableFields(Integer):List of [Text]">
            <summary>
            Get a list of all current custom table fields for a given table.
            </summary>
            <param name="TableId">The ID of the table.</param>
            <returns>The names of the custom fields.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.GetSupportedTableFields(Integer):List of [Text]">
            <summary>
            Get a list of all supported table fields. This list does not include custom fields.
            </summary>
            <param name="TableId">The ID of the table.</param>
            <returns>The names of all fields that are supported on the table.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.IsFieldSupported(Field):Boolean">
            <summary>
            Determine whether a field is supported for Word Templates.
            </summary>
            <param name="Field">The field of a record.</param>
            <returns>Whether the given field is supported for Word Templates.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.RemoveTable(Code[30],Integer):Boolean">
            <summary>
            Remove a related or unrelated table.
            An error is thrown if the table has any children, these must be removed first.
            </summary>
            <param name="WordTemplateCode">The code of the parent Word template.</param>
            <param name="TableId">The ID of the table to remove. This table must not have tables depending on it, otherwise an error will be thrown.</param>
            <returns>True if the table was removed, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.GetChildren(Code[30],Integer):List of [Integer]">
            <summary>
            Get all tables in this template which has a relation to the given table.
            </summary>
            <param name="WordTemplateCode">The code of the parent Word template.</param>
            <param name="TableId">The ID of the table.</param>
            <returns>The tables related to this table.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.OnGetCustomFieldNames(Codeunit::System#Integration#Word#Word Template Custom Field@)">
            <summary>
            Event to get custom field names for the word template based on the table id.
            Make sure to also subscribe to GetCustomRecordValues in order to provide the values for these fields.
            </summary>
            <example>
            if WordTemplateCustomFields.GetTableID() = Database::Customer then
                WordTemplateCustomFields.AddField('Customer Title');
            </example>
            <param name="WordTemplateCustomFields">Interface for adding custom fields.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template.OnGetCustomRecordValues(Codeunit::System#Integration#Word#Word Template Field Value@)">
            <summary>
            Event to add values for the custom fields specified through GetCustomFieldNames.
            In order to add a value for a field, it MUST be registered through the event GetCustomFieldNames.
            </summary>
            <example>
            RecRef := WordTemplateCustomFldValue.GetRecord();
            if RecRef.Number = Database::Customer then
                WordTemplateCustomFldValue.AddFieldValue('Customer Title', GetCustomerTitle(RecRef));
            </example>
            <param name="WordTemplateCustomFldValue">Interface for adding custom field values.</param>
        </member>
        <member name="O:Table::System#Integration#Word#Word Template">
            <summary>
            Holds information about a Word template.
            </summary>
        </member>
        <member name="O:Page::System#Integration#Word#Word Template Creation Wizard">
            <summary>
            Wizard to create a Word template.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Impl#.GenerateSpreadsheetDataSource(Codeunit::System#IO#Data Compression@)">
            <summary>
            Generates the data source excel spreadsheet with DataSource as sheetname.
            </summary>
            <param name="DataCompression">Zip to add the worksheet to.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Impl#.ConvertColNoToColName(Integer):Text[10]">
            <summary>
            Used for getting the proper Column name corresponding to a column number.
            Excel columns goes from A..Z AB..AZ etc and not 1..999~
            </summary>
            <param name="ColumnNo">The column number.</param>
            <returns>Column name</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Impl#.AddRelatedTable(Word Templates Related Table@,Word Templates Related Table):Boolean">
            <summary>
            Attempts to a add a related table. If the related table code or related table id already exists, the table is not added and a message is shown.
            </summary>
            <param name="WordTemplatesRelatedTable">The related table to insert the record into.</param>
            <param name="TempWordTemplatesRelatedTable">The temporary related table that holds the values used for inserting.</param>
            <returns>True if the related table was added, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Impl#.VerifyMailMergeFieldNameLengths:Boolean">
            Due to truncation of long names in Microsoft Word, we have to limit the the name length to less than 40.
            Word automatically truncates and remove/replace special characters.
        </member>
        <member name="O:Page::System#Integration#Word#Word Templates">
            <summary>
            Presents a list of available Word templates.
            </summary>
        </member>
        <member name="O:Page::System#Integration#Word#Word Template Selection Wizard">
            <summary>
            A wizard to select a Word template and apply it for a record.
            </summary>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template Selection Wizard.SetTemplate(Word Template)">
            <summary>
            Sets the template to apply. If not set, the user will be prompted to choose a template as part of the wizard.
            </summary>
            <param name="WordTemplate">The template to set.</param>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template Selection Wizard.SetData(Variant)">
            <summary>
            Sets the record to be used when applying the template.
            </summary>
            <param name="RecordVariant">The record to set.</param>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template Selection Wizard.SetData(Dictionary of [Integer,Text])">
            <summary>
            Set the entities that user can select to create the word template
            </summary>
            <param name="Dict">Dictionary of TableId to SystemId filters.</param>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template Selection Wizard.GetDocumentFormat:Text">
            <summary>
            Get the document format.
            </summary>
            <returns>The format as a text.</returns>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template Selection Wizard.GetDocumentStream(InStream@)">
            <summary>
            Get the word template stored in the Blob.
            </summary>
            <param name="InStream">Stream that will contain the word template.</param>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template Selection Wizard.SaveAsDocumentStream">
            <summary>
            Save the word template into a Blob, that can then be retrived by a stream.
            </summary>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template Selection Wizard.WasDialogCompleted:Boolean">
            <summary>
            Returns if the user completed the dialog to add a word template.
            </summary>
            <returns>True if completed otherwise false.</returns>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template Selection Wizard.SetIsUnknownSource">
            <summary>
            Ensures that user is presented with the overview tab if the wizard is run without a source record.
            </summary>
        </member>
        <member name="O:Page::System#Integration#Word#Word Templates Field Selection">
            <summary>
            A list page to view and edit fields included in the Word Template for a specific Word Template
            </summary>
        </member>
        <member name="O:Table::System#Integration#Word#Word Templates Related Buffer">
            <summary>
            Holds information about entities in a Word Template.
            </summary>
        </member>
        <member name="O:Page::System#Integration#Word#Word Templates Related Card">
            <summary>
            A list part factbox to view related entities for Word templates.
            </summary>
        </member>
        <member name="O:Page::System#Integration#Word#Word Templates Related Edit">
            <summary>
            A page to view and edit related entities for Word templates.
            </summary>
        </member>
        <member name="O:Page::System#Integration#Word#Word Templates Related FactBox">
            <summary>
            A list part factbox to view related entities for Word templates.
            </summary>
        </member>
        <member name="O:Page::System#Integration#Word#Word Templates Related Part">
            <summary>
            A list part page to view and edit related entities for Word templates.
            </summary>
        </member>
        <member name="O:Table::System#Integration#Word#Word Templates Related Table">
            <summary>
            Holds information about entities that are related to a source entity of a Word Template.
            </summary>
        </member>
        <member name="O:Enum::System#Integration#Word#Word Templates Save Format">
            <summary>
            Specifies the available formats in which the user can generate documents from Word templates.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Word#Word Templates Save Format.Doc">
            <summary>
            Saves the document in the Microsoft Word 97 - 2007 Document format.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Word#Word Templates Save Format.Docx">
            <summary>
            Saves the document as an Office Open XML WordprocessingML Document (macro-free).
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Word#Word Templates Save Format.PDF">
            <summary>
            Saves the document as PDF (Adobe Portable Document) format.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Word#Word Templates Save Format.Html">
            <summary>
            Saves the document in the HTML format.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Word#Word Templates Save Format.Text">
            <summary>
            Saves the document in the plain text format.
            </summary>
        </member>
        <member name="O:Table::System#Integration#Word#Word Templates Table">
            <summary>
            Represents the available tables that could be used in a Word template.
            </summary>
        </member>
        <member name="O:Page::System#Integration#Word#Word Templates Table Lookup">
            <summary>
            A look-up page to select a table to be used in a Word template.
            </summary>
        </member>
        <member name="O:Page::System#Integration#Word#Word Templates Tables Part">
            <summary>
            A list part page to view, add and remove tables for Word templates.
            </summary>
        </member>
        <member name="O:Page::System#Integration#Word#Word Template To Text Wizard">
            <summary>
            A wizard to select a Word template that can then be output as text
            </summary>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template To Text Wizard.SetFormat(Enum::System#Integration#Word#Word Templates Save Format)">
            <summary>
            Set the output format of the template.
            </summary>
            <param name="Format">The word template format.</param>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template To Text Wizard.SetData(Dictionary of [Integer,Text],Integer)">
            <summary>
            Set the entities that user can select to create the word template.
            </summary>
            <param name="Dict">Dictionary of TableId to SystemId filters.</param>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template To Text Wizard.GetDocumentAsText:Text">
            <summary>
            Get the word template document as text.
            </summary>
            <returns>Returns the word template as a text.</returns>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template To Text Wizard.GetDocumentSize:Integer">
            <summary>
            Returns size of word template document.
            </summary>
            <returns>The size for the resulting document in bytes.</returns>
        </member>
        <member name="M:Page::System#Integration#Word#Word Template To Text Wizard.WasDialogCompleted:Boolean">
            <summary>
            Returns if the user completed the dialog to add a word template.
            </summary>
            <returns>True if completed otherwise false.</returns>
        </member>
        <member name="O:Codeunit::System#Integration#Word#Word Template Cust# Field Impl">
            <summary>
            Defines the implementation for adding custom fields
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Word#Word Template Custom Field">
            <summary>
            Provides an interface to define custom fields for Word Templates
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Custom Field.GetTableID:Integer">
            <summary>
            Get the current table id. This is the table that you want to add fields for.
            </summary>
            <returns>The current table id.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Custom Field.AddField(Text[20])">
            <summary>
            Add this custom field to word templates using the given table id.
            </summary>
            <param name="CustomFieldName">Name of the custom field.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Custom Field.SetCurrentTableId(Integer,Code[5])">
            <summary>
            Set the context that users are supposed to add tables to. Ex. Customer table.
            </summary>
            <param name="TableId">Table id, Ex. Database::Customer</param>
            <param name="RelatedTableCode">The code that is being used for this table.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Custom Field.SetCurrentTableId(Integer)">
            <summary>
            Set the context that users are supposed to add tables to. Ex. Customer table.
            </summary>
            <param name="TableId">Table id, Ex. Database::Customer</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Custom Field.GetCustomFields(Word Template Custom Field@)">
            <summary>
            Get the table containing all custom field names that has been added above.
            </summary>
            <param name="TempWordTemplateCustomField">Table containing all custom field names.</param>
        </member>
        <member name="O:Table::System#Integration#Word#Word Template Custom Field">
            <summary>
            Holds information about custom fields
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Word#Word Template Field Value">
            <summary>
            Provides an interface to define custom field values for Word Templates
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Field Value.GetRecord:RecordRef">
            <summary>
            Get the record that we are currently merging into the word document.
            </summary>
            <returns>RecordRef to the current record.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Field Value.AddFieldValue(Text,Text[2048])">
            <summary>
            Set the value of a specific field. The field must already have been added in the Word Template Custom Fields codeunit.
            </summary>
            <param name="CustomFieldName">Name of the custom field, which was already specified in the Word Template Custom Fields codeunit.</param>
            <param name="CustomFieldValue">Value of this field for the current record.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Field Value.Initialize(Word Template Custom Field@)">
            <summary>
            Set the valid fields users can add values for.
            This table includes fields for all related tables as well, with appropriate RelatedTableCode.
            </summary>
            <param name="NewTempWordTemplateCustomField">Table containing fields the customer can add values for.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Field Value.SetCurrentRecord(RecordRef,Code[5])">
            <summary>
            Sets the record that users can add field values for (the valid fields themselves are defined in Initialize).
            Also clears out all current values for the record.
            </summary>
            <param name="RecordRef">Record that is being merged.</param>
            <param name="RelatedTableCode">The code for the table that is being merged, used to filter valid fields.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Word#Word Template Field Value.GetCurrentCustomValues(Word Template Custom Field@)">
            <summary>
            Get the table containing all custom field names and values that has been added above.
            </summary>
            <param name="CurrentTempWordTemplateCustomField">Table containing all custom field names and values.</param>
        </member>
        <member name="O:Codeunit::System#Integration#Word#Word Template Field Value Impl">
            <summary>
            Defines the implementation for adding custom field values
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when a data point has been clicked.
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when a data point has been double clicked.
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired when the control add-in is ready for communication.
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired when the control add-in should be refreshed.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#BusinessChart.Update(JsonObject)">
            <summary>
            Initialize and updates the chart. This method must be called before any controls will work.
            </summary>
            <param name="ChartData">The full set of data needed for initializing the chart.</param>
        </member>
        <member name="EV:">
            <summary>
            Event raised when addin is done loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when page is done loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when callback url is triggered
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired when the control add-in should be refreshed.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#WebPageViewer.InitializeIFrame(Text)">
            <summary>
            Function that initializes iframe
            Call this before SetContent or Navigate.
            </summary>        
            <param name="Ratio">The ratio of width to height of iframe. For example "16:9".</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#WebPageViewer.InitializeFullIFrame">
            <summary>
            Function that initializes iframe, ignoring ratio values
            Call this before SetContent or Navigate.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#WebPageViewer.SetContent(Text)">
            <summary>
            Function that sets the content html
            </summary>        
            <param name="Html">The html content to display.</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#WebPageViewer.SetContent(Text,Text)">
            <summary>
            Function that sets the content html and executes some JavaScript
            </summary>        
            <param name="Html">The html content to display.</param>
            <param name="Javascript">JavaScript to execute.</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#WebPageViewer.Navigate(Text)">
            <summary>
            Function that sets the content url
            </summary>        
            <param name="Url">Url to display.</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#WebPageViewer.Navigate(Text,Text,Text)">
            <summary>
            Function that sets the content url with parameter data
            </summary>        
            <param name="Url">Url to display.</param>
            <param name="Method">HTTP method to use.</param>
            <param name="Data">Data to send (JSON encoded string).</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#WebPageViewer.PostMessage(Text,Text,Boolean)">
            <summary>
            Function to post a message to parent window.
            </summary>
            <param name="Message">Data to be sent to the other window</param>
            <param name="TargetOrigin">Specifies what the origin of otherWindow must be for the event to be dispatched, either as the literal string "*" (indicating no preference) or as a URI.</param>
            <param name="ConvertToJson">Flag indicating whether we must convert message to Json or not.</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#WebPageViewer.LinksOpenInNewWindow">
            <summary>
            Function to force hyperlinks to open in a new page
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Integration#WebPageViewer.InvokeEvent(Text)">
            <summary>
            Function to trigger a WebPageViewerEvent with custom data
            </summary>
            <param name="Data">The data to pass in the event.</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#WebPageViewer.SubscribeToEvent(Text,Text)">
            <summary>
            Function to subscribe to window events and trigger a WebPageViewerEvent with
            the data provided by the event
            </summary>
            <param name="EventName">The name of window event</param>
            <param name="Origin">Filters event by origin of the publisher</param>
        </member>
        <member name="M:ControlAddIn::System#Integration#WebPageViewer.SetCallbacksFromSubscribedEventToIgnore(Text,JsonArray)">
            <summary>
            Function to ignore callbacks occuring due to subscribed events.
            This will improve performance by telling client not to send messages back
            to server if not required.
            </summary>
            <param name="eventName">The event name passed to <see cref="SubscribeToEvent(string, string)"/> whose callback need to be ignored.</param>
            <param name="callbackResults">The results of the callback that need to be ignored.</param>
            <remarks>Send empty callbackResults to undo previous entry.</remarks>
        </member>
        <member name="O:Enum::System#Integration#Doc# Sharing Conflict Behavior">
            <summary>
            The behavior to use when a document sharing conflict occurs.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Doc# Sharing Conflict Behavior.Fail">
            <summary>
            Fail the operation.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Doc# Sharing Conflict Behavior.Replace">
            <summary>
            Replace the existing document.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Doc# Sharing Conflict Behavior.Rename">
            <summary>
            Rename the new document.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Doc# Sharing Conflict Behavior.Reuse">
            <summary>
            Reuse the existing document.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Doc# Sharing Conflict Behavior.Ask">
            <summary>
            Show a dialog to the user to ask what to do.
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Document Sharing">
            <summary>
            Codeunit to invoke document sharing flow.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Document Sharing.OnRun">
            <summary>
            Triggers the document sharing flow with the provided Document Sharing record.
            </summary>
            <example>
             TempDocumentSharing.Name := 'My Shared Document.pdf';
             TempDocumentSharing.Extension := '.pdf';
             TempDocumentSharing.Data := "Document Blob";
             TempDocumentSharing.Insert();
             Codeunit.Run(Codeunit::"Document Sharing", TempDocumentSharing);
            </example>
        </member>
        <member name="M:Codeunit::System#Integration#Document Sharing.Share(Document Sharing@)">
            <summary>
            Triggers the document sharing flow.
            </summary>
            <param name="DocumentSharingRec">The record to invoke the share with.</param>
            <example>
             TempDocumentSharing.Name := 'My Shared Document.pdf';
             TempDocumentSharing.Extension := '.pdf';
             TempDocumentSharing.Data := "Document Blob";
             TempDocumentSharing.Insert();
             DocumentSharing.Share(TempDocumentSharing);
            </example>
        </member>
        <member name="M:Codeunit::System#Integration#Document Sharing.Share(Text,Text,InStream,Enum::System#Integration#Document Sharing Intent)">
            <summary>
            Triggers the document sharing flow.
            </summary>
            <param name="FileName">Specifies the file name of the document (without file extension). It should only include valid filename characters.</param>
            <param name="FileExtension">Specifies the file extension (e.g. '.pdf').</param>
            <param name="InStream">Specifies the data to be shared (e.g. a report pdf).</param>
            <param name="DocumentSharingIntent">Specifies the sharing intent of the document.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Document Sharing.Share(Text,Text,InStream,Enum::System#Integration#Document Sharing Intent,Enum::System#Integration#Document Sharing Source)">
            <summary>
            Triggers the document sharing flow.
            </summary>
            <param name="FileName">Specifies the file name of the document (without file extension). It should only include valid filename characters.</param>
            <param name="FileExtension">Specifies the file extension (e.g. '.pdf').</param>
            <param name="InStream">Specifies the data to be shared (e.g. a report pdf).</param>
            <param name="DocumentSharingIntent">Specifies the sharing intent of the document.</param>
            <param name="DocumentSharingSource">Specifies the sharing source of the document.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Document Sharing.ShareEnabled:Boolean">
            <summary>
            Checks if document sharing is enabled.
            </summary>
            <returns>Returns true if sharing is enabled, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Document Sharing.ShareEnabled(Enum::System#Integration#Document Sharing Source):Boolean">
            <summary>
            Checks if document sharing is enabled.
            </summary>
            <param name="DocumentSharingSource">Specifies the sharing source of the document.</param>
            <returns>Returns true if sharing is enabled, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Document Sharing.EditEnabledForFile(Text):Boolean">
            <summary>
            Checks if Document can be edited online.
            </summary>
            <param name="FileName">File name of document. Ex 'Document.docx'</param>
            <returns>True if Document can be edited online.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Document Sharing.OnUploadDocument(Document Sharing@,Boolean@)">
            <summary>
            Raised when the document needs to be uploaded.
            </summary>
            <param name="DocumentSharing">The record containing the document to be shared.</param>
            <param name="Handled">Specifies whether the event has been handled and no further execution should occur.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Document Sharing.OnCanUploadDocument(Boolean@)">
            <summary>
            Raised to test if there are any document services that can handle the upload.
            </summary>
            <param name="CanUpload">Specifies whether there is a subscriber that can handle the upload.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Document Sharing.OnCanUploadSystemDocument(Boolean@)">
            <summary>
            Raised to test if there are any document services that can handle the upload for a system document.
            </summary>
            <param name="CanUpload">Specifies whether there is a subscriber that can handle the upload.</param>
        </member>
        <member name="O:Page::System#Integration#Document Sharing">
            <summary>
            Page which will host the document service share ux
            </summary>
        </member>
        <member name="O:Table::System#Integration#Document Sharing">
            <summary>
            Table containing the required state for document sharing.
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.Id">
            <summary>
            Specifies the unique id of this record.
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.Data">
            <summary>
            Specifies the blob data to be shared (e.g. a report pdf).
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.Name[2048]">
            <summary>
            Specifies the filename of the document (with file extension).
            This will be used for uploading and also displayed in the share experience.
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.Extension[2048]">
            <summary>
            Specifies the filename extension (e.g. '.pdf').
            This is required to display the share experience.
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.Token">
            <summary>
            Specifies the Document Service token.
            This is required to display the share experience.
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.DocumentRootUri[2048]">
            <summary>
            Specifies the root location of the document.
            This is typically the store used by the Document Service.
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.DocumentUri[2048]">
            <summary>
            Specifies the location of where the document has been uploaded.
            Navigating here will allow the user to download the file.
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.DocumentPreviewUri[2048]">
            <summary>
            Specifies the preview location.
            Navigating here will allow the user to preview the document in a browser.
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.Document Sharing Intent">
            <summary>
            Specifies the sharing intent of the document.
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.Source">
            <summary>
            Specifies the sharing source of the document.
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.Item Id[2048]">
            <summary>
            Specifies the Id of the data in the Document Service
            </summary>
        </member>
        <member name="F:Table::System#Integration#Document Sharing.Conflict Behavior">
            <summary>
            Specifies the behavior when there is a conflict with an existing document.
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Document Sharing Impl#">
            <summary>
            Codeunit that contains the implementation for document sharing.
            </summary>
        </member>
        <member name="O:Enum::System#Integration#Document Sharing Intent">
            <summary>
            Enum describing the intent of the document share record
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Document Sharing Intent.Open">
            <summary>
            Intent to open a preview of the document.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Document Sharing Intent.Share">
            <summary>
            Intent to open the share dialog for the document.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Document Sharing Intent.Prompt">
            <summary>
            Intent to give the user a prompt to decide what action to take with the document.
            Note: This will fail if GuiAllowed() is false.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Document Sharing Intent.Edit">
            <summary>
            Intent to open a preview of the document for editing and then download the resulting document.
            </summary>
        </member>
        <member name="O:Enum::System#Integration#Document Sharing Source">
            <summary>
            Enum describing the source of the document share record
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Document Sharing Source.App">
            <summary>
            The source of the share is from the Application.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Document Sharing Source.System">
            <summary>
            The source of the share is from the System.
            </summary>
        </member>
        <member name="O:Enum::System#Integration#Action Container Type">
            <summary>
            Enumeration used for determining the type of contained actions of a group control.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Action Container Type.NewDocumentItems">
            <summary>
            Action container contains new document actions.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Action Container Type.ActionItems">
            <summary>
            Action container contains action items.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Action Container Type.RelatedInformation">
            <summary>
            Action container contains related information acrions.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Action Container Type.Reports">
            <summary>
            Action container contains report actions.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Action Container Type.HomeItems">
            <summary>
            Action container contains home items actions.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Action Container Type.ActivityButtons">
            <summary>
            Action container contains activity actions.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Action Container Type.Departments">
            <summary>
            Action container contains department actions.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Action Container Type.AutoQueryActions">
            <summary>
            Action container contains auto query actions.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Action Container Type.ViewActions">
            <summary>
            Action container contains view actions.
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Page Action Provider">
            <summary>
            Exposes functionality that gets relevant page actions for a selected page.
            This codeunit is exposed as a webservice and hence all functions are available through OData calls.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Page Action Provider.GetCurrentRoleCenterHomeItems(Boolean):Text">
             <summary>
             Gets home items for user's current role center.
             </summary>
             <param name="IncludeViews">Specifies whether views for home items should be included.</param>
             <returns>Text value for the home items in JSON format.</returns>
             <example>
             "version": "1.0",
             "roleCenterId": 9022,
             "items": [
                 {
                   "caption": "Customers",
                   "views": [
                     {
                       "caption": "balance",
                       "url": "https://businesscentral.dynamics.com/?company=CRONUS%20International%20Ltd.&amp;page=22&amp;view=aa49406f-6f68-4565-b857-496faa0e77aa_balance48453&amp;page=22&amp;filter=Customer.%27Balance%20(LCY)%27%20IS%20%27>200%27"
                     }
                   ],
                   "url": "https://businesscentral.dynamics.com/?company=CRONUS%20International%20Ltd.&amp;page=22"
                 },
                 {
                   "caption": "Vendors",
                   "url": "https://businesscentral.dynamics.com/?company=CRONUS%20International%20Ltd.&amp;page=27"
                 },
                 {
                   "caption": "Items",
                   "url": "https://businesscentral.dynamics.com/?company=CRONUS%20International%20Ltd.&amp;page=31"
                 },
                 {
                   "caption": "Account Schedules",
                   "url": "https://businesscentral.dynamics.com/?company=CRONUS%20International%20Ltd.&amp;page=103"
                 }
              ]
            
             In case of an error:
             {
               "version":"1.0",
               "roleCenterId": 9022,
               "error":[
                 "code":"UnableToGetRoleCenter"
                 "message":"Cannot get current role center for the user."
               ]
             }
             </example>
        </member>
        <member name="M:Codeunit::System#Integration#Page Action Provider.GetVersion:Text[30]">
            <summary>
            Gets the current version of the Page Action Provider.
            </summary>
            <returns>Text value for the current version of Page Action Provider.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Page Action Provider.OnAfterGetPageActions(Integer,Boolean,JsonArray@)">
            <summary>
            Allows changing which items are returned just before sending the response.
            </summary>
            <param name="PageId">The ID of the page for which to retrieve page action data.</param>
            <param name="ItemsJsonArray">Allows overriding which items are being returned.</param>
        </member>
        <member name="O:Codeunit::System#Integration#Page Action Provider Impl#">
            <summary>
            Implements functionality to get action data for a given page.
            </summary>
        </member>
        <member name="M:Table::System#Integration#Page Summary Parameters.FromJson(Text)">
            <summary>
            Initializes the page summary parameters record from JSON.
            </summary>
            <param name="PageSummaryParameterJson">Page summary parameters in JSON format</param>
        </member>
        <member name="O:Codeunit::System#Integration#Page Summary Provider">
            <summary>
            Exposes functionality that gets page summary for a selected page.
            This codeunit is exposed as a webservice and hence all functions are available through OData calls.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Provider.GetPageSummary(Integer,Text):Text">
             <returns>Text value for the page summary in JSON format.</returns>
             <example>
             {
               "version":"1.1",
               "pageCaption":"Customer Card",
               "pageType":"Card",
               "summaryType":"Brick",
               "cardPageId": "0",
               "url":"https://businesscentral.dynamics.com/?company=CRONUS%20International%20Ltd.&amp;page=22&amp;bookmark=27%3bEgAAAAJ7CDAAMQA5ADAANQA4ADkAMw%3d%3",
               "fields":[
                  {"caption":"No.","fieldValue":"01445544","fieldType":"Code", "tooltip":"Specifies the number of the customer."},
                  {"caption":"Name","fieldValue":"Progressive Home Furnishings","fieldType":"Text","tooltip":"Specifies the customer's name. This name will appear on all sales documents for the customer."},
                  {"caption":"Contact","fieldValue":"Mr. Scott Mitchell","fieldType":"Text", "tooltip":"Specifies the name of the person you regularly contact when you do business with this customer."},
                  {"caption":"Balance Due (LCY)","fieldValue":"1.499,03","fieldType":"Decimal","tooltip":"Specifies the payment amount that the customer owes for completed sales."}],
               "recordFields":[
                  {"caption":"No.","fieldValue":"01121212","fieldType":"Code","tooltip":"Specifies the number of the customer."},
                  {"caption":"Name","fieldValue":"Spotsmeyer's Furnishings","fieldType":"Text","tooltip":"Specifies the customer's name. This name will appear on all sales documents for the customer."},
                  {"caption":"Balance (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the payment amount that the customer owes for completed sales. This value is also known as the customer's balance."},
                  {"caption":"Balance Due (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies payments from the customer that are overdue per today's date."},
                  {"caption":"Credit Limit (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the maximum amount you allow the customer to exceed the payment balance before warnings are issued."},
                  {"caption":"Blocked","fieldValue":" ","fieldType":"Option","tooltip":"Specifies which transactions with the customer that cannot be processed, for example, because the customer is insolvent."},
                  {"caption":"Privacy Blocked","fieldValue":"No","fieldType":"Boolean","tooltip":"Specifies whether to limit access to data for the data subject during daily operations. This is useful, for example, when protecting data from changes while it is under privacy review."},
                  {"caption":"Salesperson Code","fieldValue":"JR","fieldType":"Code","tooltip":"Specifies a code for the salesperson who normally handles this customer's account."},
                  {"caption":"Service Zone Code","fieldValue":"X","fieldType":"Code","tooltip":"Specifies the code for the service zone that is assigned to the customer."},
                  {"caption":"Address","fieldValue":"612 South Sunset Drive","fieldType":"Text","tooltip":"Specifies the customer's address. This address will appear on all sales documents for the customer."}
                  {"caption":"Payments This Year","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the sum of payments received from the customer in the current fiscal year."},
                  {"caption":"Last Date Modified","fieldValue":"08/02/24","fieldType":"Date","tooltip":"Specifies when the customer card was last modified."}]
             }
            
             In case of an error:
             {
               "version":"1.1",
               "pageCaption":"Customer Card",
               "pageType":"Card",
               "summaryType":"Caption",
               "error":[
                 "code":"InvalidBookmark"
                 "message":"The bookmark is invalid."
               ]
             }
             </example>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Provider.GetPageSummaryBySystemID(Integer,Guid):Text">
             <returns>Text value for the page summary in JSON format.</returns>
             <example>
             {
               "version":"1.1",
               "pageCaption":"Customer Card",
               "pageType":"Card",
               "summaryType":"Brick",
               "cardPageId": "0",
               "url":"https://businesscentral.dynamics.com/?company=CRONUS%20International%20Ltd.&amp;page=22&amp;bookmark=27%3bEgAAAAJ7CDAAMQA5ADAANQA4ADkAMw%3d%3",
               "fields":[
                  {"caption":"No.","fieldValue":"01445544","fieldType":"Code", "tooltip":"Specifies the number of the customer."},
                  {"caption":"Name","fieldValue":"Progressive Home Furnishings","fieldType":"Text","tooltip":"Specifies the customer's name. This name will appear on all sales documents for the customer."},
                  {"caption":"Contact","fieldValue":"Mr. Scott Mitchell","fieldType":"Text", "tooltip":"Specifies the name of the person you regularly contact when you do business with this customer."},
                  {"caption":"Balance Due (LCY)","fieldValue":"1.499,03","fieldType":"Decimal","tooltip":"Specifies the payment amount that the customer owes for completed sales."}],
               "recordFields":[
                  {"caption":"No.","fieldValue":"01121212","fieldType":"Code","tooltip":"Specifies the number of the customer."},
                  {"caption":"Name","fieldValue":"Spotsmeyer's Furnishings","fieldType":"Text","tooltip":"Specifies the customer's name. This name will appear on all sales documents for the customer."},
                  {"caption":"Balance (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the payment amount that the customer owes for completed sales. This value is also known as the customer's balance."},
                  {"caption":"Balance Due (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies payments from the customer that are overdue per today's date."},
                  {"caption":"Credit Limit (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the maximum amount you allow the customer to exceed the payment balance before warnings are issued."},
                  {"caption":"Blocked","fieldValue":" ","fieldType":"Option","tooltip":"Specifies which transactions with the customer that cannot be processed, for example, because the customer is insolvent."},
                  {"caption":"Privacy Blocked","fieldValue":"No","fieldType":"Boolean","tooltip":"Specifies whether to limit access to data for the data subject during daily operations. This is useful, for example, when protecting data from changes while it is under privacy review."},
                  {"caption":"Salesperson Code","fieldValue":"JR","fieldType":"Code","tooltip":"Specifies a code for the salesperson who normally handles this customer's account."},
                  {"caption":"Service Zone Code","fieldValue":"X","fieldType":"Code","tooltip":"Specifies the code for the service zone that is assigned to the customer."},
                  {"caption":"Address","fieldValue":"612 South Sunset Drive","fieldType":"Text","tooltip":"Specifies the customer's address. This address will appear on all sales documents for the customer."}
                  {"caption":"Payments This Year","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the sum of payments received from the customer in the current fiscal year."},
                  {"caption":"Last Date Modified","fieldValue":"08/02/24","fieldType":"Date","tooltip":"Specifies when the customer card was last modified."}]
             }
            
             In case of an error:
             {
               "version":"1.1",
               "pageCaption":"Customer Card",
               "pageType":"Card",
               "summaryType":"Caption",
               "error":[
                 "code":"InvalidSystemId"
                 "message":"The system id is invalid."
               ]
             }
             </example>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Provider.GetPageSummary(Integer):Text">
             <returns>Text value for the page summary in JSON format.</returns>
             <example>
             {
               "version":"1.1",
               "pageCaption":"Customer Card",
               "pageType":"Card",
               "summaryType":"Caption",
             }
            
             In case of error:
             {
               "version":"1.1",
               "pageCaption":"Customer Card",
               "pageType":"Card",
               "summaryType":"Caption",
               "error":[
                 "code":"error code"
                 "message":"error message"
               ]
             }
             </example>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Provider.GetPageSummary(Text):Text">
             <returns>Text value for the page summary in JSON format.</returns>
             <example>
             {
               "version":"1.1",
               "pageCaption":"Customer Card",
               "pageType":"Card",
               "summaryType":"Brick",
               "cardPageId": "0",
               "url":"https://businesscentral.dynamics.com/?company=CRONUS%20International%20Ltd.&amp;page=22&amp;bookmark=27%3bEgAAAAJ7CDAAMQA5ADAANQA4ADkAMw%3d%3",
               "fields":[
                  {"caption":"No.","fieldValue":"01445544","fieldType":"Code", "tooltip":"Specifies the number of the customer."},
                  {"caption":"Name","fieldValue":"Progressive Home Furnishings","fieldType":"Text","tooltip":"Specifies the customer's name. This name will appear on all sales documents for the customer."},
                  {"caption":"Contact","fieldValue":"Mr. Scott Mitchell","fieldType":"Text", "tooltip":"Specifies the name of the person you regularly contact when you do business with this customer."},
                  {"caption":"Balance Due (LCY)","fieldValue":"1.499,03","fieldType":"Decimal","tooltip":"Specifies the payment amount that the customer owes for completed sales."}],
               "recordFields":[
                  {"caption":"No.","fieldValue":"01121212","fieldType":"Code","tooltip":"Specifies the number of the customer."},
                  {"caption":"Name","fieldValue":"Spotsmeyer's Furnishings","fieldType":"Text","tooltip":"Specifies the customer's name. This name will appear on all sales documents for the customer."},
                  {"caption":"Balance (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the payment amount that the customer owes for completed sales. This value is also known as the customer's balance."},
                  {"caption":"Balance Due (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies payments from the customer that are overdue per today's date."},
                  {"caption":"Credit Limit (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the maximum amount you allow the customer to exceed the payment balance before warnings are issued."},
                  {"caption":"Blocked","fieldValue":" ","fieldType":"Option","tooltip":"Specifies which transactions with the customer that cannot be processed, for example, because the customer is insolvent."},
                  {"caption":"Privacy Blocked","fieldValue":"No","fieldType":"Boolean","tooltip":"Specifies whether to limit access to data for the data subject during daily operations. This is useful, for example, when protecting data from changes while it is under privacy review."},
                  {"caption":"Salesperson Code","fieldValue":"JR","fieldType":"Code","tooltip":"Specifies a code for the salesperson who normally handles this customer's account."},
                  {"caption":"Service Zone Code","fieldValue":"X","fieldType":"Code","tooltip":"Specifies the code for the service zone that is assigned to the customer."},
                  {"caption":"Address","fieldValue":"612 South Sunset Drive","fieldType":"Text","tooltip":"Specifies the customer's address. This address will appear on all sales documents for the customer."}
                  {"caption":"Payments This Year","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the sum of payments received from the customer in the current fiscal year."},
                  {"caption":"Last Date Modified","fieldValue":"08/02/24","fieldType":"Date","tooltip":"Specifies when the customer card was last modified."}]
             }
            
             In case of an error:
             {
               "version":"1.1",
               "pageCaption":"Customer Card",
               "pageType":"Card",
               "summaryType":"Caption",
               "error":[
                 "code":"InvalidSystemId"
                 "message":"The system id is invalid."
               ]
             }
             </example>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Provider.GetPageUrlBySystemID(Integer,Guid):Text">
             <returns>Text value for the page url info in JSON format.</returns>
             <example>
             {
               "version":"1.1",
               "url":"https://businesscentral.dynamics.com/?company=CRONUS%20International%20Ltd.&amp;page=22&amp;bookmark=27%3bEgAAAAJ7CDAAMQA5ADAANQA4ADkAMw%3d%3",
             }
            
             In case of an error:
             {
               "version":"1.1",
               "error":[
                 "code":"InvalidSystemId"
                 "message":"The system id is invalid."
               ]
             }
             </example>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Provider.GetVersion:Text[30]">
            <summary>
            Gets the current version of the Page Summary Provider.
            </summary>
            <returns>Text value for the current version of Page Summary Provider.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Provider.GetPageSummary(Page Summary Parameters):Text">
             <returns>Text value for the page summary in JSON format.</returns>
             <example>
             {
               "version":"1.1",
               "pageCaption":"Customer Card",
               "pageType":"Card",
               "summaryType":"Brick",
               "cardPageId": "0",
               "url":"https://businesscentral.dynamics.com/?company=CRONUS%20International%20Ltd.&amp;page=22&amp;bookmark=27%3bEgAAAAJ7CDAAMQA5ADAANQA4ADkAMw%3d%3",
               "fields":[
                  {"caption":"No.","fieldValue":"01445544","fieldType":"Code", "tooltip":"Specifies the number of the customer."},
                  {"caption":"Name","fieldValue":"Progressive Home Furnishings","fieldType":"Text","tooltip":"Specifies the customer's name. This name will appear on all sales documents for the customer."},
                  {"caption":"Contact","fieldValue":"Mr. Scott Mitchell","fieldType":"Text", "tooltip":"Specifies the name of the person you regularly contact when you do business with this customer."},
                  {"caption":"Balance Due (LCY)","fieldValue":"1.499,03","fieldType":"Decimal","tooltip":"Specifies the payment amount that the customer owes for completed sales."}],
               "recordFields":[
                  {"caption":"No.","fieldValue":"01121212","fieldType":"Code","tooltip":"Specifies the number of the customer."},
                  {"caption":"Name","fieldValue":"Spotsmeyer's Furnishings","fieldType":"Text","tooltip":"Specifies the customer's name. This name will appear on all sales documents for the customer."},
                  {"caption":"Balance (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the payment amount that the customer owes for completed sales. This value is also known as the customer's balance."},
                  {"caption":"Balance Due (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies payments from the customer that are overdue per today's date."},
                  {"caption":"Credit Limit (LCY)","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the maximum amount you allow the customer to exceed the payment balance before warnings are issued."},
                  {"caption":"Blocked","fieldValue":" ","fieldType":"Option","tooltip":"Specifies which transactions with the customer that cannot be processed, for example, because the customer is insolvent."},
                  {"caption":"Privacy Blocked","fieldValue":"No","fieldType":"Boolean","tooltip":"Specifies whether to limit access to data for the data subject during daily operations. This is useful, for example, when protecting data from changes while it is under privacy review."},
                  {"caption":"Salesperson Code","fieldValue":"JR","fieldType":"Code","tooltip":"Specifies a code for the salesperson who normally handles this customer's account."},
                  {"caption":"Service Zone Code","fieldValue":"X","fieldType":"Code","tooltip":"Specifies the code for the service zone that is assigned to the customer."},
                  {"caption":"Address","fieldValue":"612 South Sunset Drive","fieldType":"Text","tooltip":"Specifies the customer's address. This address will appear on all sales documents for the customer."}
                  {"caption":"Payments This Year","fieldValue":"0","fieldType":"Decimal","tooltip":"Specifies the sum of payments received from the customer in the current fiscal year."},
                  {"caption":"Last Date Modified","fieldValue":"08/02/24","fieldType":"Date","tooltip":"Specifies when the customer card was last modified."}]
             }
            
             In case of an error:
             {
               "version":"1.1",
               "pageCaption":"Customer Card",
               "pageType":"Card",
               "summaryType":"Caption",
               "error":[
                 "code":"InvalidSystemId"
                 "message":"The system id is invalid."
               ]
             }
             </example>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Provider.OnBeforeGetPageSummary(Integer,RecordId,JsonArray@,Boolean@)">
            <summary>
            Allows changing which fields and values are returned when fetching page summary.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Provider.OnAfterGetSummaryFields(Integer,RecordId,List of [Integer]@)">
            <summary>
            Allows changing which fields are shown when fetching page summary, including their order.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Provider.OnAfterGetPageSummary(Integer,RecordId,JsonArray@)">
            <summary>
            Allows changing which fields and values are returned just before sending the response.
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Page Summary Provider Impl#">
            <summary>
            Implements functionality to get summary data for a given object.
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Page Summary Settings">
            <summary>
            Exposes functionality that manages page summary settings.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Settings.GetPageSummaryProviderSettings(Page Summary Settings@):Boolean">
            <summary>
            Gets the page summary settings.
            </summary>
            <param name="PageSummarySettings">The record to get the page summary settings.</param>
            <returns></returns>
        </member>
        <member name="M:Codeunit::System#Integration#Page Summary Settings.IsShowRecordSummaryEnabled:Boolean">
            <summary>
            Determines if Show Record Summary settings is enabled.
            </summary>
            <returns></returns>
        </member>
        <member name="O:Table::System#Integration#Page Summary Settings">
            <summary>
            Contains settings for page summary card.
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Page Summary Settings Impl#">
            <summary>
            Implements functionality to get page summary provider settings.
            </summary>
        </member>
        <member name="O:Enum::System#Integration#Summary Type">
            <summary>
            Specifies the type of a summary.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Summary Type.Caption">
            <summary>
            Specifies the default type that represents caption of a object
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Summary Type.Brick">
            <summary>
            Specifies the type that represents fields defined in a brick fieldgroup
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#VS Code Integration">
            <summary>
            Provides functionality to embed hyperlinks that send requests to VS Code to navigate to an object's definition in source code
            and to open the source code of an extension from Git.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#VS Code Integration.OpenExtensionSourceInVSCode(Published Application@)">
            <summary>
            Opens an URL that sends a request to VS Code to retrieve and open the source code of the provided extension from Git.
            </summary>
            <param name="PublishedApplication">The extension to open in VS Code.</param>
        </member>
        <member name="M:Codeunit::System#Integration#VS Code Integration.UpdateConfigurationsInVSCode">
            <summary>
            Opens an URL that sends a request to VS Code to update the launch configurations to match the current environment to publish and debug.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#VS Code Integration.UpdateDependenciesInVSCode(Published Application@)">
            <summary>
            Opens an URL that sends a request to VS Code to add and download the selected extensions as dependencies.
            </summary>
            <param name="PublishedApplication">The selected extensions.</param>
        </member>
        <member name="M:Codeunit::System#Integration#VS Code Integration.GetDependenciesAsJson(Published Application@):Text">
            <summary>
            Returns the selected extensions as a JSON array of dependencies.
            </summary>
            <param name="PublishedApplication">The selected extensions.</param>
            <returns>The JSON array.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#VS Code Integration.NavigateToPageDefinitionInVSCode(Page Info And Fields@,NAV App Installed App@)">
            <summary>
            Opens an URL that sends a request to VS Code to navigate to the source definition of the given page and to download the dependent symbols.
            </summary>
            <param name="PageInfoAndFields">The page to navigate to.</param>
            <param name="NavAppInstalledApp">The dependency extensions for the page.</param>
        </member>
        <member name="M:Codeunit::System#Integration#VS Code Integration.NavigateFieldDefinitionInVSCode(Page Info And Fields@,NAV App Installed App@)">
            <summary>
            Opens an URL that sends a request to VS Code to navigate to the source definition of the given table field and to download the dependent symbols.
            </summary>
            <param name="PageInfoAndFields">The table field to navigate to.</param>
            <param name="NavAppInstalledApp">The dependency extensions for the table.</param>
        </member>
        <member name="O:Enum::System#Integration#Client Type">
            <summary>
            This enum has the web service client types.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Client Type.SOAP">
            <summary>
            Specifies that the client type is SOAP.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Client Type.ODataV3">
            <summary>
            Specifies that the client type is OData V3.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#Client Type.ODataV4">
            <summary>
            Specifies that the client type is OData V4.
            </summary>
        </member>
        <member name="O:Enum::System#Integration#OData Protocol Version">
            <summary>
            This enum has the OData protocol versions.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#OData Protocol Version.V3">
            <summary>
            Specifies that the OData protocol version is V3.
            </summary>
        </member>
        <member name="E:Enum::System#Integration#OData Protocol Version.V4">
            <summary>
            Specifies that the OData protocol version is V4.
            </summary>
        </member>
        <member name="O:Table::System#Integration#Tenant Web Service Columns">
            <summary>
            Contains tenant web service column entities.
            </summary>
        </member>
        <member name="O:Table::System#Integration#Tenant Web Service Filter">
            <summary>
            Contains tenant web service filter entities.
            </summary>
        </member>
        <member name="O:Table::System#Integration#Tenant Web Service OData">
            <summary>
            Contains tenant web service OData clause entities.
            </summary>
        </member>
        <member name="O:Table::System#Integration#Web Service Aggregate">
            <summary>
            Contains web services aggregated from Web Services and Tenant Web Services.
            </summary>
        </member>
        <member name="O:Codeunit::System#Integration#Web Service Management">
            <summary>
            Provides methods for creating and modifying web services, accessing web service URLs, and getting and setting web service filters and clauses.
            </summary>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.CreateWebService(Option,Integer,Text,Boolean)">
            <summary>
            Creates a web service for a given object. If the web service already exists, it modifies the web service accordingly.
            This method should be used for On-Prem scenarios only. Calling this method in SaaS will throw a runtime error.
            </summary>
            <param name="ObjectType">The type of the object.</param>
            <param name="ObjectId">The ID of the object.</param>
            <param name="ObjectName">The name of the object.</param>
            <param name="Published">Indicates whether the web service is published or not.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.CreateTenantWebService(Option,Integer,Text,Boolean)">
            <summary>
            Creates a tenant web service for a given object. If the tenant web service already exists, it modifies the tenant web service accordingly.
            </summary>
            <param name="ObjectType">The type of the object.</param>
            <param name="ObjectId">The ID of the object.</param>
            <param name="ObjectName">The name of the object.</param>
            <param name="Published">Indicates whether the web service is published or not.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.GetWebServiceUrl(Web Service Aggregate,Enum::System#Integration#Client Type):Text">
            <summary>
            Gets the web service URL for a given Web Service Aggregate record and client type.
            </summary>
            <param name="WebServiceAggregate">The record for getting web service URL.</param>
            <param name="ClientType">The client type of the URL. Clients are SOAP, ODataV3 and ODataV4.</param>
            <returns>Web service URL for the given record.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.CreateTenantWebServiceColumnsFromTemp(Tenant Web Service Columns@,Tenant Web Service Columns@,RecordId)">
            <summary>
            Creates tenant web service columns from temporary records.
            </summary>
            <param name="TenantWebServiceColumns">Record that the columns from temporary records are inserted to.</param>
            <param name="TempTenantWebServiceColumns">Temporary record that the columns are inserted from.</param>
            <param name="TenantWebServiceRecordId">The ID of the Tenant Web Service corresponding to columns.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.CreateTenantWebServiceFilterFromRecordRef(Tenant Web Service Filter@,RecordRef@,RecordId)">
            <summary>
            Creates a tenant web service filter from a record reference.
            </summary>
            <param name="TenantWebServiceFilter">Record that the filter from record reference is inserted to.</param>
            <param name="RecordRef">Record reference that the filter is inserted from.</param>
            <param name="TenantWebServiceRecordId">The ID of the Tenant Web Service corresponding to the filter.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.GetTenantWebServiceFilter(Tenant Web Service Filter):Text">
            <summary>
            Returns the tenant web service filter for a given record.
            </summary>
            <param name="TenantWebServiceFilter">The record for getting filter.</param>
            <returns>Tenant web service filter for the given record.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.RetrieveTenantWebServiceFilter(Tenant Web Service Filter@):Text">
            <summary>
            Returns the tenant web service filter for a given record.
            </summary>
            <param name="TenantWebServiceFilter">The record for getting filter.</param>
            <returns>Tenant web service filter for the given record.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.SetTenantWebServiceFilter(Tenant Web Service Filter@,Text)">
            <summary>
            Sets the tenant web service filter for a given record.
            </summary>
            <param name="TenantWebServiceFilter">The record for setting tenant web service filter.</param>
            <param name="FilterText">The tenant web service filter that is set.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.GetODataSelectClause(Tenant Web Service OData):Text">
            <summary>
            Returns the OData select clause for a given record.
            </summary>
            <param name="TenantWebServiceOData">The record for getting OData select clause.</param>
            <returns>OData select clause for the given record.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.SetODataSelectClause(Tenant Web Service OData@,Text)">
            <summary>
            Sets the OData select clause for a given record.
            </summary>
            <param name="TenantWebServiceOData">The record for setting OData select clause.</param>
            <param name="ODataText">The OData select clause that is set.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.GetODataFilterClause(Tenant Web Service OData):Text">
            <summary>
            Returns the OData filter clause for a given record.
            </summary>
            <param name="TenantWebServiceOData">The record for getting OData filter clause.</param>
            <returns>OData filter clause for the given record.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.SetODataFilterClause(Tenant Web Service OData@,Text)">
            <summary>
            Sets the OData filter clause for a given record.
            </summary>
            <param name="TenantWebServiceOData">The record for setting OData filter clause.</param>
            <param name="ODataText">The OData filter clause that is set.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.GetODataV4FilterClause(Tenant Web Service OData):Text">
            <summary>
            Returns the OData V4 filter clause for a given record.
            </summary>
            <param name="TenantWebServiceOData">The record for getting OData V4 filter clause.</param>
            <returns>OData V4 filter clause for the given record.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.SetODataV4FilterClause(Tenant Web Service OData@,Text)">
            <summary>
            Sets the OData V4 filter clause for a given record.
            </summary>
            <param name="TenantWebServiceOData">The record for setting OData V4 filter clause.</param>
            <param name="ODataText">The OData V4 filter clause that is set.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.GetObjectCaption(Web Service Aggregate):Text[80]">
            <summary>
            Gets the name of the object that will be exposed to the web service for a given record.
            </summary>
            <param name="WebServiceAggregate">The record for getting the name of the object.</param>
            <returns>Name of the object.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.LoadRecords(Web Service Aggregate@)">
            <summary>
            Loads records from Web Service and Tenant Web Service table into given Web Service Aggregate record.
            </summary>
            <param name="WebServiceAggregate">The variable that the records are loaded into.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.LoadRecordsFromTenantWebServiceColumns(Tenant Web Service@)">
            <summary>
            Loads records from Tenant Web Service table if there is a corresponding Tenant Web Service Column.
            </summary>
            <param name="TenantWebService">The variable that the records are loaded into.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.CreateTenantWebServiceColumnForPage(RecordId,Integer,Integer)">
            <summary>
            Creates a tenant web service for a given page.
            </summary>
            <param name="TenantWebServiceRecordId">The ID of the given page.</param>
            <param name="FieldNumber">The field number of the tenant web service column.</param>
            <param name="DataItem">The data item of the tenant web service column.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.CreateTenantWebServiceColumnForQuery(RecordId,Integer,Integer,DotNetTypeDeclaration::System#QueryMetadataReader)">
            <summary>
            Creates a tenant web service for a given query.
            </summary>
            <param name="TenantWebServiceRecordId">The ID of the given query.</param>
            <param name="FieldNumber">The field number of the tenant web service column.</param>
            <param name="DataItem">The data item of the tenant web service column.</param>
            <param name="MetaData">Metadata used to convert field name.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.InsertSelectedColumns(Tenant Web Service@,DotNetTypeDeclaration::System#GenericDictionary2@,Tenant Web Service Columns@,Integer)">
            <summary>
            Inserts selected columns in a given dictionary to the tenant web service columns table.
            </summary>
            <param name="TenantWebService">The tenant web service corresponding to columns.</param>
            <param name="ColumnDictionary">Dictionary that contains selected columns to be inserted to the tenant web service columns table.</param>
            <param name="TargetTenantWebServiceColumns">Tenant web service columns table record that selected columns are inserted to.</param>
            <param name="DataItem">The data item of the tenant web service column.</param>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.RemoveUnselectedColumnsFromFilter(Tenant Web Service@,Integer,Text):Text">
            <summary>
            Removes filters that are not in the selected columns for the given service.
            </summary>
            <param name="TenantWebService">The tenant web service corresponding to columns.</param>
            <param name="DataItem">The data item of the tenant web service column.</param>
            <param name="DataItemView">The field name of the data item.</param>
            <returns>Filter text for unselected columns.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.IsServiceNameValid(Text):Boolean">
            <summary>
            Checks if given service name is valid.
            </summary>
            <param name="Value">The service name to be checked.</param>
            <returns>If given service name valid or not.</returns>
        </member>
        <member name="M:Codeunit::System#Integration#Web Service Management.DeleteWebService(Web Service Aggregate@)">
            <summary>
            Deletes a webservice.
            </summary>
            <param name="WebServiceAggregate">The record to be deleted.</param>
        </member>
        <member name="EV:">
            <summary>
            Event raised when addin is done loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when page is done loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when callback url is triggered
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired when the control add-in should be refreshed.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Feedback#SatisfactionSurvey.InitializeIFrame(Text)">
            <summary>
            Function that initializes iframe
            Call this before SetContent or Navigate.
            </summary>        
            <param name="Ratio">The ratio of width to height of iframe. For example "16:9".</param>
        </member>
        <member name="M:ControlAddIn::System#Feedback#SatisfactionSurvey.InitializeFullIFrame">
            <summary>
            Function that initializes iframe, ignoring ratio values
            Call this before SetContent or Navigate.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Feedback#SatisfactionSurvey.SetContent(Text)">
            <summary>
            Function that sets the content html
            </summary>        
            <param name="Html">The html content to display.</param>
        </member>
        <member name="M:ControlAddIn::System#Feedback#SatisfactionSurvey.SetContent(Text,Text)">
            <summary>
            Function that sets the content html and executes some JavaScript
            </summary>        
            <param name="Html">The html content to display.</param>
            <param name="Javascript">JavaScript to execute.</param>
        </member>
        <member name="M:ControlAddIn::System#Feedback#SatisfactionSurvey.Navigate(Text)">
            <summary>
            Function that sets the content url
            </summary>        
            <param name="Url">Url to display.</param>
        </member>
        <member name="M:ControlAddIn::System#Feedback#SatisfactionSurvey.Navigate(Text,Text,Text)">
            <summary>
            Function that sets the content url with parameter data
            </summary>        
            <param name="Url">Url to display.</param>
            <param name="Method">HTTP method to use.</param>
            <param name="Data">Data to send (JSON encoded string).</param>
        </member>
        <member name="M:ControlAddIn::System#Feedback#SatisfactionSurvey.PostMessage(Text,Text,Boolean)">
            <summary>
            Function to post a message to parent window.
            </summary>
            <param name="Message">Data to be sent to the other window</param>
            <param name="TargetOrigin">Specifies what the origin of otherWindow must be for the event to be dispatched, either as the literal string "*" (indicating no preference) or as a URI.</param>
            <param name="ConvertToJson">Flag indicating whether we must convert message to Json or not.</param>
        </member>
        <member name="M:ControlAddIn::System#Feedback#SatisfactionSurvey.LinksOpenInNewWindow">
            <summary>
            Function to force hyperlinks to open in a new page
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Feedback#SatisfactionSurvey.InvokeEvent(Text)">
            <summary>
            Function to trigger a WebPageViewerEvent with custom data
            </summary>
            <param name="Data">The data to pass in the event.</param>
        </member>
        <member name="M:ControlAddIn::System#Feedback#SatisfactionSurvey.SubscribeToEvent(Text,Text)">
            <summary>
            Function to subscribe to window events and trigger a WebPageViewerEvent with
            the data provided by the event
            </summary>
            <param name="EventName">The name of window event</param>
            <param name="Origin">Filters event by origin of the publisher</param>
        </member>
        <member name="M:ControlAddIn::System#Feedback#SatisfactionSurvey.SetCallbacksFromSubscribedEventToIgnore(Text,JsonArray)">
            <summary>
            Function to ignore callbacks occuring due to subscribed events.
            This will improve performance by telling client not to send messages back
            to server if not required.
            </summary>
            <param name="eventName">The event name passed to <see cref="SubscribeToEvent(string, string)"/> whose callback need to be ignored.</param>
            <param name="callbackResults">The results of the callback that need to be ignored.</param>
            <remarks>Send empty callbackResults to undo previous entry.</remarks>
        </member>
        <member name="O:Codeunit::System#Feedback#Customer Experience Survey">
            <summary>
            Provides methods to connect to CES.
            </summary>
        </member>
        <member name="M:Codeunit::System#Feedback#Customer Experience Survey.RegisterEvent(Text):Boolean">
            <summary>
            Pushes a new event entry to the CES back-end for the current user.
            </summary>
            <param name="EventName">Name of the event to be registered.</param>
            <returns>Returns true if the request was successful.</returns>
        </member>
        <member name="M:Codeunit::System#Feedback#Customer Experience Survey.GetEligibility(Text,Text@,Text@,Boolean@):Boolean">
            <summary>
            Gets the eligibility of the current user for the indicated survey. Making this API call resets the eligibility flag (this avoids double prompting).
            </summary>
            <param name="SurveyName">Name of the survey.</param>
            <param name="FormsProId">ID of the survey.</param>
            <param name="FormsProEligibilityId">This ID is used to render survey.</param>
            <param name="IsEligible">True means that the user is eligible for prompting, and false means the user is not eligible and should not be prompted.</param>
            <returns>Returns true if the request was successful.</returns>
        </member>
        <member name="M:Codeunit::System#Feedback#Customer Experience Survey.RegisterEventAndGetEligibility(Text,Text,Text@,Text@,Boolean@):Boolean">
            <summary>
            Push a new event entry to the CES back-end, and get the eligibility of a given user for the indicated survey. This endpoint combines the functionality of the above 2 endpoints (adding an event and checking user eligibility).
            </summary>
            <param name="SurveyName">Name of the survey.</param>
            <param name="FormsProId">ID of the survey.</param>
            <param name="FormsProEligibilityId">This ID is used to render survey.</param>
            <returns>Returns true if the request was successful.</returns>
        </member>
        <member name="M:Codeunit::System#Feedback#Customer Experience Survey.GetSurvey(Text,Customer Experience Survey@):Boolean">
            <summary>
            Returns the details for a single survey
            </summary>
            <param name="SurveyName">Name of the survey.</param>
            <param name="CustomerExperienceSurvey">Survey record with details.</param>
            <returns>Returns true if the request was successful.</returns>
        </member>
        <member name="M:Codeunit::System#Feedback#Customer Experience Survey.RenderSurvey(Text,Text,Text)">
            <summary>
            Renders a given survey
            </summary>
            <param name="SurveyName">Name of the survey.</param>
            <param name="FormsProEligibilityId">This ID is used to render survey.</param>
            <param name="Locale">Survey localization.</param>
        </member>
        <member name="O:Page::System#Feedback#Satisfaction Survey">
            <summary>
            Displays the satisfaction survey dialog box.
            </summary>
        </member>
        <member name="O:Codeunit::System#Feedback#Satisfaction Survey Mgt#">
            <summary>
            Management codeunit that exposes various functions to work with Satisfaction Survey.
            </summary>
        </member>
        <member name="M:Codeunit::System#Feedback#Satisfaction Survey Mgt#.TryShowSurvey:Boolean">
            <summary>
            Tries to show the satisfaction survey dialog to the current user.
            The survey is only shown if the user is chosen for the survey.
            The method sends the request to the server and checks the response to check if the user is chosen for the survey.
            </summary>
            <returns>True if the survey is shown, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Feedback#Satisfaction Survey Mgt#.TryShowSurvey(Integer,Text):Boolean">
            <summary>
            Tries to show the satisfaction survey dialog to the current user.
            Decision to show the survey or not is based on the response from the server on the check request.
            </summary>
            <param name="Status">Response status code</param>
            <param name="Response">Response body</param>
            <returns>True if the survey is shown, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Feedback#Satisfaction Survey Mgt#.TryGetCheckUrl(Text@):Boolean">
            <summary>
            Gets the URL of the request to the server for checking if the dialog has to be presented to the current user.
            </summary>
            <param name="Url">The URL of the request to the server for checking if the dialog has to be presented to the current user.</param>
            <returns>True if the check URL is valid, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Feedback#Satisfaction Survey Mgt#.GetRequestTimeoutAsync:Integer">
            <summary>
            Gets the asynchronous request timeout.
            </summary>
            <returns>The asynchronous request timeout in milliseconds.</returns>
        </member>
        <member name="M:Codeunit::System#Feedback#Satisfaction Survey Mgt#.ResetState:Boolean">
            <summary>
            Deletes the survey state and deactivates the survey for all users.
            </summary>
            <returns>True if the survey is deactivated for all users, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Feedback#Satisfaction Survey Mgt#.ResetCache:Boolean">
            <summary>
            Resets the the cached survey parameters.
            </summary>
            <returns>True if the cached survey parameters are reset, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Feedback#Satisfaction Survey Mgt#.ActivateSurvey:Boolean">
            <summary>
            Activates a try to show the survey for the current user.
            </summary>
            <returns>True if the survey state has been changed from inactive to active, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Feedback#Satisfaction Survey Mgt#.DeactivateSurvey:Boolean">
            <summary>
            Deactivates a try to show the survey for the current user.
            </summary>
            <returns>True if the survey state has been changed from active to inactive, false otherwise.</returns>
        </member>
        <member name="EV:">
            <summary>
            Event raised when addin is done loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when error occurs
            </summary>
            <param name="Error">Error name</param>
            <param name="Description">Description of the error.</param>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired when the control add-in should be refreshed.
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Automation#FlowIntegration.Initialize(Text,Text,Text)">
            <summary>
            Function that initializes the Flow API
            </summary>
            <param name="HostName">Flow service url needed by Flow API.</param>
            <param name="Locale">Four-letter language and region code.</param>
            <param name="FlowServiceToken">Microsoft Flow Service Access Token.</param>
        </member>
        <member name="M:ControlAddIn::System#Automation#FlowIntegration.LoadFlows(Text)">
            <summary>
            Function that loads the embedded Flow into a container on a webpage
            </summary>        
            <param name="EnvironmentId">Flow Environmnet ID</param>  
        </member>
        <member name="M:ControlAddIn::System#Automation#FlowIntegration.LoadTemplates(Text,Text,Text,Text)">
            <summary>
            Function that loads embedded Flow templates into a container on a webpage
            </summary>
            <param name="EnvironmentId">Flow Environmnet ID</param>
            <param name="SearchTerm">Filters templates matching the search term</param>
            <param name="PageSize">Number of templates to be displayed in the container</param>
            <param name="Destination">Determines page that opens when one selects a template</param>
        </member>
        <member name="O:ControlAddIn::System#Media#VideoPlayer">
            <summary>
            MSN video player
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Raised when addin is ready
            </summary>
        </member>
        <member name="M:ControlAddIn::System#Media#VideoPlayer.SetFrameAttribute(Text,Text)">
            <summary>
            Used to set the attribute to control how video is played
            </summary>
            <param name="AttributeName">
            The name of the attribute
            </param>
            <param name="AttributeValue">
            Value of the attribute
            </param>
        </member>
        <member name="M:ControlAddIn::System#Media#VideoPlayer.RemoveAttribute(Text)">
            <summary>
            Removes specified attribute
            </summary>
            <param name="AttributeName">
            The name of the attribute
            </param>
        </member>
        <member name="M:ControlAddIn::System#Media#VideoPlayer.SetWidth(Integer)">
            <summary>
            Set prefered video width
            </summary>
            <param name="VideoWidth">
            Width of the video
            </param>
        </member>
        <member name="M:ControlAddIn::System#Media#VideoPlayer.SetHeight(Integer)">
            <summary>
            Set Video Height
            </summary>
            <param name="videoHeight">Video Height</param>
        </member>
        <member name="O:Page::System#Media#Product Videos">
            <summary>This page shows all registered videos.</summary>
        </member>
        <member name="O:Codeunit::System#Media#Video">
            <summary> Lists and enables playing of available videos.</summary>
        </member>
        <member name="M:Codeunit::System#Media#Video.Play(Text)">
            <summary> Use a link to display a video in a new page. </summary>
            <param name="Url"> The link to the video.</param>
        </member>
        <member name="M:Codeunit::System#Media#Video.Register(Guid,Text[250],Text[2048])">
            <summary> Adds a link to a video to the Product Videos page.
            </summary>
            <param name="AppID"> The ID of the extension that registers this video.</param>
            <param name="Title"> The title of the video.</param>
            <param name="VideoUrl"> The link to the video.</param>
        </member>
        <member name="M:Codeunit::System#Media#Video.Register(Guid,Text[250],Text[2048],Enum::System#Media#Video Category)">
            <summary> Adds a link to a video to the Product Videos page.
            </summary>
            <param name="AppID"> The ID of the extension that registers this video.</param>
            <param name="Title"> The title of the video.</param>
            <param name="VideoUrl"> The link to the video.</param>
            <param name="Category"> The video category.</param>
        </member>
        <member name="M:Codeunit::System#Media#Video.Register(Guid,Text[250],Text[2048],Integer,Guid)">
            <summary> Adds a link to a video to the Product Videos page.
            </summary>
            <param name="AppID"> The ID of the extension that registers this video.</param>
            <param name="Title"> The title of the video.</param>
            <param name="VideoUrl"> The link to the video.</param>
            <param name="TableNum"> The table number of the record that is the source of this video.</param>
            <param name="SystemId"> The system id of the record related to this video. This is
            used to raise the OnVideoPlayed event with that record once the video is
            played.</param>
        </member>
        <member name="M:Codeunit::System#Media#Video.Register(Guid,Text[250],Text[2048],Enum::System#Media#Video Category,Integer,Guid)">
            <summary> Adds a link to a video to the Product Videos page.
            </summary>
            <param name="AppID"> The ID of the extension that registers this video.</param>
            <param name="Title"> The title of the video.</param>
            <param name="VideoUrl"> The link to the video.</param>
            <param name="Category"> The video category.</param>
            <param name="TableNum"> The table number of the record that is the source of this video.</param>
            <param name="SystemId"> The system id of the record related to this video. This is
            used to raise the OnVideoPlayed event with that record once the video is
            played.</param>
        </member>
        <member name="M:Codeunit::System#Media#Video.Show(Enum::System#Media#Video Category)">
            <summary>
            Show all videos that belong to a given category.
            </summary>
            <param name="Category">The category to filter the videos by.</param>
        </member>
        <member name="M:Codeunit::System#Media#Video.GetTemporaryRecord(Product Video Buffer@)">
            <summary> Gets the data for the video list that displays the content on the Product Videos page. </summary>
            <param name="TemporaryProductVideoBuffer"> The new record to which the data is
            copied.</param>
        </member>
        <member name="M:Codeunit::System#Media#Video.OnRegisterVideo">
            <summary> Notifies the subscribers that they can add links to videos to the Product Videos page.</summary>
        </member>
        <member name="M:Codeunit::System#Media#Video.OnVideoPlayed(Integer,Guid)">
            <summary> Notifies the subscribers that they can act on the source record when a related video is played.</summary>
            <param name = "TableNum">The table number of the source record.</param>
            <param name = "SystemID">The surrogate key of the source record.</param>
        </member>
        <member name="O:Enum::System#Media#Video Category">
            <summary>This enum is the category under which videos can be classified.</summary>
            <remarks>Extensions can extend this enum to add custom categories.</remarks>
        </member>
        <member name="E:Enum::System#Media#Video Category.Uncategorized">
            <summary>
            A default category, specifying that the video is not categorized.
            </summary>
        </member>
        <member name="O:Page::System#Media#Video Link">
            <summary>This page shows the video playing in Business Central.</summary>
        </member>
        <member name="O:Codeunit::System#DataAdministration#Media Cleanup">
            <summary>
            Provides an interface for cleaning up Media
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Media Cleanup.GetDetachedTenantMedia(Tenant Media@,Boolean):Boolean">
            <summary>
            Returns a list of detached tenant media. This media may be detached by itself or have an detached Media Set pointing to them.
            </summary>
            <param name="TempTenantMedia">The detached media. Must be a temporary table.</param>
            <param name="LoadMediaContent">Whether to copy over all media content. This may cause the call to be very expensive.</param>
            <returns>Whether all detached media were loaded into the Tenant Media Record. To prevent excessive waiting times, at most 10.000 records are loaded.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Media Cleanup.GetDetachedTenantMedia(Tenant Media@,Boolean,Integer):Boolean">
            <summary>
            Returns a list of detached tenant media. This media may be detached by itself or have an detached Media Set pointing to them.
            </summary>
            <param name="TempTenantMedia">The detached media. Must be a temporary table.</param>
            <param name="LoadMediaContent">Whether to copy over all media content. This may cause the call to be very expensive.</param>
            <param name="RecordLimit">Specifies the maximum amount of records to load. It's recommended to not set this too high.</param>
            <returns>Whether all detached media were loaded into the Tenant Media Record.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Media Cleanup.GetTenantMediaFromDetachedMediaSet(Tenant Media@,Boolean):Boolean">
            <summary>
            Returns a list of detached tenant media. This media may be detached by itself or have an detached Media Set pointing to them.
            </summary>
            <param name="TempTenantMedia">The detached media. Must be a temporary table.</param>
            <param name="LoadMediaContent">Whether to copy over all media content. This may cause the call to be very expensive.</param>
            <returns>Whether all detached media were loaded into the Tenant Media Record. To prevent excessive waiting times, at most 100.000 records are loaded.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Media Cleanup.GetTenantMediaFromDetachedMediaSet(Tenant Media@,Boolean,Integer):Boolean">
            <summary>
            Returns a list of detached tenant media. This media may be detached by itself or have an detached Media Set pointing to them.
            </summary>
            <param name="TempTenantMedia">The detached media. Must be a temporary table.</param>
            <param name="LoadMediaContent">Whether to copy over all media content. This may cause the call to be very expensive.</param>
            <param name="RecordLimit">Specifies the maximum amount of records to load. It's recommended to not set this too high.</param>
            <returns>Whether all detached media were loaded into the Tenant Media Record.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Media Cleanup.DownloadTenantMedia(Guid):Boolean">
            <summary>
            Downloads the content of the specified tenant media id.
            </summary>
            <param name="MediaId">ID of the tenant media.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Media Cleanup.DeleteDetachedTenantMedia(Tenant Media@)">
            <summary>
            Deletes the specified Tenant Media records specified in the temporary record if it is detached.
            </summary>
            <param name="TempTenantMedia">The list of media that should be deleted. Must be a temporary table.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Media Cleanup.DeleteDetachedTenantMediaSet">
            <summary>
            Deletes all detached tenant media sets.
            Note: This function will delete detached media set in batches of 10 and commit in between each batch.
            This is to ensure we don't get stuck always trying to delete the same media and time out.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Media Cleanup.DeleteDetachedTenantMedia">
            <summary>
            Deletes all detached tenant media.
            Note: This function will delete detached media in batches of 100 and commit in between each batch.
            This is to ensure we don't get stuck always trying to delete the same media and time out.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Media Cleanup.ScheduleCleanupDetachedMedia">
            <summary>
            Schedules a background task which will remove both detached Tenant Media and detached Tenant Media Set.
            If user cannot schedule tasks, will suggest running the task in the foreground.
            </summary>
        </member>
        <member name="O:Codeunit::System#DataAdministration#Data Archive">
            <summary>
            Exposes functionality to archive / save data before deleting it.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.Create(Text):Integer">
            <summary>
            Creates a new archive entry.
            </summary>
            <param name="Description">The name or description for the archive entry. Will typically be the calling object name.</param>
            <error>The archive has already been created or opened.</error>
            <returns>The entry no. of the created archive entry - if any.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.CreateAndStartLoggingDeletions(Text):Integer">
            <summary>
            Creates a new archive entry, resets the session and starts logging all new deletions.
            </summary>
            <param name="Description">The name or description for the archive entry. Will typically be the calling object name.</param>
            <returns>The entry no. of the created archive entry - if any.</returns>
            <error>The archive has already been created or opened.</error>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.Open(Integer)">
            <summary>
            Opens an existing archive entry.
            </summary>
            <param name="ID">The ID of the archive entry.</param>
            <error>The archive has already been created or opened.</error>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.Save">
            <summary>
            Saves and closes the currently open archive entry.
            </summary>
            <error>The archive must be created or opened first.</error>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.DiscardChanges">
            <summary>
            Discards any additions and closes the currently open archive entry.
            </summary>
            <error>The archive must be created or opened first.</error>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.SaveRecord(Variant)">
            <summary>
            Saves the supplied record to the currently open archive entry.
            </summary>
            <param name="RecordVariant">The record will be copied to the archive.</param>
            <error>The archive must be created or opened first.</error>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.SaveRecord(RecordRef@)">
            <summary>
            Saves the supplied record to the currently open archive entry.
            </summary>
            <param name="RecordRef">The record will be copied to the archive.</param>
            <error>The archive must be created or opened first.</error>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.SaveRecords(RecordRef@)">
            <summary>
            Saves all records within the filters to the currently open archive entry.
            </summary>
            <error>The archive must be created or opened first.</error>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.StartSubscriptionToDelete">
            <summary>
            Starts subscription to the OnDatabaseDelete trigger and calls SaveRecord with any deleted record.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.StartSubscriptionToDelete(Boolean)">
            <summary>
            Starts subscription to the OnDatabaseDelete trigger and calls SaveRecord with any deleted record.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.StopSubscriptionToDelete">
            <summary>
            Stops the subscription to the OnDatabaseDelete trigger.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.DataArchiveProviderExists:Boolean">
            <summary>
            Informs the consumer app whether there is a provider for this interface.
            </summary>
            <returns>Returns true if a provider for this interface is installed.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.SetDataArchiveProvider(Interface::System#DataAdministration#Data Archive Provider@)">
            <summary>
            Checks if there is an implementation of an IDataArchiveProvider
            </summary>
            <param name="Exists">A subscriber should set the value to true if it is an implementation of IDataArchiveProvider.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.OnDataArchiveImplementationExists(Boolean@)">
            <summary>
            Checks if there is an implementation of an IDataArchiveProvider
            </summary>
            <param name="Exists">A subscriber should set the value to true if it is an implementation of IDataArchiveProvider.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Data Archive.OnDataArchiveImplementationBind(Interface::System#DataAdministration#Data Archive Provider@,Boolean@)">
            <summary>
            Asks for an implementation of an IDataArchiveProvider
            </summary>
            <param name="ResetSession">If true, then the session will be reset. This can be necessary if a deletion has already been made on any table that should be archived.</param>
            <param name="DataArchiveProvider">The data archive provider that should be called from the OnDelete Events. Typically it will be 'this' codeunit.</param>
            <param name="IsBound">The first subscriber should set this parameter to true. If it was already true, the code should just exit immediately without binding a provider.</param>
        </member>
        <member name="O:Interface::System#DataAdministration#Data Archive Provider">
            <summary>
            Exposes an interface for Data Archive.
            Data Archive is called from application objects to store data.
            </summary>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.Create(Text):Integer">
            <summary>
            Creates a new archive entry.
            </summary>
            <param name="Description">The name or description for the archive entry. Will typically be the calling object name.</param>
            <returns>The entry no. of the created archive entry - if any.</returns>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.Open(Integer)">
            <summary>
            Opens an existing archive entry.
            </summary>
            <param name="ID">The ID of the archive entry.</param>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.Save">
            <summary>
            Saves and closes the currently open archive entry.
            </summary>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.DiscardChanges">
            <summary>
            Discards any additions and closes the currently open archive entry.
            </summary>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.SaveRecord(RecordRef@)">
            <summary>
            Saves the supplied record to the currently open archive entry.
            </summary>
            <param name="RecordRef">The record will be copied to the archive.</param>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.SaveRecord(Variant)">
            <summary>
            Saves the supplied record to the currently open archive entry.
            </summary>
            <param name="RecordVar">The record will be copied to the archive.</param>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.SaveRecords(RecordRef@)">
            <summary>
            Saves all records within the filters to the currently open archive entry.
            </summary>
            <param name="RecordRef">All records for the RecRef within the filters will be copied to the archive.</param>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.StartSubscriptionToDelete">
            <summary>
            Starts subscription to the OnDatabaseDelete trigger and calls SaveRecord with any deleted record.
            </summary>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.StartSubscriptionToDelete(Boolean)">
            <summary>
            Starts subscription to the OnDatabaseDelete trigger and calls SaveRecord with any deleted record.
            </summary>
            <param name="ResetSession">If true, then the session will be reset. This can be necessary if a deletion has already been made on any table that should be archived.</param>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.StopSubscriptionToDelete">
            <summary>
            Stops the subscription to the OnDatabaseDelete trigger.
            </summary>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.DataArchiveProviderExists:Boolean">
            <summary>
            Informs the consumer app whether there is a provider for this interface.
            </summary>
            <returns>Returns true if a provider for this interface is installed.</returns>
        </member>
        <member name="M:Interface::System#DataAdministration#Data Archive Provider.SetDataArchiveProvider(Interface::System#DataAdministration#Data Archive Provider@)">
            <summary>
            Sets the instance of the provider. Needed for self-reference.
            </summary>
            <param name="NewDataArchiveProvider">The global instance of IDataArchiveProvider.</param>
        </member>
        <member name="O:Codeunit::System#DataAdministration#Environment Cleanup">
            <summary>
            Codeunit that raises an event that could be used to clean up data when copying a company to new environment.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Environment Cleanup.OnClearCompanyConfig(Text,Enum::System#DataAdministration#Environment Type,Enum::System#DataAdministration#Environment Type)">
            <summary>
            Subscribe to this event to clean up company-specific data when copying to a new environment.
            </summary>
            <param name="CompanyName">The name of the company.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Environment Cleanup.OnClearDatabaseConfig(Enum::System#DataAdministration#Environment Type,Enum::System#DataAdministration#Environment Type)">
            <summary>
            Subscribe to this event to clean up environment-specific data when copying to a new environment.
            </summary>
        </member>
        <member name="O:Enum::System#DataAdministration#Environment Type">
            <summary>
            Environment type
            </summary>
        </member>
        <member name="O:PermissionSet::System#DataAdministration#Retention Policy - View">
            <summary>
            this is the minimum permission set needed to install an extension that adds a retention policy.
            </summary>
        </member>
        <member name="O:PermissionSet::System#DataAdministration#Retention Pol# View">
            <summary>
            this is the minimum permission set needed to install an extension that adds a retention policy.
            </summary>
        </member>
        <member name="O:Page::System#DataAdministration#Company Size Cache Part">
            <summary>
            The Company Size Cache Part page shows information about company sizes.
            </summary>
        </member>
        <member name="O:Page::System#DataAdministration#Table Information">
            <summary>
            The Table Information page shows information about database tables.
            </summary>
        </member>
        <member name="O:Codeunit::System#DataAdministration#Table Information Cache">
            <summary>
            Exposes functionality to manage the Table Information Cache table and the Company Size Cache table.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Table Information Cache.OnRun">
            <summary>
            Refreshes the data in the Table Information Cache and Company Size Cache tables for all companies.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Table Information Cache.RefreshTableInformationCache">
            <summary>
            Refreshes the data in the Table Information Cache and Company Size Cache tables for all companies.
            </summary>
        </member>
        <member name="O:Page::System#DataAdministration#Table Information Cache Part">
            <summary>
            The Table Information Cache Part page shows information about database tables.
            </summary>
        </member>
        <member name="O:Codeunit::System#DataAdministration#Apply Retention Policy">
            <summary>
            This codeunit provides functions to apply a retention policy.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Apply Retention Policy.OnRun">
            <summary>
            Applies all enabled, non-manual retention polices. This will delete records according to the settings defined in the Retention Policy Setup table.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Apply Retention Policy.ApplyRetentionPolicy(Boolean)">
            <summary>
            Applies all enabled, non-manual retention polices. This will delete records according to the settings defined in the Retention Policy Setup table.
            </summary>
            <param name="UserInvokedRun">Use this value to indicate whether the user initiated the function call or an automated process did. This value is later passed in the event OnApplyRetentionPolicyRecordLimitExceeded.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Apply Retention Policy.ApplyRetentionPolicy(Retention Policy Setup,Boolean)">
            <summary>
            Applies the given Retention Policy. This will delete records according to the settings defined in the Retention Policy Setup table.
            </summary>
            <param name="RetentionPolicySetup">This is the setup record which defines the retention policy to apply.</param>
            <param name="UserInvokedRun">Use this value to indicate whether the user initiated the functioncall or an automated process did. This value is later passed in the event OnApplyRetentionPolicyRecordLimitExceeded.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Apply Retention Policy.GetExpiredRecordCount(Retention Policy Setup):Integer">
            <summary>
            Returns the number of expired records for the given Retention Policy Setup record. These records would be deleted if the Retention Policy was applied.
            </summary>
            <param name="RetentionPolicySetup">This is the setup record which defines the retention policy for which the expired records will be counted.</param>
            <returns>The number of records which are expired.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Apply Retention Policy.GetExpiredRecordCount(Retention Policy Setup,Date@):Integer">
            <summary>
            Returns the number of expired records for the given Retention Policy Setup record. These records would be deleted if the Retention Policy was applied.
            </summary>
            <param name="RetentionPolicySetup">This is the setup record which defines the retention policy for which the expired records will be counted.</param>
            <param name="ExpiredRecordExpirationDate">The earliest expiration date for which there are more expired records than the maximum to be deleted in a single run.</param>
            <returns>The number of records which are expired.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Apply Retention Policy.SetWhereOlderExpirationDateFilter(Integer,Date,RecordRef@,Integer,Date)">
            <summary>
            This method places a filter on the record reference where records are older than the ExpirationDate. The filter excludes any record where the date field specified in DateFieldNo has no value.
            </summary>
            <param name="DateFieldNo">The date or datetime field the filter will be placed on.</param>
            <param name="ExpirationDate">The expiration date used in the filter.</param>
            <param name="RecordRef">The record reference on which the filter will be placed.</param>
            <param name="FilterGroup">The filtergroup in which the filter will be placed.</param>
            <param name="NullDateReplacementValue">The date to be used to determine whether a record has expired when the date or datetime value of the record is 0D.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Apply Retention Policy.SetWhereNewerExpirationDateFilter(Integer,Date,RecordRef@,Integer,Date)">
            <summary>
            This method places a filter on the record reference where records are newer than the ExpirationDate. The filter excludes any record where the date field specified in DateFieldNo has no value.
            </summary>
            <param name="DateFieldNo">The date or datetime field the filter will be placed on.</param>
            <param name="ExpirationDate">The expiration date used in the filter.</param>
            <param name="RecordRef">The record reference on whic the filter will be placed.</param>
            <param name="FilterGroup">The filtergroup in which the filter will be placed.</param>
            <param name="NullDateReplacementValue">The date to be used to determine whether a record has expired when the date or datetime value of the record is 0D.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Apply Retention Policy.SetSingleDateExpirationDateFilter(Integer,Date,RecordRef@,Integer,Date)">
            <summary>
            This method places a filter on the record reference where records are expired one day at the expiration date. The filter excludes any record where the date field specified in DateFieldNo has no value.
            </summary>
            <param name="DateFieldNo">The date or datetime field the filter will be placed on.</param>
            <param name="ExpirationDate">The expiration date used in the filter.</param>
            <param name="RecordRef">The record reference on whic the filter will be placed.</param>
            <param name="FilterGroup">The filtergroup in which the filter will be placed.</param>
            <param name="NullDateReplacementValue">The date to be used to determine whether a record has expired when the date or datetime value of the record is 0D.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Apply Retention Policy.OnApplyRetentionPolicyRecordLimitExceeded(Integer,Integer,Boolean,Boolean,Boolean@)">
            <summary>
            This event is raised once the maximum number of records which can be deleted in a single run is reached. The limit is defined internally and cannot be changed. The event can be used to schedule a new run to delete the remaining records.
            </summary>
            <param name="CurrTableId">Specifies the Id of the table on which the limit was reached.</param>
            <param name="NumberOfRecordsRemainingToBeDeleted">Show the number of records remaining to be deleted for the table specified in CurrTableId.</param>
            <param name="ApplyAllRetentionPolicies">Specifies where the interupted run was for all retention policies or only one retention policy.</param>
            <param name="UserInvokedRun">Specifies whether the run was initiated by a user or not.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Apply Retention Policy.OnApplyRetentionPolicyIndirectPermissionRequired(RecordRef@,Boolean@)">
            <summary>
            This event is raised when the user applying the retention policy has indirect permissions to delete records in the table.
            A subscriber to this event with indirect permissions can delete the records on behalf of the user.
            </summary>
            <param name="RecRef">The record reference which contains the expired records to be deleted.</param>
            <param name="Handled">Indicates whether the event has been handled.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Apply Retention Policy Impl#.IsSystemEnabledPolicy(Retention Policy Setup):Boolean">
            <summary>
            Determines if the retention policy was automatically created and enabled during install / upgrade and no user has modified it since.
            </summary>
            <param name="RetentionPolicySetup">The retention policy setup record.</param>
            <returns>True if the retention policy was automatically created and enabled during install / upgrade and no user has modified it since. Otherwise, false.</returns>
        </member>
        <member name="O:Enum::System#DataAdministration#Reten# Pol# Deleting">
            <summary>
            This enum is used to determine the implementation codeunit called to delete expired records when applying a retention policy.
            </summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Reten# Pol# Deleting.Default">
            <summary>
            The default implementation.
            </summary>
        </member>
        <member name="O:Interface::System#DataAdministration#Reten# Pol# Deleting">
            <summary>
            The Reten. Pol. Deleting interface is used to set filters on the table for which a retention policy is applied.
            </summary>
        </member>
        <member name="M:Interface::System#DataAdministration#Reten# Pol# Deleting.DeleteRecords(RecordRef@,Reten# Pol# Deleting Param@)">
            <summary>
            This function deletes the expired records for the retention policy according to the settings in the parameter table.
            </summary>
            <param name="RecordRef">The record reference with expired records for the retention policy.</param>
            <param name="RetenPolDeletingParam">The parameter table for this run of apply retention policy.</param>
        </member>
        <member name="O:Table::System#DataAdministration#Reten# Pol# Deleting Param">
             <summary>
             The table is used as a parameter table for the DeleteRecords method on the Reten. Pol Deleting interface.
            
             if "Indirect Permission Required" is true and the implementation does not have the required indirect permissions,
             then "Skip Event Indirect Perm. Req." should be set to false. This will allow a subscriber to handle the deletion.
            
             if there are more records to be deleted than as indicated by "Max. Number of Rec. to Delete",
             then only a number of records equal to "Max. Number of Rec. to Delete" should be deleted.
             In the case where not all records were deleted, "Skip Event Rec. Limit Exceeded" should be set to false. This
             will allow either a subscriber or the user to schedule another run to delete the remaining records.
            
             "Total Max. Nr. of Rec. to Del." is provided for information only. This is the maximum number of records recommended to delete
             in a single run of Apply Retention Policies.
            
             "User Invoked Run" is provided for information only.
             </summary>
        </member>
        <member name="F:Table::System#DataAdministration#Reten# Pol# Deleting Param.Primary Key[10]">
            <summary>
            Identifies the record in the table
            </summary>
        </member>
        <member name="F:Table::System#DataAdministration#Reten# Pol# Deleting Param.Indirect Permission Required">
            <summary>
            Indicates that indirect permissions are required to delete expired records for the retention policy.
            </summary>
        </member>
        <member name="F:Table::System#DataAdministration#Reten# Pol# Deleting Param.Skip Event Indirect Perm# Req#">
            <summary>
            if set to true the event OnApplyRetentionPolicyIndirectPermissionRequired will not be raised.
            </summary>
        </member>
        <member name="F:Table::System#DataAdministration#Reten# Pol# Deleting Param.Max# Number of Rec# to Delete">
            <summary>
            Indicates the maximum number of records to be deleted.
            </summary>
        </member>
        <member name="F:Table::System#DataAdministration#Reten# Pol# Deleting Param.Skip Event Rec# Limit Exceeded">
            <summary>
            if set to true the event OnApplyRetentionPolicyRecordLimitExceeded will not be raised.
            </summary>
        </member>
        <member name="F:Table::System#DataAdministration#Reten# Pol# Deleting Param.Total Max# Nr# of Rec# to Del#">
            <summary>
            Indicates the maximum number of records that can be deleted at the same time accross all retention policies
            </summary>
        </member>
        <member name="F:Table::System#DataAdministration#Reten# Pol# Deleting Param.User Invoked Run">
            <summary>
            If true, indicates that user is applying the retention policies manually.
            If false, the retention policies are applied by a scheduled task.
            </summary>
        </member>
        <member name="F:Table::System#DataAdministration#Reten# Pol# Deleting Param.Record Count Before Delete">
            <summary>
            The number of records in the table before the deletion.
            The count is calculated once before passing this table to the deletion implementation and is used to limit the number of records to be deleted as well as record the number of records actually deleted.
            </summary>
        </member>
        <member name="O:Enum::System#DataAdministration#Reten# Pol# Filtering">
            <summary>
            This enum is used to determine the implementation codeunit called when filtering a table for expired records when applying a retention policy.
            </summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Reten# Pol# Filtering.Default">
            <summary>
            The default implementation.
            </summary>
        </member>
        <member name="O:Interface::System#DataAdministration#Reten# Pol# Filtering">
            <summary>
            The Reten. Pol. Filtering interface is used to set filters on the table for which a retention policy is applied.
            </summary>
        </member>
        <member name="M:Interface::System#DataAdministration#Reten# Pol# Filtering.ApplyRetentionPolicyAllRecordFilters(Retention Policy Setup,RecordRef@,Reten# Pol# Filtering Param@):Boolean">
            <summary>
            This method is called when the retention policy applies to all records of the table. The FilterRecordRef must contain filters whe returned.
            </summary>
            <param name="RetentionPolicySetup">The retention policy for which filters are applied.</param>
            <param name="FilterRecordRef">A RecordRef of the table on which the filters are applied.</param>
            <param name="RetenPolFilteringParam">The parameter table for this run of apply retention policy.</param>
            <returns>Returns true when there are expired records in the filters</returns>
        </member>
        <member name="M:Interface::System#DataAdministration#Reten# Pol# Filtering.ApplyRetentionPolicySubSetFilters(Retention Policy Setup,RecordRef@,Reten# Pol# Filtering Param@):Boolean">
            <summary>
            This method is called when the retention policy defines subsets of records. The records in FilterRecordRef must be marked to indicate they are part of the union of all subsets.
            </summary>
            <param name="RetentionPolicySetup">The retention policy for which filters are applied.</param>
            <param name="FilterRecordRef">A RecordRef of the table on which the filters are applied.</param>
            <param name="RetenPolFilteringParam">The parameter table for this run of apply retention policy.</param>
            <returns>Returns true when there are expired records in the filters</returns>
        </member>
        <member name="M:Interface::System#DataAdministration#Reten# Pol# Filtering.HasReadPermission(Integer):Boolean">
            <summary>
            This method is used to determine whether the implementation has read permission to the table specified in TableId.
            The permissions depend on both the user and the implementation codeunit.
            If the combination of user and implementation codeunit do not have read permission to the table, the retention policy will not be applied.
            A notification will be shown on the Retention Policy Setup card.
            </summary>
            <param name="TableId">The ID of the table for a retention policy is defined</param>
            <returns>Returns true if the records in the table can be read.</returns>
            <example>
               procedure HasReadPermission(TableId: Integer): Boolean
               var
                   RecRef: RecordRef;
               begin
                   RecRef.Open(TableId);
                   exit(RecRef.ReadPermission())
               end;
            </example>
        </member>
        <member name="M:Interface::System#DataAdministration#Reten# Pol# Filtering.Count(RecordRef):Integer">
            <summary>
            This method is to count the records in the table specified in the RecRef.
            The method is only called when the base code does not have read permission to the table.
            </summary>
            <param name="RecordRef">A record reference.</param>
            <returns>The number of records.</returns>
            <example>
               procedure Count(RecRef:RecordRef): Integer
               begin
                   exit(RecRef.Count())
               end;
            </example>
        </member>
        <member name="O:Table::System#DataAdministration#Reten# Pol# Filtering Param">
            <summary>
            The table is used as a parameter table for the ApplyRetentionPolicyAllRecordFilters and ApplyRetentionPolicySubSetFilters methods on the Reten. Pol Filtering interface.
            </summary>
        </member>
        <member name="F:Table::System#DataAdministration#Reten# Pol# Filtering Param.Primary Key[10]">
            <summary>
            Identifies the record in the table
            </summary>
        </member>
        <member name="F:Table::System#DataAdministration#Reten# Pol# Filtering Param.Null Date Replacement value">
            <summary>
            The date to be used to determine whether a record has expired when the date or datetime value of the record is 0D.
            </summary>
        </member>
        <member name="F:Table::System#DataAdministration#Reten# Pol# Filtering Param.Expired Record Expiration Date">
            <summary>
            The earliest expiration date for which there are more expired records than the maximum to be deleted in a single run.
            </summary>
        </member>
        <member name="O:Interface::System#DataAdministration#Retention Period">
            <summary>
            The retention period interface provides functions to retrieve the date formula and calculate the expiration date based on a retention period record.
            </summary>
        </member>
        <member name="M:Interface::System#DataAdministration#Retention Period.RetentionPeriodDateFormula(Retention Period):Text">
            <summary>Returns the date formula for a given retention period.</summary>
            <param name="RetentionPeriod">The record that has the retention period for which you want the date formula.</param>
            <returns>The date formula as a string in a language-independent format.</returns>
        </member>
        <member name="M:Interface::System#DataAdministration#Retention Period.RetentionPeriodDateFormula(Retention Period,Boolean):Text">
            <summary>Returns the date formula for a given retention period.</summary>
            <param name="RetentionPeriod">The record that has the retention period for which you want the date formula.</param>
            <param name="Translated">Indicates whether to return the date formula in a language-independent format or in the current language format.</param>
            <returns>The date formula as a string.</returns>
        </member>
        <member name="M:Interface::System#DataAdministration#Retention Period.CalculateExpirationDate(Retention Period):Date">
            <summary>Returns the expiration date for a given retention period.</summary>
            <param name="RetentionPeriod">The record that has the retention period for which you want the expiration date. By default, the current date is used.</param>
            <returns>The expiration date.</returns>
        </member>
        <member name="M:Interface::System#DataAdministration#Retention Period.CalculateExpirationDate(Retention Period,Date):Date">
            <summary>Returns the expiration date for a given retention period.</summary>
            <param name="RetentionPeriod">The record that has the retention period for which you want the expiration date.</param>
            <param name="UseDate">The expiration date is calculated based on this date.</param>
            <returns>The expiration date.</returns>
        </member>
        <member name="M:Interface::System#DataAdministration#Retention Period.CalculateExpirationDate(Retention Period,DateTime):DateTime">
            <summary>Returns the expiration date and time for a given retention period.</summary>
            <param name="RetentionPeriod">The record that has the retention period for which you want the expiration date and time.</param>
            <param name="UseDateTime">The expiration date and time are calculated based on this date and time.</param>
            <returns>The expiration date and time.</returns>
        </member>
        <member name="O:Table::System#DataAdministration#Retention Period">
            <summary>
            The Retention Periods table is used to define retention periods.
            You define a retention period by selecting one of the default values in the Retention Period field, or by selecting the Custom value and providing a date formula.
            The date formula must result in a date that is at least two days before the current date.
            </summary>
        </member>
        <member name="O:Enum::System#DataAdministration#Retention Period Enum">
            <Summary>
            Enum that defines standard retention periods.
            </Summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Period Enum.Never Delete">
            <Summary>
            The "Never Delete" value results in a retention period where records are never removed.
            </Summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Period Enum.Custom">
            <Summary>
            The Custom value can be used to create user defined retention periods.
            </Summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Period Enum.1 Week">
            <Summary>
            The "1 Week" value results in a retention period where records that are older than seven days are deleted.
            </Summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Period Enum.28 Days">
            <Summary>
            The "28 Days" value results in a retention period where records that are older than twenty-eight days are deleted.
            </Summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Period Enum.1 Month">
            <Summary>
            The "1 Month" value results in a retention period where records that are older than one month are deleted.
            </Summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Period Enum.3 Months">
            <Summary>
            The "3 Months" value results in a retention period where records that are older than three months are deleted.
            </Summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Period Enum.6 Months">
            <Summary>
            The "6 Months" value results in a retention period where records that are older than six months are deleted.
            </Summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Period Enum.1 Year">
            <Summary>
            The "1 Year" value results in a retention period where records that are older than one year are deleted.
            </Summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Period Enum.3 Years">
            <Summary>
            The "3 Years" value results in a retention period where records that are older than three years are deleted.
            </Summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Period Enum.5 Years">
            <Summary>
            The "5 Years" value results in a retention period where records that are older than five years are deleted.
            </Summary>
        </member>
        <member name="O:Page::System#DataAdministration#Retention Periods">
            <summary>
            List page that contains all of the retention periods that have been defined.
            </summary>
        </member>
        <member name="O:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables">
            <summary>
            This codeunit is used to manage the list of allowed tables for which retention policies can be set up.
            Extensions can only approve the tables they create. Extensions cannot approve tables from other extensions.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.AddAllowedTable(Integer):Boolean">
            <summary>
            Adds a table to the list of allowed tables.
            </summary>
            <param name="TableId">The ID of the table to add.</param>
            <returns>True if the table is in the list of allowed tables. False if the table is not in the list of allowed tables.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.AddAllowedTable(Integer,Integer):Boolean">
            <summary>
            Adds a table to the list of allowed tables.
            </summary>
            <param name="TableId">The ID of the table to add.</param>
            <param name="DefaultDateFieldNo">The number of the date or datetime field used as default to determine the age of records in the table.</param>
            <returns>True if the table is in the list of allowed tables. False if the table is not in the list of allowed tables.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.AddAllowedTable(Integer,Integer,Integer):Boolean">
            <summary>
            Adds a table to the list of allowed tables.
            </summary>
            <param name="TableId">The ID of the table to add.</param>
            <param name="DefaultDateFieldNo">The number of the date or datetime field used as default to determine the age of records in the table.</param>
            <param name="MandatoryMinRetenDays">The minimum number of days records must be kept in the table. </param>
            <returns>True if the table is in the list of allowed tables. False if the table is not in the list of allowed tables.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.AddAllowedTable(Integer,Integer,JsonArray):Boolean">
            <summary>
            Adds a table to the list of allowed tables.
            </summary>
            <param name="TableId">The ID of the table to add.</param>
            <param name="DefaultDateFieldNo">The number of the date or datetime field used as default to determine the age of records in the table.</param>
            <param name="TableFilters">A JsonArray which contains the default table filters for the retention policy</param>
            <returns>True if the table is in the list of allowed tables. False if the table is not in the list of allowed tables.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.AddAllowedTable(Integer,JsonArray):Boolean">
            <summary>
            Adds a table to the list of allowed tables.
            </summary>
            <param name="TableId">The ID of the table to add.</param>
            <param name="TableFilters">A JsonArray which contains the default table filters for the retention policy</param>
            <returns>True if the table is in the list of allowed tables. False if the table is not in the list of allowed tables.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.AddAllowedTable(Integer,Integer,Integer,Enum::System#DataAdministration#Reten# Pol# Filtering,Enum::System#DataAdministration#Reten# Pol# Deleting,JsonArray):Boolean">
            <summary>
            Adds a table to the list of allowed tables.
            </summary>
            <param name="TableId">The ID of the table to add.</param>
            <param name="DefaultDateFieldNo">The number of the date or datetime field used as default to determine the age of records in the table.</param>
            <param name="MandatoryMinRetenDays">The minimum number of days records must be kept in the table.</param>
            <param name="RetenPolFiltering">Determines the implementation used to filter records when applying retention polices.</param>
            <param name="RetenPolDeleting">Determines the implementation used to delete records when applying retention polices.</param>
            <param name="TableFilters">A JsonArray which contains the default table filters for the retention policy</param>
            <returns>True if the table is in the list of allowed tables. False if the table is not in the list of allowed tables.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.AddTableFilterToJsonArray(JsonArray@,Enum::System#DataAdministration#Retention Period Enum,Integer,Boolean,Boolean,RecordRef)">
            <summary>
            This helper method is used to build an array of table filters which will be inserted automatically when creating a retention policy for the allowed table.
            You must first build up the array by calling this helper function and adding all relevant table filter information before passing the JsonArray to the AddAllowedTable method.
            </summary>
            <param name="TableFilters">The JsonArray to which the table filter information will be added.</param>
            <param name="RetentionPeriodEnum">Identifies the retention period for the retention policy table filter.</param>
            <param name="DateFieldNo">The number of the date or datetime field used as to determine the age of records in the table.</param>
            <param name="Enabled">Indicates whether the retention policy line will be enabled.</param>
            <param name="Locked">Indicates whether the retention policy line will be locked. If this parameter is true, the line will also be enabled.</param>
            <param name="RecordRef">A record reference containing the filters to be added to the retention policy setup line.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.AddTableFilterToJsonArray(JsonArray@,DateFormula,Integer,Boolean,Boolean,RecordRef)">
            <summary>
            This helper method is used to build an array of table filters which will be inserted automatically when creating a retention policy for the allowed table.
            You must first build up the array by calling this helper function and adding all relevant table filter information before passing the JsonArray to the AddAllowedTable method.
            </summary>
            <param name="TableFilters">The JsonArray to which the table filter information will be added.</param>
            <param name="RetPeriodCalc">Identifies the retention period dateformula for the retention policy table filter.</param>
            <param name="DateFieldNo">The number of the date or datetime field used as to determine the age of records in the table.</param>
            <param name="Enabled">Indicates whether the retention policy line will be enabled.</param>
            <param name="Locked">Indicates whether the retention policy line will be locked. If this parameter is true, the line will also be enabled.</param>
            <param name="RecordRef">A record reference containing the filters to be added to the retention policy setup line.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.RemoveAllowedTable(Integer):Boolean">
            <summary>
            Removes a table from the list of allowed tables.
            </summary>
            <param name="TableId">The ID of the table to remove.</param>
            <returns>True if the table is not in the list of allowed tables. False if the table is in the list of allowed tables.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.IsAllowedTable(Integer):Boolean">
            <summary>
            Checks whether a table exists in the list of allowed tables.
            </summary>
            <param name="TableId">The table ID to check.</param>
            <returns>True if the table is in the list of allowed tables. False if the table is not in the list of allowed tables.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.GetAllowedTables(List of [Integer]@)">
            <summary>
            Returns the allowed tables as a list.
            </summary>
            <param name="AllowedTables">The allowed tables as a List.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.GetAllowedTables:Text">
            <summary>
            Returns the allowed tables as a filter string.
            </summary>
            <returns>The allowed tables as a filter string.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.GetRetenPolFiltering(Integer):Enum::System#DataAdministration#Reten# Pol# Filtering">
            <summary>
            Returns the enum value set for retention policy filtering. This determines which code will handle the filtering of records when the retention policy for the allowed table is applied.
            </summary>
            <param name="TableId">The table ID of the allowed table.</param>
            <returns>The retention policy filtering enum value.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.GetRetenPolDeleting(Integer):Enum::System#DataAdministration#Reten# Pol# Deleting">
            <summary>
            Returns the enum value set for retention policy deleting. This determines which code will handle the deleting of records when the retention policy for the allowed table is applied.
            </summary>
            <param name="TableId">The table ID of the allowed table.</param>
            <returns>The retention policy deleting enum value.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.GetDefaultDateFieldNo(Integer):Integer">
            <summary>
            Returns the number of the date or datetime field in the list of allowed tables for the given table.
            </summary>
            <param name="TableId">The table ID of the allowed table.</param>
            <returns>The field number of the date or datetime field in the allowed table.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.GetMandatoryMinimumRetentionDays(Integer):Integer">
            <summary>
            Returns the mandatory minimum number of retention days for the given table.
            </summary>
            <param name="TableId">The table ID of the allowed table.</param>
            <returns>The mandatory minimum number of retention days for the allowed table.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.CalcMinimumExpirationDate(Integer):Date">
            <summary>
            Calculates the minimum expiration date for a given allowed table based on the minimum number of retention days and today's date.
            </summary>
            <param name="TableId">The table ID of the allowed table.</param>
            <returns>The minimum expiration date.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tables.OnRefreshAllowedTables">
            <summary>
            This event is called when the user chooses to refresh the allowed tables.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tbl# Impl#.OnVerifyAddtoAllowedList(Integer,Boolean@)">
            <Summary>
            This is an internal event that only this module is allowed to subscribe to. It is raised by a subscriber to the OnBeforeInsertEvent of the Reten. Pol. Allowed Table table.
            The manual subscriber AllowAddtoAllowedList is bound just before the Insert() in procedure AddToAllowedTables.
            These elements combined are to ensure that only procedure AddToAllowedTables can insert into the table.
            </Summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Reten# Pol# Allowed Tbl# Impl#.OnVerifyModifyAllowedList(Integer,Boolean@)">
            <Summary>
            This is an internal event that only this module is allowed to subscribe to. It is raised by a subscriber to the OnBeforeModifyEvent of the Reten. Pol. Allowed Table table.
            The manual subscriber AllowModifyAllowedList is bound just before the Modify() in procedure AddToAllowedTables.
            These elements combined are to ensure that only procedure AddToAllowedTables can modify the table.
            </Summary>
        </member>
        <member name="O:Codeunit::System#DataAdministration#Reten# Pol# Record Ref# Impl#">
            <summary>
            Used to provide indirect permission to retention policies
            </summary>
        </member>
        <member name="O:Codeunit::System#DataAdministration#Retention Policy Log">
            <summary>
            This codeunit provides functions for logging error, warning, and informational messages to the Retention Policy Log Entry table.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Log.LogError(Enum::System#DataAdministration#Retention Policy Log Category,Text[2048])">
            <summary>
            LogError will create an entry in the Retention Policy Log Entry table with Message Type set to Error.
            An error message will be displayed to the user and any changes in the current transaction will be reverted.
            </summary>
            <param name="Category">The category for which to log the message.</param>
            <param name="Message">The message to log.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Log.LogError(Enum::System#DataAdministration#Retention Policy Log Category,Text[2048],Boolean)">
            <summary>
            LogError will create an entry in the Retention Policy Log Entry table with Message Type set to Error.
            If DisplayError is true, an error message will be displayed to the user and any changes in the current transaction will be rolled back.
            If DisplayError is false, no error is displayed, the code continues to run, and no changes are reverted.
            </summary>
            <param name="Category">The category for which to log the message.</param>
            <param name="Message">The message to log.</param>
            <param name="DisplayError">Specifies whether the error is displayed.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Log.LogWarning(Enum::System#DataAdministration#Retention Policy Log Category,Text[2048])">
            <summary>
            LogWarning will create an entry in the Retention Policy Log Entry table with Message Type set to Warning. No message is displayed to the user.
            </summary>
            <param name="Category">The category for which to log the message.</param>
            <param name="Message">The message to log.</param>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Log.LogInfo(Enum::System#DataAdministration#Retention Policy Log Category,Text[2048])">
            <summary>
            LogInfo will create an entry in the Retention Policy Log Entry table with Message Type set to Info. No message is displayed to the user.
            </summary>
            <param name="Category">The category for which to log the message.</param>
            <param name="Message">The message to log.</param>
        </member>
        <member name="O:Enum::System#DataAdministration#Retention Policy Log Category">
            <summary>
            The Retention Policy Log Category is used to categorize log entries by area.
            </summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Policy Log Category.Retention Policy - Allowed Tables">
            <summary>Category used for creating log entries concerning allowed tables.</summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Policy Log Category.Retention Policy - Period">
            <summary>Category used for creating log entries concerning retention period.</summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Policy Log Category.Retention Policy - Setup">
            <summary>Category used for creating log entries concerning retention policy setup.</summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Policy Log Category.Retention Policy - Apply">
            <summary>Category used for creating log entries concerning applying retention policies.</summary>
        </member>
        <member name="O:Page::System#DataAdministration#Retention Policy Log Entries">
            <summary>
            Lists the entries in the Retention Policy Log.
            </summary>
        </member>
        <member name="O:Enum::System#DataAdministration#Retention Policy Log Message Type">
            <summary>
            Specifies the type of log message.
            </summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Policy Log Message Type.Error">
            <summary>Message type used for creating log entries of type Error</summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Policy Log Message Type.Warning">
            <summary>Message type used for creating log entries of type Warning</summary>
        </member>
        <member name="E:Enum::System#DataAdministration#Retention Policy Log Message Type.Info">
            <summary>Message type used for creating log entries of type Info</summary>
        </member>
        <member name="O:Codeunit::System#DataAdministration#PBT Expired Record Count">
             <summary>
             A page background task can call this codeunit to calculate the number of expired records for a retention policy.
            
             The PageBackgroundParameters dictionary must contain a key called SystemId, and the value of the key must be the SystemId of the Retention Policy Setup record for which to count expired records.
             The result is returned in the BackgroundTaskResult dictionary where the key is the SystemId value of the Retention Policy Setup record and the value is the number of expired records..
             </summary>
        </member>
        <member name="O:Page::System#DataAdministration#Reten# Policy Setup ListPart">
            <summary>
            This page lists all of the retention policies that have been defined.
            </summary>
        </member>
        <member name="O:Codeunit::System#DataAdministration#Retention Policy Setup">
            <summary>
            This codeunit contains helper methods for retention policy setups.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Setup.SetTableFilterView(Retention Policy Setup Line@):Text[2048]">
            <summary>
            Use this procedure to open a Filter Page Builder page and store the resulting filter in view format on the retention policy setup line.
            </summary>
            <param name="RetentionPolicySetupLine">The record where the filter is stored.</param>
            <returns>The filter in Text format.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Setup.GetTableFilterView(Retention Policy Setup Line):Text">
            <summary>
            Use this procedure to get the filter that is stored in a view format on the retention policy setup line.
            </summary>
            <param name="RetentionPolicySetupLine">The record where the filter is stored.</param>
            <returns>The filter in View format.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Setup.GetTableFilterText(Retention Policy Setup Line):Text[2048]">
            <summary>
            Use this procedure to get the filter that is stored in a text format on the retention policy setup line.
            </summary>
            <param name="RetentionPolicySetupLine">The record where the filter is stored.</param>
            <returns>The Filter in text format.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Setup.TableIdLookup(Integer):Integer">
            <summary>
            Use this procedure to open a lookup page to select one of the allowed Table Id's.
            </summary>
            <param name="TableId">The currently stored Table ID. This value will be selected when you open the lookup.</param>
            <returns>The new selected table id.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Setup.DateFieldNoLookup(Integer,Integer):Integer">
            <summary>
            Use this procedure to open a lookup page to select one of the date or datetime fields for the given table.
            </summary>
            <param name="TableId">The table ID for which you want to select a field number.</param>
            <param name="FieldNo">The currently selected field number.</param>
            <returns>The new selected field number.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Setup.IsRetentionPolicyEnabled:Boolean">
            <summary>
            This procedure checks whether any retention policies are enabled.
            </summary>
            <returns>True if a retention policy is enabled. False if no retention policies are enabled.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Setup.IsRetentionPolicyEnabled(Integer):Boolean">
            <summary>
            This procedure checks whether a retention policy is enabled for the given table ID.
            </summary>
            <param name="TableId">The ID of the table that will be checked for an enabled retention policy.</param>
            <returns>True if a retention policy is enabled for the table ID. False if no retention policy is enabled for the table ID.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Setup.FindOrCreateRetentionPeriod(Enum::System#DataAdministration#Retention Period Enum):Code[20]">
            <summary>
            Finds or creates a new retention period record for the provided retention period.
            </summary>
            <param name="RetentionPeriodEnum">Specifies the retention period enum value for which the retention period record should be found or created.</param>
            <returns>The retention period code for the retention period record.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Setup.FindOrCreateRetentionPeriod(Enum::System#DataAdministration#Retention Period Enum,DateFormula):Code[20]">
            <summary>
            Finds or creates a new retention period record for the provided retention period.
            </summary>
            <param name="RetentionPeriodEnum">Specifies the retention period length enum value for which the retention period record should be found or created.</param>
            <param name="RetPeriodCalc">Specifies the retention period length date formula for which the retention period record should be found or created.</param>
            <returns>The retention period code for the retention period record.</returns>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Setup.FindOrCreateRetentionPeriod(Code[20],Enum::System#DataAdministration#Retention Period Enum,DateFormula):Code[20]">
            <summary>
            Finds or creates a new retention period record for the provided retention period.
            </summary>
            <param name="RetentionPeriodEnum">Specifies the retention period length enum value for which the retention period record should be found or created.</param>
            <param name="RetPeriodCalc">Specifies the retention period length date formula for which the retention period record should be found or created.</param>
            <returns>The retention period code for the retention period record.</returns>
        </member>
        <member name="O:Table::System#DataAdministration#Retention Policy Setup">
            <summary>
            This table stores the retention policy setup records.
            </summary>
        </member>
        <member name="O:Page::System#DataAdministration#Retention Policy Setup Card">
            <summary>
            This page shows the retention policy setup.
            </summary>
        </member>
        <member name="M:Codeunit::System#DataAdministration#Retention Policy Setup Impl#.OnVerifyDeleteAllowed(Integer,Boolean@)">
            <Summary>
            This is an internal event that only this module is allowed to subscribe to. It is raised by a subscriber to the OnBeforeDeleteEvent of the Retention Policy Setup Line table.
            The manual subscriber AllowRetentionPolicySetupLineDelete is bound just before the DeleteAll() in procedure DeleteRetentionPolicySetup.
            These elements combined are to ensure that only procedure DeleteRetentionPolicySetup can delete locked lines from the table.
            You should only be able to delete locked lines when deleting the 'header' Retention Policy Setup record.
            </Summary>
        </member>
        <member name="O:Table::System#DataAdministration#Retention Policy Setup Line">
            <summary>
            This table stores the filter used to apply retention policies to subsets of records in a table.
            </summary>
        </member>
        <member name="M:Table::System#DataAdministration#Retention Policy Setup Line.SetTableFilter">
            <summary>
            Use this procedure to open a Filter Page Builder page and store the resulting filter in view format on the current record.
            </summary>
        </member>
        <member name="M:Table::System#DataAdministration#Retention Policy Setup Line.GetTableFilterView:Text">
            <summary>
            Use this procedure to get the filter in view format stored in the current record.
            </summary>
            <returns>The filter in the view format. </returns>
        </member>
        <member name="M:Table::System#DataAdministration#Retention Policy Setup Line.GetTableFilterText:Text[2048]">
            <summary>
            Use this procedure to get the filter in text format stored in the current record.
            </summary>
            <returns>The Filter in text format.</returns>
        </member>
        <member name="M:Table::System#DataAdministration#Retention Policy Setup Line.IsLocked:Boolean">
            <summary>
            Use this procedure to verify whether the retention policy setup line is locked.
            </summary>
            <returns>True if the line is locked.</returns>
        </member>
        <member name="O:Page::System#DataAdministration#Retention Policy Setup Lines">
            <summary>
            This page shows the retention policy setup lines. Each line defines a subset of records in a table for which you can set a separate retention period.
            </summary>
        </member>
        <member name="O:Page::System#DataAdministration#Retention Policy Setup List">
            <summary>
            This page lists all of the retention policies that have been defined.
            </summary>
        </member>
        <member name="O:Codeunit::System#Privacy#Data Classification Mgt#">
            <summary>
            Exposes functionality to handle data classification tasks.
            </summary>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.PopulateDataSensitivityTable">
            <summary>
            Creates an entry in the Data Sensitivity table for every field in the database that is classified as Customer Content,
            End User Identifiable Information (EUII), or End User Pseudonymous Identifiers (EUPI).
            </summary>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.SetDefaultDataSensitivity(Data Privacy Entities@)">
            <summary>
            Updates the Data Sensitivity table with the default data sensitivities for all the fields of all the tables
            in the DataPrivacyEntities record.
            </summary>
            <param name="DataPrivacyEntities">The variable that is used to update the Data Sensitivity table.</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.SetSensitivities(Data Sensitivity@,Option)">
            <summary>
            For each Data Sensitivity entry, it sets the value of the "Data Sensitivity" field to the Sensitivity option.
            </summary>
            <param name="DataSensitivity">The record that gets updated</param>
            <param name="Sensitivity">The option that the "Data Sensitivity" field gets updated to.</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.SyncAllFields">
            <summary>
            Synchronizes the Data Sensitivity table with the Field table. It inserts new values in the Data Sensitivity table for the
            fields that the Field table contains and the Data Sensitivity table does not and it deletes the unclassified fields from
            the Data Sensitivity table that the Field table does not contain.
            </summary>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.GetDataSensitivityOptionString:Text">
            <summary>
            Gets the values that the "Data Sensitivity" field of the Data Sensitivity table can contain.
            </summary>
            <returns>
            A Text value representing the values that the "Data Sensitivity" field of the Data Sensitivity table can contain.
            </returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.SetTableFieldsToNormal(Integer)">
            <summary>
            Sets the data sensitivity to normal for all fields in the table with the ID TableNumber.
            </summary>
            <param name="TableNumber">The ID of the table in which the field sensitivities will be set to normal.</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.SetFieldToPersonal(Integer,Integer)">
            <summary>
            Sets the data sensitivity to personal for the field with the ID FieldNo from the table with the ID TableNo.
            </summary>
            <param name="TableNo">The table ID</param>
            <param name="FieldNo">The field ID</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.SetFieldToSensitive(Integer,Integer)">
            <summary>
            Sets the data sensitivity to sensitive for the field with the ID FieldNo from the table with the ID TableNo.
            </summary>
            <param name="TableNo">The table ID</param>
            <param name="FieldNo">The field ID</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.SetFieldToCompanyConfidential(Integer,Integer)">
            <summary>
            Sets the data sensitivity to company confidential for the field with the ID FieldNo from the table
            with the ID TableNo.
            </summary>
            <param name="TableNo">The table ID</param>
            <param name="FieldNo">The field ID</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.SetFieldToNormal(Integer,Integer)">
            <summary>
            Sets the data sensitivity to normal for the field with the ID FieldNo from the table with the ID TableNo.
            </summary>
            <param name="TableNo">The table ID</param>
            <param name="FieldNo">The field ID</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.DataPrivacyEntitiesExist:Boolean">
            <summary>
            Checks whether any of the data privacy entity tables (Customer, Vendor, Employee, and so on) contain entries.
            </summary>
            <returns>True if there are any entries and false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.AreAllFieldsClassified:Boolean">
            <summary>
            Checks whether the Data Sensitivity table contains any unclassified entries.
            </summary>
            <returns>True if there are any unclassified entries and false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.IsDataSensitivityEmptyForCurrentCompany:Boolean">
            <summary>
            Checks whether the Data Sensitivity table contains any entries for the current company.
            </summary>
            <returns>True if there are any entries and false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.InsertDataSensitivityForField(Integer,Integer,Option)">
            <summary>
            Inserts a new entry in the Data Sensitivity table for the specified table ID, field ID and with the given
            data sensitivity option (some of the values that the option can have are normal, sensitive and personal).
            </summary>
            <param name="TableNo">The table ID</param>
            <param name="FieldNo">The field ID</param>
            <param name="DataSensitivityOption">The data sensitivity option</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.InsertDataPrivacyEntity(Data Privacy Entities@,Integer,Integer,Integer,Text,Integer)">
            <summary>
            Inserts a new Data Privacy Entity entry in a record.
            </summary>
            <param name="DataPrivacyEntities">The record that the entry gets inserted into.</param>
            <param name="TableNo">The entity's table ID.</param>
            <param name="PageNo">The entity's page ID.</param>
            <param name="KeyFieldNo">The entity's primary key ID.</param>
            <param name="EntityFilter">The entity's ID.</param>
            <param name="PrivacyBlockedFieldNo">If the entity has a Privacy Blocked field, then the field's ID; otherwise 0.</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.GetLastSyncStatusDate:DateTime">
            <summary>
            Gets the last date when the Data Sensitivity and Field tables where synchronized.
            </summary>
            <returns>The last date when the Data Sensitivity and Field tables where synchronized.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.IsSupportedTable(Integer):Boolean">
            <summary>
            Check if the table is supported in the Data Privacy Utilities and Data Classification Worksheet.
            </summary>
            <param name="TableNo"></param>
            <returns>True if the table has type Normal and not obsoleted</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.RaiseOnGetDataPrivacyEntities(Data Privacy Entities@)">
            <summary>
            Raises an event that allows subscribers to insert Data Privacy Entities in the DataPrivacyEntities record.
            Throws an error when it is not called with a temporary record.
            </summary>
            <param name="DataPrivacyEntities">
            The record that in the end will contain all the Data Privacy Entities that the subscribers have inserted.
            </param>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.OnGetDataPrivacyEntities(Data Privacy Entities@)">
            <summary>
            Publishes an event that allows subscribers to insert Data Privacy Entities in the DataPrivacyEntities record.
            </summary>
            <param name="DataPrivacyEntities">
            The record that in the end will contain all the Data Privacy Entities that the subscribers have inserted.
            </param>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.OnCreateEvaluationData">
            <summary>
            Publishes an event that allows subscribers to create evaluation data.
            </summary>
        </member>
        <member name="M:Codeunit::System#Privacy#Data Classification Mgt#.OnShowSyncFieldsNotification">
            <summary>
            Publishes an event that allows subscribers to show a notification that calls for users to synchronize their
            Data Sensitivity and Field tables.
            </summary>
        </member>
        <member name="O:Page::System#Privacy#Data Classification Wizard">
            <summary>
            Exposes functionality that allows users to classify their data.
            </summary>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.ResetControls">
            <summary>
            Resets the buttons on the page, enabling and disabling them according to the current step.
            </summary>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.ShouldEnableNext:Boolean">
            <summary>
            Queries on whether or not the Next button should be enabled.
            </summary>
            <returns>True if the Next button should be enabled and false otherwise.</returns>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.SetExportModeSelected(Boolean)">
            <summary>
            Setter for the IsExportModeSelectedValue.
            </summary>
            <param name="Value">The Value to set.</param>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.SetExpertModeSelected(Boolean)">
            <summary>
            Setter for the IsExpertModeSelectedValue.
            </summary>
            <param name="Value">The Value to set.</param>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.SetImportModeSelected(Boolean)">
            <summary>
            Setter for the SetImportModeSelected.
            </summary>
            <param name="Value">The Value to set.</param>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.NextStep(Boolean)">
            <summary>
            Selects the next step.
            </summary>
            <param name="Backward">A boolean value that specifies if the next step should be to go back.</param>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.CheckMandatoryActions">
            <summary>
            Displays errors if the preconditions for an action are not met.
            </summary>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.IsNextEnabled:Boolean">
            <summary>
            Queries on whether the Next button is enabled.
            </summary>
            <returns>True if the Next button is enabled and false otherwise.</returns>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.GetStep:Option">
            <summary>
            Gets the current step.
            </summary>
            <returns>The current step.</returns>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.SetStep(Option)">
            <summary>
            Sets the current step.
            </summary>
            <param name="StepValue">The new value of the current step.</param>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.IsImportModeSelected:Boolean">
            <summary>
            Queries on whether import mode is selected.
            </summary>
            <returns>True if import mode is selected and false otherwise.</returns>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.IsExportModeSelected:Boolean">
            <summary>
            Queries on whether export mode is selected.
            </summary>
            <returns>True if export mode is selected and false otherwise.</returns>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.IsExpertModeSelected:Boolean">
            <summary>
            Queries on whether expert mode is selected.
            </summary>
            <returns>True if expert mode is selected and false otherwise.</returns>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.GetLedgerEntriesDefaultClassification:Option">
            <summary>
            Gets the default classification for ledger entries.
            </summary>
            <returns>The default classification for ledger entries.</returns>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.GetTemplatesDefaultClassification:Option">
            <summary>
            Gets the default classification for templates.
            </summary>
            <returns>The default classification for templates.</returns>
        </member>
        <member name="M:Page::System#Privacy#Data Classification Wizard.GetSetupTablesDefaultClassification:Option">
            <summary>
            Gets the default classification for setup tables.
            </summary>
            <returns>The default classification for setup tables.</returns>
        </member>
        <member name="O:Page::System#Privacy#Data Classification Worksheet">
            <summary>
            Exposes functionality that allows users to classify their data.
            </summary>
        </member>
        <member name="O:Table::System#Privacy#Data Privacy Entities">
            <summary>
            Displays a list of data privacy entities.
            </summary>
        </member>
        <member name="O:Page::System#Privacy#Field Content Buffer">
            <summary>
            Displays a list of field content buffers.
            </summary>
        </member>
        <member name="O:Page::System#Privacy#Field Data Classification">
            <summary>
            Displays a list of fields and their corresponding data classifications.
            </summary>
        </member>
        <member name="O:Codeunit::System#Privacy#Privacy Notice">
            <summary>
            This codeunit provides an interface for creating, showing and approving Privacy Notices
            </summary>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.CreatePrivacyNotice(Code[50],Text[250],Text[2048]):Boolean">
            <summary>
            Creates a privacy notice.
            </summary>
            <param name="Id">Identification of the privacy notice.</param>
            <param name="IntegrationName">The name of the integration.</param>
            <param name="Link">Link to the privacy terms.</param>
            <returns>Whether the privacy notice was created.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.CreatePrivacyNotice(Code[50],Text[250]):Boolean">
            <summary>
            Creates a privacy notice.
            </summary>
            <param name="Id">Identification of the privacy notice.</param>
            <param name="IntegrationName">The name of the integration.</param>
            <param name="Link">Link to the privacy terms.</param>
            <returns>Whether the privacy notice was created.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.GetDefaultPrivacyAgreementTxt:Text">
            <summary>
             Gets the default text for the privacy notice.
            </summary>
            <returns>The default text for the privacy notice.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.ConfirmPrivacyNoticeApproval(Code[50]):Boolean">
             <summary>
             After this the step-through depends on whether the user is admin or normal user (admin means they have the Priv. Notice - Admin permission set):
             Admin:
                 If admin has agreed that will be returned
                 Privacy Notice will be shown and the response (Agree/Disagree) will be stored and takes precedence for all users.
                 If the Privacy Notice was simply closed, we return false and nothing is stored.
             User:
                 If admin has agreed or disagreed, that will be returned
                 If user has agreed, that will be returned
                 Privacy Notice will be shown and any agreement will be stored.
                 If the Privacy Notice was simply closed, we return false and nothing is stored.
            
             <remark>This function will open a modal dialog to confirm approval and must hence be run outside a write transaction.</remark>
             <remark>The privacy notice referenced must exist.</remark>
             </summary>
             <param name="Id">Identification of an existing privacy notice.</param>
             <returns>Whether the privacy notice was agreed to.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.ConfirmPrivacyNoticeApproval(Code[50],Boolean):Boolean">
             <summary>
             After this the step-through depends on whether the user is admin or normal user (admin means they have the Priv. Notice - Admin permission set):
             Admin:
                 If admin has agreed that will be returned
                 Privacy Notice will be shown and the response (Agree/Disagree) will be stored and takes precedence for all users.
                 If the Privacy Notice was simply closed, we return false and nothing is stored.
             User:
                 If admin has agreed or disagreed, that will be returned
                 If user has agreed, that will be returned
                 Privacy Notice will be shown and any agreement will be stored.
                 If the Privacy Notice was simply closed, we return false and nothing is stored.
            
             <remark>This function will open a modal dialog to confirm approval and must hence be run outside a write transaction.</remark>
             <remark>The privacy notice referenced must exist.</remark>
             </summary>
             <param name="Id">Identification of an existing privacy notice.</param>
             <param name="SkipCheckInEval">If the check should return true if it has not been explicitly disagreed.</param>
             <returns>Whether the privacy notice was agreed to.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.GetPrivacyNoticeApprovalState(Code[50]):Enum::System#Privacy#Privacy Notice Approval State">
             <summary>
             Returns the state of the privacy notice for the current user without showing any privacy notice to the user.
            
             An error is thrown if the privacy notice does not exist.
             </summary>
             <param name="Id">Identification of an existing privacy notice.</param>
             <returns>The state of the privacy notice for the current user.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.GetPrivacyNoticeApprovalState(Code[50],Boolean):Enum::System#Privacy#Privacy Notice Approval State">
             <summary>
             Returns the state of the privacy notice for the current user without showing any privacy notice to the user.
            
             An error is thrown if the privacy notice does not exist.
             </summary>
             <param name="Id">Identification of an existing privacy notice.</param>
             <param name="SkipCheckInEval">If the check should return true if it has not been explicitly disagreed.</param>
             <returns>The state of the privacy notice for the current user.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.ShowOneTimePrivacyNotice(Text[250]):Enum::System#Privacy#Privacy Notice Approval State">
            <summary>
            Shows a Privacy Notice for the specified integration name.
            This call does not require any Privacy Notice to exist, nor will it create one or store the content.
            This function is purely to show a privacy notice and let the caller handle the consent flow.
            </summary>
            <param name="IntegrationName">The name of the integration.</param>
            <returns>The state of the privacy notice for the current user.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.ShowOneTimePrivacyNotice(Text[250],Text[2048]):Enum::System#Privacy#Privacy Notice Approval State">
            <summary>
            Shows a Privacy Notice for the specified integration name.
            This call does not require any Privacy Notice to exist, nor will it create one or store the content.
            This function is purely to show a privacy notice and let the caller handle the consent flow.
            </summary>
            <param name="IntegrationName">The name of the integration.</param>
            <returns>The state of the privacy notice for the current user.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.IsApprovalStateDisagreed(Code[50]):Boolean">
            <summary>
            Determines whether the admin or user has disagreed with the Privacy Notice.
            </summary>
            <param name="Id">Identification of an existing privacy notice.</param>
            <returns>Whether the Privacy Notice was disagreed to.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.IsApprovalStateDisagreed(Enum::System#Privacy#Privacy Notice Approval State):Boolean">
            <summary>
            Determines whether the admin or user has disagreed with the Privacy Notice.
            </summary>
            <param name="State">The approval state.</param>
            <returns>Whether the Privacy Notice was disagreed to.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.SetApprovalState(Code[50],Enum::System#Privacy#Privacy Notice Approval State)">
            <summary>
            Sets the approval state for the specified Privacy Notice.
            If the user is an admin, the approval will be set for the entire organization otherwise it will only be set for the current user.
            </summary>
            <param name="PrivacyNoticeId">Id of the privacy notice.</param>
            <param name="Approved">Whether the privacy notice is approved.</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.CanCurrentUserApproveForOrganization:Boolean">
            <summary>
            Checks whether the current user can approve for the entire organization.
            This function basically returns whether the user has the permissions of the Priv. Notice - Admin.
            </summary>
            <returns>Whether the current user can approve for the entire organization.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.CreateDefaultPrivacyNotices">
            <summary>
            Adds all Privacy Notices from extensions using the event OnAddPrivacyNotices.
            </summary>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.OnBeforeShowPrivacyNotice(Privacy Notice,Boolean@)">
            <summary>
            This event is called when we are confirming approval to the privacy notice but no decision has been made. Just before calling any UI to show a dialog to the user.
            This allows overriding of individual privacy notices in case of custom wizards.
            </summary>
            <param name="PrivacyNotice">The privacy notice to be shown.</param>
            <param name="Handled">Specifies whether the event has been handled and no further execution should occur.</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice.OnRegisterPrivacyNotices(Privacy Notice@)">
            <summary>
            This event is called when we are adding all Privacy Notices to the list.
            This will happen during demotool, upgrade and using the action on the Privacy Notices list.
            If a Privacy Notice with the same Id already exist, the entry is ignored.
            </summary>
            <param name="PrivacyNotice">The privacy notice to be shown.</param>
            <param name="Handled">Specifies whether the event has been handled and no further execution should occur.</param>
        </member>
        <member name="O:Enum::System#Privacy#Privacy Notice Approval State">
            <summary>
            Specifies the state of the Privacy Notice Approval.
            </summary>
        </member>
        <member name="E:Enum::System#Privacy#Privacy Notice Approval State.Not set">
            <summary>
            No decision has been made for the Privacy Notice.
            </summary>
        </member>
        <member name="E:Enum::System#Privacy#Privacy Notice Approval State.Agreed">
            <summary>
            The Privacy Notice has been agreed to.
            </summary>
        </member>
        <member name="E:Enum::System#Privacy#Privacy Notice Approval State.Disagreed">
            <summary>
            The Privacy Notice was disagreed.
            </summary>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice Impl#.TryCreateDefaultApproval(Privacy Notice)">
            <summary>
            Creates a default approval for the given privacy notice if it can be approved by default and there is not already an approval record for it.
            </summary>
            <param name="PrivacyNotice">The notice to save approval under.</param>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice Impl#.CheckIntegrationIDEquality(Text,Text):Boolean">
            <summary>
            Checks if the IDs are equal.
            </summary>
            <param name="ID">The first ID.</param>
            <param name="IDToCheck">The ID to check against the first ID parameter.</param>
            <returns>true if equal; otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice Impl#.ShouldApproveByDefault(Text):Boolean">
            <summary>
            Indicates if the integration should be enabled by default.
            </summary>
            <param name="IntegrationID">The integration ID/</param>
            <returns>true if it should be approved by default; otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice Impl#.IsApprovalStateDisagreed(Code[50]):Boolean">
            <summary>
            Determines whether the admin or user has disagreed with the Privacy Notice.
            </summary>
            <param name="Id">Identification of an existing privacy notice.</param>
            <returns>Whether the Privacy Notice was disagreed to.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#Privacy Notice Impl#.IsApprovalStateDisagreed(Enum::System#Privacy#Privacy Notice Approval State):Boolean">
            <summary>
            Determines whether the admin or user has disagreed with the Privacy Notice.
            </summary>
            <param name="State">The approval state.</param>
            <returns>Whether the Privacy Notice was disagreed to.</returns>
        </member>
        <member name="O:Codeunit::System#Privacy#System Privacy Notice Reg#">
            <summary>
            This codeunit registers platform level privacy notices and provides procedures to consistently reference the privacy notices.
            </summary>
        </member>
        <member name="M:Codeunit::System#Privacy#System Privacy Notice Reg#.GetMicrosoftLearnID:Code[50]">
            <summary>
            Gets the Microsoft Learn privacy notice identifier.
            </summary>
            <returns>The privacy notice id for Microsoft Learn.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#System Privacy Notice Reg#.GetTeamsPrivacyNoticeId:Code[50]">
            <summary>
            Gets the Microsoft Teams privacy notice identifier.
            </summary>
            <returns>The privacy notice id for Microsoft Teams.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#System Privacy Notice Reg#.GetPowerAutomatePrivacyNoticeId:Code[50]">
            <summary>
            Gets the Power Automate privacy notice identifier.
            </summary>
            <returns>The privacy notice id for Power Automate.</returns>
        </member>
        <member name="M:Codeunit::System#Privacy#System Privacy Notice Reg#.GetPowerAutomatePrivacyNoticeName:Code[250]">
            <summary>
            Gets the Power Automate privacy notice name.
            </summary>
            <returns>The privacy notice name for Power Automate.</returns>
        </member>
        <member name="O:Codeunit::System#IO#Data Compression">
            <summary>
            Exposes functionality to provide ability to create, update, read and dispose a binary data compression archive.
            This module supports compression and decompression with Zip format and GZip format.
            </summary>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.CreateZipArchive">
            <summary>
            Creates a new ZipArchive instance.
            </summary>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.OpenZipArchive(InStream,Boolean)">
            <summary>
            Creates a ZipArchive instance from the given InStream.
            </summary>
            <param name="InputInStream">The InStream that contains the content of the compressed archive.</param>
            <param name="OpenForUpdate">Indicates whether the archive should be opened in Update mode. The default (false) indicated the archive will be opened in Read mode.</param>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.OpenZipArchive(InStream,Boolean,Integer)">
            <summary>
            Creates a ZipArchive instance from the given InStream.
            </summary>
            <param name="InputInStream">The InStream that contains the content of the compressed archive.</param>
            <param name="OpenForUpdate">Indicates whether the archive should be opened in Update mode. The default (false) indicated the archive will be opened in Read mode.</param>
            <param name="EncodingCodePageNumber">Specifies the code page number of the text encoding which is used for the compressed archive entry names in the input stream.</param>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.OpenZipArchive(Codeunit::System#Utilities#Temp Blob,Boolean)">
            <summary>
            Creates a ZipArchive instance from the given instance of Temp Blob codeunit.
            </summary>
            <param name="TempBlob">The instance of Temp Blob codeunit that contains the content of the compressed archive.</param>
            <param name="OpenForUpdate">Indicates whether the archive should be opened in Update mode. The default (false) indicated the archive will be opened in Read mode.</param>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.SaveZipArchive(OutStream)">
            <summary>
            Saves the ZipArchive to the given OutStream.
            </summary>
            <param name="OutputOutStream">The OutStream to which the ZipArchive is saved.</param>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.SaveZipArchive(Codeunit::System#Utilities#Temp Blob@)">
            <summary>
            Saves the ZipArchive to the given instance of Temp Blob codeunit.
            </summary>
            <param name="TempBlob">The instance of the Temp Blob codeunit to which the ZipArchive is saved.</param>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.CloseZipArchive">
            <summary>
            Disposes the ZipArchive.
            </summary>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.GetEntryList(List of [Text]@)">
            <summary>
            Returns the list of entries for the ZipArchive.
            </summary>
            <param name="EntryList">The list that is populated with the list of entries of the ZipArchive instance.</param>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.ExtractEntry(Text,OutStream,Integer@)">
            <summary>
            Extracts an entry from the ZipArchive.
            </summary>
            <param name="EntryName">The name of the ZipArchive entry to be extracted.</param>
            <param name="OutputOutStream">The OutStream to which binary content of the extracted entry is saved.</param>
            <param name="EntryLength">The length of the extracted entry.</param>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.ExtractEntry(Text,OutStream):Integer">
            <summary>
            Extracts an entry from the ZipArchive.
            </summary>
            <param name="EntryName">The name of the ZipArchive entry to be extracted.</param>
            <param name="OutputOutStream">The OutStream to which binary content of the extracted entry is saved.</param>
            <returns>The length of the extracted entry.</returns>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.ExtractEntry(Text,Codeunit::System#Utilities#Temp Blob@):Integer">
            <summary>
            Extracts an entry from the ZipArchive to a TempBlob instance.
            </summary>
            <param name="EntryName">The name of the ZipArchive entry to be extracted.</param>
            <param name="TempBlob">The TempBlob the uncompressed binary data will be written to.</param>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.AddEntry(InStream,Text)">
            <summary>
            Adds an entry to the ZipArchive.
            </summary>
            <param name="InStreamToAdd">The InStream that contains the binary content that should be added as an entry in the ZipArchive.</param>
            <param name="PathInArchive">The path that the added entry should have within the ZipArchive.</param>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.RemoveEntry(Text)">
            <summary>
            Removes an entry from the ZipArchive.
            </summary>
            <param name="PathInArchive">The path that the removed entry should have within the ZipArchive.</param>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.IsGZip(InStream):Boolean">
            <summary>
            Determines whether the given InStream is compressed with GZip.
            </summary>
            <param name="InStream">An InStream that contains binary content.</param>
            <returns>Returns true if and only if the given InStream is compressed with GZip</returns>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.IsZip(InStream):Boolean">
            <summary>
            Determines whether the given InStream is compressed with Zip.
            </summary>
            <param name="InStream">An InStream that contains binary content.</param>
            <returns>Returns true if and only if the given InStream is compressed with Zip</returns>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.GZipCompress(InStream,OutStream)">
            <summary>
            Compresses a stream with GZip algorithm.
            <param name="InputInStream">The InStream that contains the content that should be compressed.</param>
            <param name="CompressedOutStream">The OutStream into which the compressed stream is copied to.</param>
            </summary>
        </member>
        <member name="M:Codeunit::System#IO#Data Compression.GZipDecompress(InStream,OutStream)">
            <summary>
            Decompresses a GZipStream.
            <param name="InputInStream">The InStream that contains the content that should be decompressed.</param>
            <param name="DecompressedOutStream">The OutStream into which the decompressed stream is copied to.</param>
            </summary>
        </member>
        <member name="O:Codeunit::System#DateTime#Time Zone">
            <summary>
            Codeunit that provides data on offsets and daylight saving time for a time zone.
            </summary>
        </member>
        <member name="M:Codeunit::System#DateTime#Time Zone.GetTimezoneOffset(DateTime,Text):Duration">
            <summary>
            Retrieves the offset from the requested time zone at the time of the requested datetime. This takes into account any daylight saving time conditions that may apply.
            </summary>
            <param name="SourceDateTime">The datetime that will be used as the basis for the difference calculation.</param>
            <param name="TimeZoneId">The ID of the time zone that you want to calculate the offset for.</param>
            <returns>A duration that indicates the offset between UTC and the requested time zone for the provided datetime.</returns>
        </member>
        <member name="M:Codeunit::System#DateTime#Time Zone.GetTimezoneOffset(DateTime):Duration">
            <summary>
            Retrieves the offset from the user time zone at the time of the requested datetime. This takes into account any daylight saving time conditions that may apply.
            </summary>
            <param name="SourceDateTime">The datetime that will be used as the basis for the difference calculation.</param>
            <returns>A duration that indicates the offset between UTC and the user time zone for the provided datetime.</returns>
        </member>
        <member name="M:Codeunit::System#DateTime#Time Zone.GetTimezoneOffset(DateTime,Text,Text):Duration">
            <summary>
            Retrieves the offset of the destination time zone from the source time zone for the indicated datetime. This takes into account any daylight saving time conditions that may apply.
            </summary>
            <param name="SourceDateTime">The datetime that will be used as the basis for the difference calculation.</param>
            <param name="SourceTimeZoneId">The time zone from which you want to calculate the difference.</param>
            <param name="DestinationTimeZoneId">The time zone against which you want to calculate the difference.</param>
            <returns>A duration that indicates the offset between the two time zones at the indicated datetime.</returns>
        </member>
        <member name="M:Codeunit::System#DateTime#Time Zone.TimeZoneSupportsDaylightSavingTime(Text):Boolean">
            <summary>
            Checks whether the indicated time zone supports daylight saving time.
            </summary>
            <param name="TimeZoneId">The ID of the time zone that you want to check the daylight saving time settings for.</param>
            <returns>A boolean indicating whether the requested time zone observes daylight saving time.</returns>
        </member>
        <member name="M:Codeunit::System#DateTime#Time Zone.IsDaylightSavingTime(DateTime,Text):Boolean">
            <summary>
            Checks whether the requested datetime falls within the indicated time zone's daylight saving time period.
            </summary>
            <param name="DateTimeToCheck">The datetime for which you want to check whether it falls within the time zone's daylight saving time period.</param>
            <param name="TimeZoneId">The ID of the time zone against which you want to check the datetime.</param>
            <returns>A boolean indicating whether the requested datetime falls within the daylight saving time period for the indicated time zone. If the time zone does not observe daylight saving time, this will always return false.</returns>
        </member>
        <member name="M:Codeunit::System#DateTime#Unix Timestamp.CreateTimestampSeconds:BigInteger">
            <summary>
            Create a Unix timestamp in seconds for the current date and time
            </summary>
            <returns>A Unix timestamp in seconds representing the current date and time</returns>
        </member>
        <member name="M:Codeunit::System#DateTime#Unix Timestamp.CreateTimestampSeconds(DateTime):BigInteger">
            <summary>
            Create a Unix timestamp in seconds for the specified date and time
            </summary>
            <param name="DateTimeFrom">The DateTime that should be used to create the Unix timestamp</param>
            <returns>A Unix timestamp in seconds representing the specified date and time</returns>
        </member>
        <member name="M:Codeunit::System#DateTime#Unix Timestamp.CreateTimestampMilliseconds:BigInteger">
            <summary>
            Create a Unix timestamp in milliseconds for the current date and time
            </summary>
            <returns>A Unix timestamp in milliseconds representing the current date and time</returns>
        </member>
        <member name="M:Codeunit::System#DateTime#Unix Timestamp.CreateTimestampMilliseconds(DateTime):BigInteger">
            <summary>
            Create a Unix timestamp in milliseconds for the specified date and time
            </summary>
            <param name="DateTimeFrom">The DateTime that should be used to create the Unix timestamp</param>
            <returns>A Unix timestamp in milliseconds representing the specified date and time</returns>
        </member>
        <member name="M:Codeunit::System#DateTime#Unix Timestamp.EvaluateTimestamp(BigInteger):DateTime">
            <summary>
            Evaluate a Unix timestamp to a DateTime
            </summary>
            <param name="Timestamp">The Unix timestamp that should be evaluated to a DateTime</param>
            <returns>The evaluated DateTime</returns>
        </member>
        <member name="O:Page::System#DateTime#Date-Time Dialog">
            <summary>
            Dialog for entering Date or DateTime values.
            </summary>
        </member>
        <member name="M:Page::System#DateTime#Date-Time Dialog.SetDateTime(DateTime)">
            <summary>
            Setter method to initialize the Date and Time fields on the page.
            </summary>
            <param name="DateTime">The value to set.</param>
        </member>
        <member name="M:Page::System#DateTime#Date-Time Dialog.GetDateTime:DateTime">
            <summary>
            Getter method for the entered datetime value.
            </summary>
            <returns>The value that is set on the page.</returns>
        </member>
        <member name="M:Page::System#DateTime#Date-Time Dialog.UseDateOnly">
            <summary>
            Method for hiding the time on the page.
            </summary>
        </member>
        <member name="M:Page::System#DateTime#Date-Time Dialog.SetDate(Date)">
            <summary>
            Setter method to initialize the Date on the page.
            </summary>
            <param name="NewDate">The value to set.</param>
        </member>
        <member name="M:Page::System#DateTime#Date-Time Dialog.GetDate:Date">
            <summary>
            Getter method for the entered date value.
            </summary>
            <returns>The value that is set on the page.</returns>
        </member>
        <member name="O:Enum::System#DateTime#Recurrence - Day of Week">
            <summary>
            This enum has the day of the week for which the recurrence will occur.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Day of Week.Monday">
            <summary>
            Specifies that the recurrence to occur on Monday.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Day of Week.Tuesday">
            <summary>
            Specifies that the recurrence to occur on Tuesday.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Day of Week.Wednesday">
            <summary>
            Specifies that the recurrence to occur on Wednesday.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Day of Week.Thursday">
            <summary>
            Specifies that the recurrence to occur on Thursday.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Day of Week.Friday">
            <summary>
            Specifies that the recurrence to occur on Friday.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Day of Week.Saturday">
            <summary>
            Specifies that the recurrence to occur on Saturday.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Day of Week.Sunday">
            <summary>
            Specifies that the recurrence to occur on Sunday.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Day of Week.Day">
            <summary>
            Specifies that the recurrence to occur every day.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Day of Week.Weekday">
            <summary>
            Specifies that the recurrence to occur on all days from Monday to Friday.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Day of Week.Weekend Day">
            <summary>
            Specifies that the recurrence to occur on Saturday and Sunday.
            </summary>
        </member>
        <member name="O:Enum::System#DateTime#Recurrence - Month">
            <summary>
            This enum has the months during which the recurrence will occur.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.January">
            <summary>
            Specifies that the recurrence will occur in Janurary.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.February">
            <summary>
            Specifies that the recurrence will occur in February.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.March">
            <summary>
            Specifies that the recurrence will occur in March.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.April">
            <summary>
            Specifies that the recurrence will occur in April.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.May">
            <summary>
            Specifies that the recurrence will occur in May.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.June">
            <summary>
            Specifies that the recurrence will occur in June.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.July">
            <summary>
            Specifies that the recurrence will occur in July.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.August">
            <summary>
            Specifies that the recurrence will occur in August.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.September">
            <summary>
            Specifies that the recurrence will occur in September.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.October">
            <summary>
            Specifies that the recurrence will occur in October.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.November">
            <summary>
            Specifies that the recurrence will occur in Novemeber.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Month.December">
            <summary>
            Specifies that the recurrence will occur in December.
            </summary>
        </member>
        <member name="O:Enum::System#DateTime#Recurrence - Monthly Pattern">
            <summary>
            This enum has the monthly occurrence patterns for the recurrence.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Monthly Pattern.Specific Day">
            <summary>
            Specifies that the recurrence will occur on a specific day.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Monthly Pattern.By Weekday">
            <summary>
            Specifies that the recurrence will occur on a weekday. This is used in conjuction with the "Recurrence - Day Of Week" enums.
            </summary>
        </member>
        <member name="O:Enum::System#DateTime#Recurrence - Ordinal No#">
            <summary>
            This enum has the ordinal numbers for which the recurrence will occur.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Ordinal No#.First">
            <summary>
            Specifies that the recurrence will occur in the first week of the month.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Ordinal No#.Second">
            <summary>
            Specifies that the recurrence will occur in the second week of the month.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Ordinal No#.Third">
            <summary>
            Specifies that the recurrence will occur in the third week of the month.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Ordinal No#.Fourth">
            <summary>
            Specifies that the recurrence will occur in the fourth week of the month.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Ordinal No#.Last">
            <summary>
            Specifies that the recurrence will occur in the last week of the month.
            In months with four weeks, the "Last" enum is the same as "Fourth" enum.
            </summary>
        </member>
        <member name="O:Enum::System#DateTime#Recurrence - Pattern">
            <summary>
            This enum has the occurrence patterns for the recurrence.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Pattern.Daily">
            <summary>
            Specifies that the recurrence will occur daily.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Pattern.Weekly">
            <summary>
            Specifies that the recurrence will occur weekly.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Pattern.Monthly">
            <summary>
            Specifies that the recurrence will occur monthly.
            </summary>
        </member>
        <member name="E:Enum::System#DateTime#Recurrence - Pattern.Yearly">
            <summary>
            Specifies that the recurrence will occur yearly.
            </summary>
        </member>
        <member name="O:Codeunit::System#DateTime#Recurrence Schedule">
            <summary>
            Calculates when the next event will occur. Events can recur daily, weekly, monthly or yearly.
            </summary>
        </member>
        <member name="M:Codeunit::System#DateTime#Recurrence Schedule.SetMinDateTime(DateTime)">
            <summary>
            Sets the earliest date to be returned from CalculateNextOccurrence.
            The default MinDateTime is today at the start time set in recurrence.
            </summary>
            <param name="DateTime">The minimum datetime.</param>
            See <see cref="Recurrence.CalculateNextOccurrence"/> to calculate next occurrence.
            <example>
            To start calculating recurrence from January 1st, 2000,
            call SetMinDateTime(CREATEDATETIME(DMY2DATE(1, 1, 2000), 0T)).
            </example>
        </member>
        <member name="M:Codeunit::System#DateTime#Recurrence Schedule.CalculateNextOccurrence(Guid,DateTime):DateTime">
            <summary>
            Calculates the time and date for the next occurrence.
            </summary>
            <param name="RecurrenceID">The recurrence ID.</param>
            <param name="LastOccurrence">The time of the last scheduled occurrence.</param>
            <returns>Returns the DateTime value for the next occurrence. If there is no next occurrence, it returns the default value 0DT.</returns>
            <example>
            To calculate the first occurrence (this is using the datatime provided in SetMinDateTime as a minimum datetime to return),
            call CalculateNextOccurrence(RecurrenceID, 0DT)), the RecurrenceID is the ID returned from one of the create functions.
            </example>
        </member>
        <member name="M:Codeunit::System#DateTime#Recurrence Schedule.CreateDaily(Time,Date,Date,Integer):Guid">
            <summary>
            Creates a daily recurrence.
            </summary>
            <param name="StartTime">The start time of the recurrence.</param>
            <param name="StartDate">The start date of the recurrence.</param>
            <param name="EndDate">The end date of the recurrence.</param>
            <param name="DaysBetween">The number of days between each occurrence, starting with 1.</param>
            <returns>The ID used to reference this recurrence.</returns>
            <example>
            To create a recurrence that starts today, repeats every third day, and does not have an end date,
            call RecurrenceID := CreateDaily(now, today, 0D , 3).
            </example>
        </member>
        <member name="M:Codeunit::System#DateTime#Recurrence Schedule.CreateWeekly(Time,Date,Date,Integer,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean):Guid">
            <summary>
            Creates a weekly recurrence.
            </summary>
            <param name="StartTime">The start time of the recurrence.</param>
            <param name="StartDate">The start date of the recurrence.</param>
            <param name="EndDate">The end date of the recurrence.</param>
            <param name="WeeksBetween">The number of weeks between each occurrence, starting with 1.</param>
            <param name="Monday">Occur on Mondays.</param>
            <param name="Tuesday">Occur on Tuesdays.</param>
            <param name="Wednesday">Occur on Wednesdays.</param>
            <param name="Thursday">Occur on Thursdays.</param>
            <param name="Friday">Occur on Fridays.</param>
            <param name="Saturday">Occur on Saturdays.</param>
            <param name="Sunday">Occur on Sundays.</param>
            <returns>The ID used to reference this recurrence.</returns>
            <example>
            To create a weekly recurrence that starts today, repeats every Monday and Wednesday, and does not have an end date,
            call RecurrenceID := CreateWeekly(now, today, 0D , 1, true, false, true, false, false, false, false).
            </example>
        </member>
        <member name="M:Codeunit::System#DateTime#Recurrence Schedule.CreateMonthlyByDay(Time,Date,Date,Integer,Integer):Guid">
            <summary>
            Creates a monthly recurrence by day.
            </summary>
            <param name="StartTime">The start time of the recurrence.</param>
            <param name="StartDate">The start date of the recurrence.</param>
            <param name="EndDate">The end date of the recurrence.</param>
            <param name="MonthsBetween">The number of months between each occurrence, starting with 1.</param>
            <param name="DayOfMonth">The day of the month.</param>
            <returns>The ID used to reference this recurrence.</returns>
            <example>
            To create a monthly recurrence that repeats on the fourth day of every month,
            call RecurrenceID := CreateMonthlyByDay(now, today, 0D , 1, 4).
            </example>
        </member>
        <member name="M:Codeunit::System#DateTime#Recurrence Schedule.CreateMonthlyByDayOfWeek(Time,Date,Date,Integer,Enum::System#DateTime#Recurrence - Ordinal No#,Enum::System#DateTime#Recurrence - Day of Week):Guid">
            <summary>
            Creates a monthly recurrence by the day of the week.
            </summary>
            <param name="StartTime">The start time of the recurrence.</param>
            <param name="StartDate">The start date of the recurrence.</param>
            <param name="EndDate">The end date of the recurrence.</param>
            <param name="MonthsBetween">The number of months between each occurrence, starting with 1.</param>
            <param name="InWeek">The week of the month.</param>
            <param name="DayOfWeek">The day of the week.</param>
            <returns>The ID used to reference this recurrence.</returns>
            <example>
            To create a monthly recurrence that calculates every last Friday of every month,
            call RecurrenceID := CreateMonthlyByDayOfWeek(now, today, 0D , 1, RecurrenceOrdinalNo::Last, RecurrenceDayofWeek::Friday).
            </example>
        </member>
        <member name="M:Codeunit::System#DateTime#Recurrence Schedule.CreateYearlyByDay(Time,Date,Date,Integer,Integer,Enum::System#DateTime#Recurrence - Month):Guid">
            <summary>
            Creates a yearly recurrence by day.
            </summary>
            <param name="StartTime">The start time of the recurrence.</param>
            <param name="StartDate">The start date of the recurrence.</param>
            <param name="EndDate">The end date of the recurrence.</param>
            <param name="YearsBetween">The number of years between each occurrence, starting with 1.</param>
            <param name="DayOfMonth">The day of the month.</param>
            <param name="Month">The month of the year.</param>
            <returns>The ID used to reference this recurrence.</returns>
            <example>
            To create a yearly recurrence that repeats on the first day of December,
            call RecurrenceID := CreateYearlyByDay(now, today, 0D , 1, 1, RecurrenceMonth::December).
            </example>
        </member>
        <member name="M:Codeunit::System#DateTime#Recurrence Schedule.CreateYearlyByDayOfWeek(Time,Date,Date,Integer,Enum::System#DateTime#Recurrence - Ordinal No#,Enum::System#DateTime#Recurrence - Day of Week,Enum::System#DateTime#Recurrence - Month):Guid">
            <summary>
            Creates a yearly recurrence by day of week of a given month.
            </summary>
            <param name="StartTime">The start time of the recurrence.</param>
            <param name="StartDate">The start date of the recurrence.</param>
            <param name="EndDate">The end date of the recurrence.</param>
            <param name="YearsBetween">The number of years between each occurrence, starting with 1.</param>
            <param name="InWeek">The week of the month.</param>
            <param name="DayOfWeek">The day of the week.</param>
            <param name="Month">The month of the year.</param>
            <returns>The ID used to reference this recurrence.</returns>
            <example>
            To create a yearly recurrence that repeats on the last Friday of every month,
            call RecurrenceID := CreateYearlyByDayOfWeek(now, today, 0D , 1, RecurrenceOrdinalNo::Last, RecurrenceDayofWeek::Weekday, RecurrenceMonth::December).
            </example>
        </member>
        <member name="M:Codeunit::System#DateTime#Recurrence Schedule.OpenRecurrenceSchedule(Guid@)">
            <summary>
            Opens the card for the recurrence.
            </summary>
            <param name="RecurrenceID">The recurrence ID.</param>
        </member>
        <member name="M:Codeunit::System#DateTime#Recurrence Schedule.RecurrenceDisplayText(Guid):Text">
            <summary>
            Returns a short text description of the recurrence.
            </summary>
            <param name="RecurrenceID">The recurrence ID.</param>
            <returns>The short text to display.</returns>
        </member>
        <member name="O:Page::System#DateTime#Recurrence Schedule Card">
            <summary>
            Allows users to view and edit existing recurrence schedules.
            </summary>
        </member>
        <member name="O:Codeunit::System#DateTime#Time Zone Selection">
            <summary>
            Provides basic functionality to lookup page for Time zones.
            </summary>
        </member>
        <member name="M:Codeunit::System#DateTime#Time Zone Selection.LookupTimeZone(Text[180]@):Boolean">
            <summary>
            Opens a window for viewing and selecting a Time Zone.
            </summary>
            <param name="TimeZoneText">Out parameter with the Time Zone id of the selected Time Zone.</param>
            <returns>True if a timezone was selected.</returns>
        </member>
        <member name="M:Codeunit::System#DateTime#Time Zone Selection.ValidateTimeZone(Text[180]@)">
            <summary>
            Validate a time zone text given as input and converts it into a Time Zone ID.
            </summary>
            <param name="TimeZoneText">The Time Zone text to validate.</param>
        </member>
        <member name="M:Codeunit::System#DateTime#Time Zone Selection.GetTimeZoneDisplayName(Text[180]):Text[250]">
            <summary>
            Finds the Time Zone that matches the given text and returns its display name.
            </summary>
            <param name="TimeZoneText">The search query for the Time Zone.</param>
            <returns>The Display Name of the Time Zone.</returns>
        </member>
        <member name="O:Page::System#DateTime#Time Zones Lookup">
            <summary>
            List page that contains all Time zones.
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#Email Attachment Upgrade">
            <summary>
            Upgrade email attachments to be of type Media instead of BLOB.
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#Email Account">
            <summary>
            Provides functionality to work with email accounts.
            </summary>
        </member>
        <member name="M:Codeunit::System#Email#Email Account.GetAllAccounts(Boolean,Email Account@)">
            <summary>
            Gets all of the email accounts registered in Business Central.
            </summary>
            <param name="LoadLogos">Flag, used to determine whether to load the logos for the accounts.</param>
            <param name="TempEmailAccount">Out parameter holding the email accounts.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Account.GetAllAccounts(Email Account@)">
            <summary>
            Gets all of the email accounts registered in Business Central.
            </summary>
            <param name="TempEmailAccount">Out parameter holding the email accounts.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Account.IsAnyAccountRegistered:Boolean">
            <summary>
            Checks if there is at least one email account registered in Business Central.
            </summary>
            <returns>True if there is any account registered in the system, otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Account.IsAccountRegistered(Guid,Enum::System#Email#Email Connector):Boolean">
            <summary>
            Checks if a specific email account is registered in Business Central.
            </summary>
            <param name="EmailAccountId"> The email account ID </param>
            <param name="EmailConnector"> The email connector </param>
            <returns></returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Account.DeleteAccounts(Email Account@,Boolean)">
            <summary>
            Deletes all selected email accounts.
            </summary>
            <param name="TempEmailAccountsToDelete">Holding the selected email accounts to delete.</param>
            <param name="HideDialog">Hides any confirmation or interaction that involves a UI.</param>
            <error>Your user account does not give you permission to set up email. Please contact your administrator.</error>
        </member>
        <member name="M:Codeunit::System#Email#Email Account.ValidateEmailAddress(Text):Boolean">
            <summary>
            Validates an email address and throws an error if it is invalid.
            </summary>
            <remarks>If the provided email address is an empty string, the function will do nothing.</remarks>
            <param name="EmailAddress">The email address to validate.</param>
            <error>The email address "%1" is not valid.</error>
            <returns>True if the email address is valid; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Account.ValidateEmailAddress(Text,Boolean):Boolean">
            <summary>
            Validates an email address and throws an error if it is invalid.
            </summary>
            <param name="EmailAddress">The email address to validate.</param>
            <param name="AllowEmptyValue">Indicates whether to skip the validation if the provided email address is empty.</param>
            <error>The email address "%1" is not valid.</error>
            <error>The email address cannot be empty.</error>
            <returns>True if the email address is valid; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Account.ValidateEmailAddresses(Text):Boolean">
            <summary>
            Validates email addresses and displays an error if any are invalid.
            </summary>
            <remarks>If the provided email address is an empty string, the function will do nothing.</remarks>
            <param name="EmailAddresses">The email addresses to validate, separated by semicolons.</param>
            <error>The email address "%1" is not valid.</error>
            <returns>True if all email addresses are valid; false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Account.ValidateEmailAddresses(Text,Boolean):Boolean">
            <summary>
            Validates email addresses and displays an error if any are invalid.
            </summary>
            <param name="EmailAddresses">The email addresses to validate, separated by semicolons.</param>
            <param name="AllowEmptyValue">Indicates whether to skip the validation if no email address is provided.</param>
            <error>The email address "%1" is not valid.</error>
            <error>The email address cannot be empty.</error>
            <returns>True if all email addresses are valid; false otherwise.</returns>
        </member>
        <member name="O:Table::System#Email#Email Account">
            <summary>
            A common representation of an email account.
            </summary>
        </member>
        <member name="O:Page::System#Email#Email Accounts">
            <summary>
            Lists all of the registered email accounts
            </summary>
        </member>
        <member name="M:Page::System#Email#Email Accounts.GetAccount(Email Account@)">
            <summary>
            Gets the selected email account.
            </summary>
            <param name="EmailAccount">The selected email account</param>
        </member>
        <member name="M:Page::System#Email#Email Accounts.SetAccount(Email Account@)">
            <summary>
            Sets an email account to be selected.
            </summary>
            <param name="EmailAccount">The email account to be initially selected on the page</param>
        </member>
        <member name="M:Page::System#Email#Email Accounts.EnableLookupMode">
            <summary>
            Enables the lookup mode on the page.
            </summary>
        </member>
        <member name="M:Page::System#Email#Email Accounts.FilterConnectorV2Accounts(Boolean)">
            <summary>
            Filters the email accounts to only show accounts that are using the Email Connector v2 or v3.
            </summary>
            <param name="Filter">True to filter the email accounts, false to show all email accounts</param>
        </member>
        <member name="M:Page::System#Email#Email Accounts.FilterConnectorV3Accounts(Boolean)">
            <summary>
            Filters the email accounts to only show accounts that are using the Email Connector v2 or v3.
            </summary>
            <param name="UseFilter">True to filter the email accounts, false to show all email accounts</param>
        </member>
        <member name="O:Page::System#Email#Email Account Wizard">
            <summary>
            Step by step guide for adding a new email account in Business Central
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#Default Email Connector v2">
            <summary>
            This is the default implementation of the Email Connector v2 interface which adds the reply, retrievial of emails and marking them as read functionalities.
            </summary>
        </member>
        <member name="O:Interface::System#Email#Default Email Rate Limit">
            <summary>
            A default email rate limit interface used to limit how many e-mails per second a connector can send.
            </summary>
        </member>
        <member name="M:Interface::System#Email#Default Email Rate Limit.GetDefaultEmailRateLimit:Integer">
            <summary>
            Provides the default email rate limit for the connector.
            </summary>
            <returns>A default email rate limit.</returns>
        </member>
        <member name="O:Enum::System#Email#Email Connector">
            <summary>
            Enum that holds all of the available email connectors.
            </summary>
        </member>
        <member name="O:Interface::System#Email#Email Connector">
            <summary>
            An e-mail connector interface used to creating e-mail accounts and sending an e-mail.
            </summary>
        </member>
        <member name="M:Interface::System#Email#Email Connector.Send(Codeunit::System#Email#Email Message,Guid)">
            <summary>
            Sends an e-mail using the provided account.
            </summary>
            <param name="EmailMessage">The email message that is to be sent out.</param>
            <param name="AccountId">The email account ID which is used to send out the email.</param>
        </member>
        <member name="M:Interface::System#Email#Email Connector.GetAccounts(Email Account@)">
            <summary>
            Gets the e-mail accounts registered for the connector.
            </summary>
            <param name="Accounts">Out variable that holds the registered e-mail accounts for the connector.</param>
        </member>
        <member name="M:Interface::System#Email#Email Connector.ShowAccountInformation(Guid)">
            <summary>
            Shows the information for an e-mail account.
            </summary>
            <param name="AccountId">The ID of the e-mail account</param>
        </member>
        <member name="M:Interface::System#Email#Email Connector.RegisterAccount(Email Account@):Boolean">
            <summary>
            Registers an e-mail account for the connector.
            </summary>
            <remarks>The out parameter must hold the account ID of the added account.</remarks>
            <param name="Account">Out parameter with the details of the registered Account.</param>
            <returns>True if an account was registered.</returns>
        </member>
        <member name="M:Interface::System#Email#Email Connector.DeleteAccount(Guid):Boolean">
            <summary>
            Deletes an e-mail account for the connector.
            </summary>
            <param name="AccountId">The ID of the e-mail account</param>
            <returns>True if an account was deleted.</returns>
        </member>
        <member name="M:Interface::System#Email#Email Connector.GetLogoAsBase64:Text">
            <summary>
            Provides a custom logo for the connector that shows in the Setup Email Account Guide.
            </summary>
            <returns>Base64 encoded image.</returns>
            <remarks>The recomended image size is 128x128.</remarks>
            <returns>The logo of the connector is Base64 format</returns>
        </member>
        <member name="M:Interface::System#Email#Email Connector.GetDescription:Text[250]">
            <summary>
            Provides a more detailed description of the connector.
            </summary>
            <returns>A more detailed desctiption of the connector.</returns>
        </member>
        <member name="O:Interface::System#Email#Email Connector v2">
            <summary>
            An e-mail connector interface enhances the "Email Connector" with reading, replying to e-mails and marking emails as read.
            </summary>
        </member>
        <member name="M:Interface::System#Email#Email Connector v2.Reply(Codeunit::System#Email#Email Message@,Guid)">
            <summary>
            Reply to an e-mail using the provided account.
            </summary>
            <param name="EmailMessage">The email message that is to be sent out.</param>
            <param name="AccountId">The email account ID which is used to send out the email.</param>
        </member>
        <member name="M:Interface::System#Email#Email Connector v2.RetrieveEmails(Guid,Email Inbox@)">
            <summary>
            Read e-mails from the provided account.
            </summary>
            <param name="AccountId">The email account ID which is used to send out the email.</param>
            <param name="EmailInbox">The email inbox record that will store the emails.</param>
        </member>
        <member name="M:Interface::System#Email#Email Connector v2.MarkAsRead(Guid,Text)">
            <summary>
            Mark an e-mail as read in the provided account.
            </summary>
            <param name="AccountId">The email account ID.</param>
            <param name="ExternalId">The external ID of the email.</param>
        </member>
        <member name="O:Interface::System#Email#Email Connector v3">
            <summary>
            An e-mail connector interface enhances the "Email Connector" with reading, replying to e-mails and marking emails as read.
            </summary>
        </member>
        <member name="M:Interface::System#Email#Email Connector v3.Reply(Codeunit::System#Email#Email Message@,Guid)">
            <summary>
            Reply to an e-mail using the provided account.
            </summary>
            <param name="EmailMessage">The email message that is to be sent out.</param>
            <param name="AccountId">The email account ID which is used to send out the email.</param>
        </member>
        <member name="M:Interface::System#Email#Email Connector v3.RetrieveEmails(Guid,Email Inbox@,Email Retrieval Filters@)">
            <summary>
            Read e-mails from the provided account.
            </summary>
            <param name="AccountId">The email account ID which is used to send out the email.</param>
            <param name="EmailInbox">The email inbox record that will store the emails.</param>
            <param name="Filters">Filters to be used when retrieving emails.</param>
        </member>
        <member name="M:Interface::System#Email#Email Connector v3.MarkAsRead(Guid,Text)">
            <summary>
            Mark an e-mail as read in the provided account.
            </summary>
            <param name="AccountId">The email account ID.</param>
            <param name="ExternalId">The external ID of the email.</param>
        </member>
        <member name="O:Codeunit::System#Email#Email">
            <summary>
            Provides functionality to create and send emails.
            </summary>
        </member>
        <member name="M:Codeunit::System#Email#Email.SaveAsDraft(Codeunit::System#Email#Email Message)">
            <summary>
            Saves a draft email in the Outbox.
            </summary>
            <param name="EmailMessage">The email message to save.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.SaveAsDraft(Codeunit::System#Email#Email Message,Email Outbox@)">
            <summary>
            Saves a draft email in the Outbox.
            </summary>
            <param name="EmailMessage">The email message to save.</param>
            <param name="EmailOutbox">The created outbox entry.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.SaveAsDraft(Codeunit::System#Email#Email Message,Guid,Enum::System#Email#Email Connector,Email Outbox@)">
            <summary>
            Saves a draft email in the Outbox.
            </summary>
            <param name="EmailMessage">The email message to save.</param>
            <param name="EmailAccountId">The email account ID for sending.</param>
            <param name="EmailConnector">The email connector for sending.</param>
            <param name="EmailOutbox">The created outbox entry.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.Enqueue(Codeunit::System#Email#Email Message)">
            <summary>
            Enqueues an email to be sent in the background.
            </summary>
            <remarks>The default account will be used for sending the email.</remarks>
            <param name="EmailMessage">The email message to use as payload.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.Enqueue(Codeunit::System#Email#Email Message,DateTime)">
            <summary>
            Enqueues an email to be sent in the background.
            </summary>
            <remarks>The default account will be used for sending the email.</remarks>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="NotBefore">The date and time for sending the email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.Enqueue(Codeunit::System#Email#Email Message,Enum::System#Email#Email Scenario)">
            <summary>
            Enqueues an email to be sent in the background.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailScenario">The scenario to use in order to determine the email account to use for sending the email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.Enqueue(Codeunit::System#Email#Email Message,Enum::System#Email#Email Scenario,DateTime)">
            <summary>
            Enqueues an email to be sent in the background.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailScenario">The scenario to use in order to determine the email account to use for sending the email.</param>
            <param name="NotBefore">The date and time for sending the email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.Enqueue(Codeunit::System#Email#Email Message,Email Account)">
            <summary>
            Enqueues an email to be sent in the background.
            </summary>
            <remarks>Both "Account Id" and Connector fields need to be set on the <paramref name="EmailAccount"/> parameter.</remarks>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailAccount">The email account to use for sending the email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.Enqueue(Codeunit::System#Email#Email Message,Email Account,DateTime)">
            <summary>
            Enqueues an email to be sent in the background.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailAccount">The email account to use for sending the email.</param>
            <param name="NotBefore">The earliest date and time for sending the email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.Enqueue(Codeunit::System#Email#Email Message,Guid,Enum::System#Email#Email Connector)">
            <summary>
            Enqueues an email to be sent in the background.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.Enqueue(Codeunit::System#Email#Email Message,Guid,Enum::System#Email#Email Connector,DateTime)">
            <summary>
            Enqueues an email to be sent in the background.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <param name="NotBefore">The date and time for sending the email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.Send(Codeunit::System#Email#Email Message):Boolean">
            <summary>
            Sends the email in the current session.
            </summary>
            <remarks>The default account will be used for sending the email.</remarks>
            <param name="EmailMessage">The email message to use as payload.</param>
            <returns>True if the email was successfully sent; otherwise - false.</returns>
            <error>The email message has already been queued.</error>
            <error>The email message has already been sent.</error>
        </member>
        <member name="M:Codeunit::System#Email#Email.Send(Codeunit::System#Email#Email Message,Enum::System#Email#Email Scenario):Boolean">
            <summary>
            Sends the email in the current session.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailScenario">The scenario to use in order to determine the email account to use for sending the email.</param>
            <returns>True if the email was successfully sent; otherwise - false.</returns>
            <error>The email message has already been queued.</error>
            <error>The email message has already been sent.</error>
        </member>
        <member name="M:Codeunit::System#Email#Email.Send(Codeunit::System#Email#Email Message,Email Account):Boolean">
            <summary>
            Sends the email in the current session.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailAccount">The email account to use for sending the email.</param>
            <remarks>Both "Account Id" and Connector fields need to be set on the <paramref name="EmailAccount"/> parameter.</remarks>
            <returns>True if the email was successfully sent; otherwise - false</returns>
            <error>The email message has already been queued.</error>
            <error>The email message has already been sent.</error>
        </member>
        <member name="M:Codeunit::System#Email#Email.Send(Codeunit::System#Email#Email Message,Guid,Enum::System#Email#Email Connector):Boolean">
            <summary>
            Sends the email in the current session.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <returns>True if the email was successfully sent; otherwise - false</returns>
            <error>The email message has already been queued.</error>
            <error>The email message has already been sent.</error>
        </member>
        <member name="M:Codeunit::System#Email#Email.Reply(Codeunit::System#Email#Email Message,Text,Guid,Enum::System#Email#Email Connector):Boolean">
            <summary>
            Sends a reply to an external message id in the foreground.
            </summary>
            <param name="EmailMessage">The email message with the details of the recipients and reply to be added.</param>
            <param name="ExternalId">The external message id that is used to correlate and send the reply.</param>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <returns>True if sent</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.ReplyAll(Codeunit::System#Email#Email Message,Text,Guid,Enum::System#Email#Email Connector):Boolean">
            <summary>
            Sends a reply to an external message id to all recipients on that email in the foreground.
            </summary>
            <param name="EmailMessage">The email message with the details of the recipients and reply to be added.</param>
            <param name="ExternalId">The external message id that is used to correlate and send the reply.</param>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <returns>True if sent</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.EnqueueReply(Codeunit::System#Email#Email Message,Text,Guid,Enum::System#Email#Email Connector,Email Outbox@)">
            <summary>
            Sends a reply to an external message id in the background.
            </summary>
            <param name="EmailMessage">The email message with the details of the recipients and reply to be added.</param>
            <param name="ExternalId">The external message id that is used to correlate and send the reply.</param>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <param name="EmailOutbox">The email outbox which is set up for sending in the background.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.EnqueueReplyAll(Codeunit::System#Email#Email Message,Text,Guid,Enum::System#Email#Email Connector,Email Outbox@)">
            <summary>
            Sends a reply to an external message id to all recipients on that email in the foreground.
            </summary>
            <param name="EmailMessage">The email message with the details of the recipients and reply to be added.</param>
            <param name="ExternalId">The external message id that is used to correlate and send the reply.</param>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <param name="EmailOutbox">The email outbox which is set up for sending in the background.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.Reply(Codeunit::System#Email#Email Message,Guid,Enum::System#Email#Email Connector):Boolean">
            <summary>
            Sends a reply to an external message id in the foreground.
            </summary>
            <param name="EmailMessage">The email message with the details of the recipients and reply to be added.</param>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <returns>True if sent</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.ReplyAll(Codeunit::System#Email#Email Message,Guid,Enum::System#Email#Email Connector):Boolean">
            <summary>
            Sends a reply to an external message id to all recipients on that email in the foreground.
            </summary>
            <param name="EmailMessage">The email message with the details of the recipients and reply to be added.</param>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <returns>True if sent</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.EnqueueReply(Codeunit::System#Email#Email Message,Guid,Enum::System#Email#Email Connector,Email Outbox@)">
            <summary>
            Sends a reply to an external message id in the background.
            </summary>
            <param name="EmailMessage">The email message with the details of the recipients and reply to be added.</param>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <param name="EmailOutbox">The email outbox which is set up for sending in the background.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.EnqueueReplyAll(Codeunit::System#Email#Email Message,Guid,Enum::System#Email#Email Connector,Email Outbox@)">
            <summary>
            Sends a reply to an external message id to all recipients on that email in the foreground.
            </summary>
            <param name="EmailMessage">The email message with the details of the recipients and reply to be added.</param>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <param name="EmailOutbox">The email outbox which is set up for sending in the background.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.RetrieveEmails(Guid,Enum::System#Email#Email Connector,Email Inbox@)">
            <summary>
            Retrieves emails from the email account.
            </summary>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <param name="EmailInbox">The return record of all new emails that were retrieved.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.RetrieveEmails(Guid,Enum::System#Email#Email Connector,Email Inbox@,Email Retrieval Filters@)">
            <summary>
            Retrieves emails from the email account.
            </summary>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <param name="EmailInbox">The return record of all new emails that were retrieved.</param>
            <param name="Filters">Filters to be used when retrieving emails.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.MarkAsRead(Guid,Enum::System#Email#Email Connector,Text)">
            <summary>
            Marks the specified email as read.
            </summary>
            <param name="EmailAccountId">The ID of the email account to use for sending the email.</param>
            <param name="EmailConnector">The email connector to use for sending the email.</param>
            <param name="ExternalId">The external message id that is used to correlate and mark as read.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenInEditor(Codeunit::System#Email#Email Message)">
            <summary>
            Opens an email message in "Email Editor" page.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenInEditor(Codeunit::System#Email#Email Message,Enum::System#Email#Email Scenario)">
            <summary>
            Opens an email message in "Email Editor" page.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailScenario">The scenario to use in order to determine the email account to use  on the page.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenInEditor(Codeunit::System#Email#Email Message,Email Account)">
            <summary>
            Opens an email message in "Email Editor" page.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailAccount">The email account to fill in.</param>
            <remarks>Both "Account Id" and Connector fields need to be set on the <paramref name="EmailAccount"/> parameter.</remarks>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenInEditor(Codeunit::System#Email#Email Message,Guid,Enum::System#Email#Email Connector)">
            <summary>
            Opens an email message in "Email Editor" page.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailAccountId">The ID of the email account to use on the page.</param>
            <param name="EmailConnector">The email connector to use on the page.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenInEditorModally(Codeunit::System#Email#Email Message):Enum::System#Email#Email Action">
            <summary>
            Opens an email message in "Email Editor" page modally.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <returns>The action that the user performed with the email message.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenInEditorModally(Codeunit::System#Email#Email Message,Enum::System#Email#Email Scenario):Enum::System#Email#Email Action">
            <summary>
            Opens an email message in "Email Editor" page modally.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailScenario">The scenario to use in order to determine the email account to use  on the page.</param>
            <returns>The action that the user performed with the email message.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenInEditorModallyWithScenario(Codeunit::System#Email#Email Message,Email Account,Enum::System#Email#Email Scenario):Enum::System#Email#Email Action">
            <summary>
            Opens an email message in "Email Editor" page modally with scenario.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailAccount">The email account to fill in.</param>
            <param name="Scenario">The email scenario to fill in.</param>
            <remarks>Both "Account Id" and Connector fields need to be set on the <paramref name="EmailAccount"/> parameter.</remarks>
            <returns>The action that the user performed with the email message.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenInEditorModally(Codeunit::System#Email#Email Message,Email Account):Enum::System#Email#Email Action">
            <summary>
            Opens an email message in "Email Editor" page modally.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailAccount">The email account to fill in.</param>
            <remarks>Both "Account Id" and Connector fields need to be set on the <paramref name="EmailAccount"/> parameter.</remarks>
            <returns>The action that the user performed with the email message.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenInEditorModally(Codeunit::System#Email#Email Message,Guid,Enum::System#Email#Email Connector):Enum::System#Email#Email Action">
            <summary>
            Opens an email message in "Email Editor" page modally.
            </summary>
            <param name="EmailMessage">The email message to use as payload.</param>
            <param name="EmailAccountId">The ID of the email account to use on the page.</param>
            <param name="EmailConnector">The email connector to use on the page.</param>
            <returns>The action that the user performed with the email message.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.GetSentEmailsForRecord(Integer,Guid,Sent Email@)">
            <summary>
             Gets the sent emails related to a record.
            </summary>
            <param name="TableId">The table ID of the record.</param>
            <param name="SystemId">The system ID of the record.</param>
            <returns>The sent email related to a record.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.GetSentEmailsForRecord(Variant,Sent Email@)">
            <summary>
             Gets the sent emails related to a record.
            </summary>
            <param name="RecordVariant">Source Record.</param>
            <param name="ResultSentEmails">The sent email related to a record.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.GetEmailOutboxForRecord(Variant,Email Outbox@)">
            <summary>
             Gets the outbox emails related to a record.
            </summary>
            <param name="RecordVariant">Source record.</param>
            <param name="ResultEmailOutbox">The outbox emails related to a record.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenSentEmails(Integer,Guid)">
            <summary>
             Open the sent emails page for a source record given by its table ID and system ID.
            </summary>
            <param name="TableId">The table ID of the record.</param>
            <param name="SystemId">The system ID of the record.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenSentEmails(Variant)">
            <summary>
            Open the sent emails page for a source record.
            </summary>
            <param name="RecordVariant">Source record. Can be either Record, RecordRef or RecordId.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OpenSentEmails(Integer,Guid,DateTime)">
            <summary>
             Open the sent emails page for a source record given by its table ID and system ID.
            </summary>
            <param name="TableId">The table ID of the source record.</param>
            <param name="SystemId">The system ID of the source record.</param>
            <param name="NewerThanDate">The date to which the sent emails are filtered.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.GetOutboxEmailRecordStatus(Guid):Enum::System#Email#Email Status">
            <summary>
             Gets the outbox email status.
            </summary>
            <param name="MessageId">The MessageId of the record.</param>
            <returns>Email Status of the record.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.AddRelation(Codeunit::System#Email#Email Message,Integer,Guid,Enum::System#Email#Email Relation Type,Enum::System#Email#Email Relation Origin)">
            <summary>
             Adds a relation between an email message and a record.
            </summary>
            <param name="EmailMessage">The email message for which to create the relation.</param>
            <param name="TableId">The table ID of the record.</param>
            <param name="SystemId">The system ID of the record.</param>
            <param name="RelationType">The relation type to set.</param>
            <param name="Origin">The origin of when the relation is added to the email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.RemoveRelation(Codeunit::System#Email#Email Message,Integer,Guid):Boolean">
            <summary>
             Removes a related record from an email message.
            </summary>
            <param name="EmailMessage">The email message for which to remove the relation.</param>
            <param name="TableId">The table ID of the record.</param>
            <param name="SystemId">The system ID of the record.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.HasRelations(Codeunit::System#Email#Email Message):Boolean">
            <summary>
            Check if email has any related records linked.
            </summary>
            <param name="EmailMessage">The email message for which to check.</param>
            <returns>True if it has a related records, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email.AddDefaultAttachments(Codeunit::System#Email#Email Message,Enum::System#Email#Email Scenario)">
            <summary>
            Adds the default attachments of a scenario to the email message.
            </summary>
            <param name="EmailMessage">The email message for which to add the attachments.</param>
            <param name="EmailScenario">Includes the default attachments from this scenario.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnShowSource(Integer,Guid,Boolean@)">
            <summary>
            Integration event to show an email source record.
            </summary>
            <param name="SourceTable">The ID of table that contains the source record.</param>
            <param name="SourceSystemId">The system ID of the source record.</param>
            <param name="IsHandled">Out parameter to set if the event was handled.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnAfterAddRelation(Guid,Integer,Guid,Dictionary of [Integer,List]@)">
            <summary>
            Integration event to add additional relations based on added relation to emails.
            </summary>
            <param name="EmailMessageId">The ID of the email.</param>
            <param name="TableId">Record table id.</param>
            <param name="SystemId">Record system id.</param>
            <param name="RelatedSystemIds">Dictionary that contains a list of system ids for each table id, allowing to add related records to the email.</param>
            <remarks>A related record consists of a table id and a system id.</remarks>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnAfterRemoveRelation(Guid,Integer,Guid)">
            <summary>
            Integration event to execute code when relation is removed from email.
            </summary>
            <param name="EmailMessageId">The ID of the email.</param>
            <param name="TableId">Record table id.</param>
            <param name="SystemId">Record system id.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnGetBodyForTestEmail(Enum::System#Email#Email Connector,Guid,Text@)">
            <summary>
            Integration event to override the default email body for test messages.
            </summary>
            <param name="Connector">The connector used to send the email message.</param>
            <param name="AccountId">The account ID of the email account used to send the email message.</param>
            <param name="Body">Out param to set the email body to a new value.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnFindRelatedAttachments(Integer,Guid,Email Related Attachment@)">
            <summary>
            Integration event to get the names and IDs of attachments related to a source record.
            </summary>
            <param name="SourceTableId">The table number of the source record.</param>
            <param name="SourceSystemID">The system ID of the source record.</param>
            <param name="EmailRelatedAttachments">Out parameter to return attachments related to the source record.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnGetAttachment(Integer,Guid,Guid)">
            <summary>
            Integration event that requests an attachment to be added to an email.
            </summary>
            <param name="AttachmentTableID">The table number of the attachment.</param>
            <param name="AttachmentSystemID">The system ID of the attachment.</param>
            <param name="MessageID">The ID of the email to add an attachment to.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnEnqueuedInOutbox(Guid)">
            <summary>
            Integration event to implement additional validation after the email message has been enqueued in the email outbox.
            </summary>
            <param name="MessageId">The ID of the email that has been queued</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnEnqueuedReplyInOutbox(Guid)">
            <summary>
            Integration event to implement additional validation after the email message has been enqueued in the email outbox.
            </summary>
            <param name="MessageId">The ID of the email that has been queued</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnAfterEmailSent(Sent Email)">
            <summary>
            Integration event that notifies senders when the email has been sent successfully. This event is isolated.
            </summary>
            <param name="SentEmail">The record of the sent email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnAfterEmailSendFailed(Email Outbox)">
            <summary>
            Integration event that notifies senders when the email has been sent unsuccessfully. This event is isolated.
            </summary>
            <param name="EmailOutbox">The record of the email outbox that failed to send.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnBeforeOpenEmailEditor(Codeunit::System#Email#Email Message@,Boolean)">
            <summary>
            Integration event that allows updating of the email message before the email editor opens.
            </summary>
            <param name="EmailMessage">Email message codeunit which is linked to the current email.</param>
            <param name="IsNewEmail">True if this is a newly created email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnBeforeSendEmail(Codeunit::System#Email#Email Message@)">
            <summary>
            Integration event that allows updating of the email message before the email is queued for sending.
            </summary>
            <param name="EmailMessage">Email message codeunit which is linked to the current email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnBeforeReplyEmail(Codeunit::System#Email#Email Message@)">
            <summary>
            Integration event that allows updating of the email message before the email is queued for replying.
            </summary>
            <param name="EmailMessage">Email message codeunit which is linked to the current email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email.OnBeforeGetEmailAttachmentsByEmailScenarios(Email Scenario Attachments@)">
            <summary>
            Integration event that allows adding filters to the Email Scenario Attachments before they are retrieved.
            </summary>
            <param name="EmailScenarioAttachments">The record to add filters to.</param>
        </member>
        <member name="O:Page::System#Email#Email Activities">
            <summary>
            Provides information about the status of the emails.
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#Email Record Reference Impl#">
            <summary>
            Used to provide indirect permission to retention policies
            </summary>
        </member>
        <member name="O:Table::System#Email#Email Related Record">
            <summary>
             Holds the relations between emails and records.
             </summary>
        </member>
        <member name="F:Table::System#Email#Email Related Record.Relation Origin">
            <summary>
            The origin of this relation. When or how it was added to the email.
            </summary>
        </member>
        <member name="O:Enum::System#Email#Email Relation Origin">
            <summary>
            Represent how a email relation was added to an email.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Relation Origin.Compose Context">
            <summary>
            Compose context of an email. Relations added to the email when it was first composed.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Relation Origin.Email Address Lookup">
            <summary>
            Email address lookup. Relations added to the email using address lookup.
            </summary>
        </member>
        <member name="O:Enum::System#Email#Email Relation Type">
            <summary>
            Represent the type of relation between an email and a source record.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Relation Type.Primary Source">
            <summary>
            Primary source of an email. There should only be one primary source for an email.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Relation Type.Related Entity">
            <summary>
            Related entity of an email. An email can have many record relations of this type.
            </summary>
        </member>
        <member name="O:Enum::System#Email#Email Address Entity">
            <summary>
            System entity of record with email address.
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#Email Address Lookup">
            <summary>
            Provides functionality to run an email address lookup.
            </summary>
        </member>
        <member name="M:Codeunit::System#Email#Email Address Lookup.OnGetSuggestedAddresses(Integer,Guid,Email Address Lookup@)">
            <summary>
            Event that allows subscribers to populate the list of "Suggested Email Addresses" in the Email Address Lookup.
            </summary>
            <param name="TableId">Table id of a related record.</param>
            <param name="SystemId">System id of a related record.</param>
            <param name="Address">Email Address record used to return suggested addresses.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Address Lookup.OnLookupAddressFromEntity(Enum::System#Email#Email Address Entity,Email Address Lookup@,Boolean@)">
            <summary>
            Event that retrieves email address information from a specified entity.
            </summary>
            <param name="Entity">Entity Type.</param>
            <param name="Address">Email Address record used to return addresses.</param>
            <param name="IsHandled">Boolean indicating whether the event has been handled.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Address Lookup.GetSelectedSuggestionsAsText(Email Address Lookup@):Text">
            <summary>
            Produces a string of email addresses from an Email Address record.
            </summary>
            <param name="Address">EmailAddress record used to create text.</param>
            <returns>A concatenated string of the email addresses.</returns>
        </member>
        <member name="O:Page::System#Email#Email Address Lookup">
            <summary>
            Page to view suggested addresses.
            </summary>
        </member>
        <member name="O:Table::System#Email#Email Address Lookup">
            <summary>
            Temporary table that holds email address suggestions.
            Table is used when user lookup addresses in the email editor.
            </summary>
        </member>
        <member name="F:Table::System#Email#Email Address Lookup.Name[250]">
            <summary>
            Name of suggested contact.
            </summary>
        </member>
        <member name="F:Table::System#Email#Email Address Lookup.E-Mail Address[250]">
            <summary>
            Email address of suggested contact.
            </summary>
        </member>
        <member name="F:Table::System#Email#Email Address Lookup.Company[250]">
            <summary>
            Company that suggested contact works for.
            </summary>
        </member>
        <member name="F:Table::System#Email#Email Address Lookup.Source Table Number">
            <summary>
            Table id for suggested record.
            </summary>
        </member>
        <member name="F:Table::System#Email#Email Address Lookup.Source System Id">
            <summary>
            System id for suggested record.
            </summary>
        </member>
        <member name="F:Table::System#Email#Email Address Lookup.Entity type">
            <summary>
            Records entity type.
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#Email Message">
            <summary>
            Codeunit to create and manage email messages.
            </summary>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Create(Text,Text,Text)">
            <summary>
            Creates the email with recipients, subject, and body.
            </summary>
            <param name="ToRecipients">The recipient(s) of the email. A string containing the email addresses of the recipients separated by semicolon.</param>
            <param name="Subject">The subject of the email.</param>
            <param name="Body">Raw text that will be used as body of the email.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Create(Text,Text,Text,Boolean)">
            <summary>
            Creates the email with recipients, subject, and body.
            </summary>
            <param name="ToRecipients">The recipient(s) of the email. A string containing the email addresses of the recipients separated by semicolon.</param>
            <param name="Subject">The subject of the email.</param>
            <param name="Body">The body of the email.</param>
            <param name="HtmlFormatted">Whether the body is HTML formatted.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Create(Text,Text,Text,Boolean,Boolean)">
            <summary>
            Creates the email with recipients, subject, and body.
            </summary>
            <param name="ToRecipients">The recipient(s) of the email. A string containing the email addresses of the recipients separated by semicolon.</param>
            <param name="Subject">The subject of the email.</param>
            <param name="Body">The body of the email.</param>
            <param name="HtmlFormatted">Whether the body is HTML formatted.</param>
            <param name="Sanitize">If the body is of HTML formatting, most of it will be sanitized. Keeping only tags and no styling.</param>
            <remarks>Sanitize is only applicable if the body is HTML formatted. It also helps prevent potential email messages from hiding images and text from the user.</remarks>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Create(List of [Text],Text,Text,Boolean)">
            <summary>
            Creates the email with recipients, subject, and body.
            </summary>
            <param name="ToRecipients">The recipient(s) of the email. A list of email addresses the email will be send directly to.</param>
            <param name="Subject">The subject of the email.</param>
            <param name="Body">The body of the email</param>
            <param name="HtmlFormatted">Whether the body is HTML formatted</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Create(List of [Text],Text,Text,Boolean,List of [Text],List of [Text])">
            <summary>
            Creates the email with recipients, subject, and body.
            </summary>
            <param name="ToRecipients">The recipient(s) of the email. A list of email addresses the email will be send directly to.</param>
            <param name="Subject">The subject of the email.</param>
            <param name="Body">The body of the email.</param>
            <param name="HtmlFormatted">Whether the body is HTML formatted.</param>
            <param name="CCRecipients">The CC recipient(s) of the email. A list of email addresses that will be listed as CC.</param>
            <param name="BCCRecipients">TThe BCC recipient(s) of the email. A list of email addresses that will be listed as BCC.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.CreateReply(Text,Text,Text,Boolean,Text)">
            <summary>
            Creates the email reply with recipients, subject, and body.
            </summary>
            <param name="ToRecipients">The recipient(s) of the email. A string containing the email addresses of the recipients separated by semicolon.</param>
            <param name="Subject">The subject of the email.</param>
            <param name="Body">The body of the email.</param>
            <param name="HtmlFormatted">Whether the body is HTML formatted.</param>
            <param name="ExternalId">The external message id to reply to.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.CreateReply(List of [Text],Text,Text,Boolean,Text)">
            <summary>
            Creates the email reply with recipients, subject, and body.
            </summary>
            <param name="ToRecipients">The recipient(s) of the email. A list of email addresses the email will be send directly to.</param>
            <param name="Subject">The subject of the email.</param>
            <param name="Body">The body of the email.</param>
            <param name="HtmlFormatted">Whether the body is HTML formatted.</param>
            <param name="ExternalId">The external message id to reply to.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.CreateReply(List of [Text],Text,Text,Boolean,Text,List of [Text],List of [Text])">
            <summary>
            Creates the email reply with recipients, subject, and body.
            </summary>
            <param name="ToRecipients">The recipient(s) of the email. A list of email addresses the email will be send directly to.</param>
            <param name="Subject">The subject of the email.</param>
            <param name="Body">The body of the email.</param>
            <param name="HtmlFormatted">Whether the body is HTML formatted.</param>
            <param name="ExternalId">The external message id to reply to.</param>
            <param name="CCRecipients">The CC recipient(s) of the email. A list of email addresses that will be listed as CC.</param>
            <param name="BCCRecipients">TThe BCC recipient(s) of the email. A list of email addresses that will be listed as BCC.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.CreateReplyAll(Text,Text,Boolean,Text)">
            <summary>
            Creates the email replying to all existing recipents on the mail thread, subject, and body.
            </summary>
            <param name="Subject">The subject of the email.</param>
            <param name="Body">The body of the email.</param>
            <param name="HtmlFormatted">Whether the body is HTML formatted.</param>
            <param name="ExternalId">The external message id to reply to.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Get(Guid):Boolean">
            <summary>
            Gets the email message with the given ID.
            </summary>
            <param name="MessageId">The ID of the email message to get.</param>
            <returns>True if the email was found; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.DeleteOrphanedMessages(Guid,Integer):Guid">
            <summary>
            Deletes messages that does not have a reference from either the email outbox nor sent email.
            This functionality is only needed if email messages have been created without any email outbox or sent email referencing it, otherwise they will be cleaned up automatically.
            </summary>
            <param name="StartMessageId">The email message id to start from. Using empty guid will start from the beginning.</param>
            <param name="MessagesToIterate">Number of email messages to loop over.</param>
            <returns>The next email message id to be checked. Returns empty guid if there are no more messages.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.GetBody:Text">
            <summary>
            Gets the body of the email message.
            </summary>
            <returns>The body of the email.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.SetBody(Text)">
            <summary>
            Sets the body of the email message.
            </summary>
            <param name="Body">The body to set to the email message.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.AppendToBody(Text)">
            <summary>
            Appends to the body of the email message.
            <param name="Value">The value to append to the body of the email message.</param>
            </summary>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.GetSubject:Text[2048]">
            <summary>
            Gets the subject of the email message.
            </summary>
            <returns>The subject of the email.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.SetSubject(Text)">
            <summary>
            Sets the subject of the email message.
            </summary>
            <param name="Subject">The subject to set to the email message.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.IsBodyHTMLFormatted:Boolean">
            <summary>
            Checks if the email body is formatted in HTML.
            </summary>
            <returns>True if the email body is formatted in HTML; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.SetBodyHTMLFormatted(Boolean)">
            <summary>
            Sets whether the email body is formatted in HTML.
            <param name="Value">True if the email body is formatted in HTML; otherwise - false.</param>
            </summary>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.GetId:Guid">
            <summary>
            Gets the ID of the email message.
            </summary>
            <returns>The ID of the email.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.GetRecipients(Enum::System#Email#Email Recipient Type,List of [Text]@)">
            <summary>
            Gets the recipents of a certain type of the email message.
            </summary>
            <param name="RecipientType">Specifies the type of the recipients.</param>
            <param name="Recipients">Out parameter filled with the recipients' email addresses.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.SetRecipients(Enum::System#Email#Email Recipient Type,Text)">
            <summary>
            Sets the recipents of a certain type of the email message.
            </summary>
            <param name="RecipientType">Specifies the type of the recipients.</param>
            <param name="Recipients">Specifies the list of the recipients' email addresses as a semicolon (;) separated list.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.SetRecipients(Enum::System#Email#Email Recipient Type,List of [Text])">
            <summary>
            Sets the recipents of a certain type of the email message.
            </summary>
            <param name="RecipientType">Specifies the type of the recipients.</param>
            <param name="Recipients">Specifies the list of the recipients' email addresses.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.AddRecipient(Enum::System#Email#Email Recipient Type,Text)">
            <summary>
            Adds a recipient of a certain type to the email message.
            </summary>
            <param name="RecipientType">Specifies the type of the recipient.</param>
            <param name="Recipient">Specifies the recipient's email address.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.AddAttachment(Text[250],Text[250],Text)">
            <summary>
            Adds a file attachment to the email message.
            </summary>
            <param name="AttachmentName">The name of the file attachment.</param>
            <param name="ContentType">The Content Type of the file attachment.</param>
            <param name="AttachmentBase64">The Base64 text representation of the attachment.</param>
            <returns>True if the attachment was added; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.AddAttachment(Text[250],Text[250],InStream)">
            <summary>
            Adds a file attachment to the email message.
            </summary>
            <param name="AttachmentName">The name of the file attachment.</param>
            <param name="ContentType">The Content Type of the file attachment.</param>
            <param name="AttachmentInStream">The instream of the attachment.</param>
            <returns>True if the attachment was added; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.AddAttachment(Text[250],Text[250],Boolean,Text[40],InStream)">
            <summary>
            Adds a file attachment to the email message.
            </summary>
            <param name="AttachmentName">The name of the file attachment.</param>
            <param name="ContentType">The Content Type of the file attachment.</param>
            <param name="InLine">Specifies whether the attachment is inline.</param>
            <param name="ContentId">The Content ID of the file attachment.</param>
            <param name="AttachmentInStream">The instream of the attachment.</param>
            <returns>True if the attachment was added; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.AddAttachmentFromScenario(Email Attachments@)">
            <summary>
            Adds attachments from scenario to the email message.
            </summary>
            <param name="EmailAttachments">The reference to the email attachments </param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_DeleteContent:Boolean">
            <summary>
            Deletes the contents of the currently selected attachment.
            </summary>
            <returns>Returns true if contents was successfully deleted, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_DeleteContent(Boolean):Boolean">
            <summary>
            Deletes the contents of the currently selected attachment.
            </summary>
            <param name="BypassSentCheck">If true, the attachment content will be deleted even if the email message has been sent.</param>
            <returns>Returns true if contents was successfully deleted, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_Delete:Boolean">
            <summary>
            Deletes the currently selected attachment.
            </summary>
            <returns>Returns true if attachment was successfully deleted, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_Delete(Boolean):Boolean">
            <summary>
            Deletes the currently selected attachment.
            </summary>
            <param name="BypassSentCheck">If true, the attachment will be deleted even if the email message has been sent.</param>
            <returns>Returns true if attachment was successfully deleted, otherwise false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_First:Boolean">
            <summary>
            Finds the first attachment of the email message.
            </summary>
            <returns>True if there is any attachment; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_Next:Integer">
            <summary>
            Finds the next attachment of the email message.
            </summary>
            <returns>The ID of the next attachment if it was found; otherwise - 0.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_GetId:BigInteger">
            <summary>
            Gets the Id of the current attachment
            </summary>
            <returns>The ID of the current attachment.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_GetName:Text[250]">
            <summary>
            Gets the name of the current attachment.
            </summary>
            <returns>The name of the current attachment.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_GetContent(InStream@)">
            <summary>
            Gets the content of the current attachment.
            </summary>
            <param name="AttachmentInStream">Out parameter with the content of the current attachment.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_GetContentBase64:Text">
            <summary>
            Gets the content of the current attachment in Base64 encoding.
            </summary>
            <returns>The content of the current attachment in Base64 encoding.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_GetContentType:Text[250]">
            <summary>
            Gets the content type of the current attachment.
            </summary>
            <returns>The content type of the current attachment.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_GetContentId:Text[40]">
            <summary>
            Gets the content ID of the current attachment.
            </summary>
            <returns>The content ID of the current attachment.</returns>
            <remarks>This value is filled only if the attachment is inline the email body.</remarks>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_GetLength:Integer">
            <summary>
            Gets the content length of the current attachment.
            </summary>
            <returns>The content length of the current attachment.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.Attachments_IsInline:Boolean">
            <summary>
            Checks if the attachment is inline the message body.
            </summary>
            <returns>True if the attachment is inline the message body; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.GetRelatedAttachments(Email Related Attachment@):Boolean">
            <summary>
            Gets the related attachments.
            </summary>
            <param name="EmailRelatedAttachments">Out parameter with the related attachments.</param>
            <returns>True if any related attachments were found; otherwise - false</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.GetNoOfModifies:Integer">
            <summary>
            Gets number of modifies on the message.
            </summary>
            <returns>The number of modifies.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Message.OnGetAttachmentContent(Guid,InStream@,Boolean@)">
            <summary>
            Integration event to provide the stream of data for a given MediaID. If attachment content has been deleted, this event makes it possible to provide
            the data from elsewhere.
            </summary>
            <param name="MediaID">Id of the underlying media field that contains the attachment data.</param>
            <param name="InStream">Stream to that should pointed to the attachment data.</param>
            <param name="Handled">Was the attachment content added to the stream.</param>
        </member>
        <member name="O:Table::System#Email#Email Message">
            <summary>Holds the payload for emails.</summary>
        </member>
        <member name="O:Table::System#Email#Email Message Attachment">
            <summary></summary>
        </member>
        <member name="O:Enum::System#Email#Email Recipient Type">
            <summary>
            Specifies the type of an email recipient.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Recipient Type.To">
            <summary>
            Recipient type 'To'.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Recipient Type.Cc">
            <summary>
            Recipient type 'Cc'.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Recipient Type.Bcc">
            <summary>
            Recipient type 'Bcc'.
            </summary>
        </member>
        <member name="O:Table::System#Email#Email Related Attachment">
            <summary>
            Temporary table that holds information about attachments related to an email.
            </summary>
        </member>
        <member name="O:Page::System#Email#Email Related Attachments">
            <summary>
            Displays a list of related attachments to an email.
            </summary>
        </member>
        <member name="O:Table::System#Email#Email Rate Limit">
            <summary>
            The rate limits for email accounts.
            </summary>
        </member>
        <member name="O:Page::System#Email#Email Rate Limit Wizard">
            <summary>
            Page is used to display email rate limit usage by email accounts.
            </summary>
        </member>
        <member name="O:Table::System#Email#Email Account Scenario">
            <summary>
            Temporary table used to display the tree sctructure in "Email Scenario Setup".
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#Email Scenario">
            <summary>
            Provides functionality to work with email scenarios.
            </summary>
        </member>
        <member name="M:Codeunit::System#Email#Email Scenario.GetDefaultEmailAccount(Email Account@):Boolean">
            <summary>
            Gets the default email account.
            </summary>
            <param name="EmailAccount">Out parameter holding information about the default email account.</param>
            <returns>True if an account for the the default scenario was found; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Scenario.GetEmailAccount(Enum::System#Email#Email Scenario,Email Account@):Boolean">
            <summary>
            Gets the email account used by the given email scenario.
            If the no account is defined for the provided scenario, the default account (if defined) will be returned.
            </summary>
            <param name="Scenario">The scenario to look for.</param>
            <param name="EmailAccount">Out parameter holding information about the email account.</param>
            <returns>True if an account for the specified scenario was found; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Scenario.IsThereEmailAccountSetForScenario(Enum::System#Email#Email Scenario):Boolean">
            <summary>
            Check if there is an email account set for the given email scenario.
            </summary>
            <param name="Scenario">The scenario to look for.</param>
            <returns>True if there is an account set for the specified scenario; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#Email#Email Scenario.SetDefaultEmailAccount(Email Account)">
            <summary>
            Sets a default email account.
            </summary>
            <param name="EmailAccount">The email account to use.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Scenario.SetEmailAccount(Enum::System#Email#Email Scenario,Email Account)">
            <summary>
            Sets an email account to be used by the given email scenario.
            </summary>
            <param name="Scenario">The scenario for which to set an email account.</param>
            <param name="EmailAccount">The email account to use.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Scenario.UnassignScenario(Enum::System#Email#Email Scenario)">
            <summary>
            Unassign an email scenario. The scenario will then use the default email account.
            </summary>
            <param name="Scenario">The scenario to unassign.</param>
        </member>
        <member name="M:Codeunit::System#Email#Email Scenario.OnBeforeInsertAvailableEmailScenario(Enum::System#Email#Email Scenario,Boolean@)">
            <summary>
            Event for changing whether an email scenario should be added to the list of assignable scenarios.
            If the scenario has already been assigned or is the default scenario, this event won't be published.
            </summary>
            <param name="Scenario">The scenario that is going to be added to the list of assignable scenarios.</param>
            <param name="IsAvailable">The return for whether this scenario should be listed in the assignable scenarios list.</param>
        </member>
        <member name="O:Enum::System#Email#Email Scenario">
            <summary>
            Email scenarios.
            Used to decouple email accounts from sending emails.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Scenario.Default">
            <summary>
            The default email scenario.
            Used in the cases where no other scenario is defined.
            </summary>
        </member>
        <member name="O:Table::System#Email#Email Scenario">
            <summary>
            Holds the mapping between email account and scenarios.
            One scenarios is mapped to one email account.
            One email account can be used for multiple scenarios.
            </summary>
        </member>
        <member name="M:Codeunit::System#Email#Email Scenario Impl#.GetScenariosByEmailAccount(Email Account Scenario@)">
            <summary>
            Get a list of entries, representing a tree structure with email accounts and the scenarios, assigned to each accout.
            </summary>
            <example>
            Account sales@cronus.com has scenarios "Sales Quote" and "Sales Credit Memo" assigned.
            Account purchase@cronus.com has scenarios "Purchase Quote" and "Purchase Invoice" assigned.
            The result of calling the function will be:
            sales@cronus.com, "Sales Quote", "Sales Credit Memo", purchase@cronus.com, "Purchase Quote", "Purchase Invoice"
            </example>
            <param name="Result">A flatten tree structure representing the all the email accounts and the scenarios assigned to them.</param>
        </member>
        <member name="O:Page::System#Email#Email Scenario Setup">
            <summary>
            Page is used to display email scenarios usage by email accounts.
            </summary>
        </member>
        <member name="O:Page::System#Email#Email Scenarios FactBox">
            <summary>
            Lists of all scenarios assigned to an account.
            </summary>
        </member>
        <member name="O:Page::System#Email#Email Scenarios for Account">
            <summary>
            Displays the scenarios that could be linked to a provided e-mail account.
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#Email Test Mail">
            <summary>
            Sends a test email to a specified account.
            </summary>
        </member>
        <member name="O:Page::System#Email#Email User-Specified Address">
            <summary>
            A page to enter an email address.
            </summary>
        </member>
        <member name="M:Page::System#Email#Email User-Specified Address.GetEmailAddress:Text">
            <summary>
            Gets the email address(es) that has been entered.
            </summary>
            <returns>Email address(es)</returns>
        </member>
        <member name="M:Page::System#Email#Email User-Specified Address.SetEmailAddress(Text)">
            <summary>
            Sets the inital value to be displayed.
            </summary>
            <param name="Address">The value to be prefilled</param>
        </member>
        <member name="O:Table::System#Email#Email Attachments">
            <summary>
            Temporary Table used to get Email Attachments related to Email Scenario
            </summary>
        </member>
        <member name="O:Page::System#Email#Email Choose Scenario Attach">
            <summary>
            Page is used to upload the attachments from the scenario.
            </summary>
        </member>
        <member name="O:Table::System#Email#Email Scenario Attachments">
            <summary>
            Table used to get Email Attachments related to Email Scenario
            </summary>
        </member>
        <member name="O:Page::System#Email#Email Scenario Attach Setup">
            <summary>
            Page is used to set the attachments for the scenario.
            </summary>
        </member>
        <member name="O:Table::System#Email#Email Inbox">
            <summary>Holds information about emails retrieved from an inbox.</summary>
        </member>
        <member name="O:Table::System#Email#Email Retrieval Filters">
            <summary>Holds information about the filters for retrieving emails.</summary>
        </member>
        <member name="O:Enum::System#Email#Email Action">
            <summary>
            Defines the action that the user can take when open an email message in the editor modally.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Action.Saved As Draft">
            <summary>
            The email was saved as draft.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Action.Discarded">
            <summary>
            The email was discarded.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Action.Sent">
            <summary>
            The email was sent.
            </summary>
        </member>
        <member name="O:Page::System#Email#Email Editor">
            <summary>
            A page to create, edit and send e-mails.
            </summary>
        </member>
        <member name="O:Page::System#Email#Email Outbox">
            <summary>
            Displays information about email that are queued for sending.
            </summary>
        </member>
        <member name="O:Table::System#Email#Email Outbox">
            <summary>Holds information about draft emails and email that are about to be sent.</summary>
        </member>
        <member name="M:Table::System#Email#Email Outbox.GetMessageId:Guid">
            <summary>
            Get the message id of the outbox email.
            </summary>
            <returns>Message id.</returns>
        </member>
        <member name="M:Table::System#Email#Email Outbox.GetAccountId:Guid">
            <summary>
            Get the account id of the outbox email.
            </summary>
            <returns>Account id.</returns>
        </member>
        <member name="M:Table::System#Email#Email Outbox.GetConnector:Enum::System#Email#Email Connector">
            <summary>
            The email connector of the outbox email.
            </summary>
            <returns>Email connector</returns>
        </member>
        <member name="O:Enum::System#Email#Email Status">
            <summary>
            Specifies the status of an email when it is in the outbox.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Status. ">
            <summary>
            An uninitialized email.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Status.Draft">
            <summary>
            An email waiting to be queued up for sending.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Status.Queued">
            <summary>
            An email queued up and waiting to be processed.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Status.Processing">
            <summary>
            An email that is currently being processed and sent.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email Status.Failed">
            <summary>
            An email that had an error occur during processing.
            </summary>
        </member>
        <member name="O:Query::System#Email#Outbox Emails">
            <summary>
            Query to get all emails in the email outbox and their related records.
            The query has an one to many relationship between email and the related records.
            This file contains logic that is identical to the SendEmails.Query.al.
            If changes are made to this file, make sure to update SendEmails to.
            </summary>
        </member>
        <member name="C:Query::System#Email#Outbox Emails.EmailOutbox.RelatedRecord.Table_Id">
            <summary>
            Table id for related record
            </summary>
        </member>
        <member name="C:Query::System#Email#Outbox Emails.EmailOutbox.RelatedRecord.System_Id">
            <summary>
            System id for related record
            </summary>
        </member>
        <member name="C:Query::System#Email#Outbox Emails.EmailOutbox.Id">
            <summary>
            Email outbox id
            </summary>
        </member>
        <member name="C:Query::System#Email#Outbox Emails.EmailOutbox.Message_Id">
            <summary>
            Email message id
            </summary>
        </member>
        <member name="C:Query::System#Email#Outbox Emails.EmailOutbox.User_Security_Id">
            <summary>
            User security id
            </summary>
        </member>
        <member name="QF:Query::System#Email#Outbox Emails.EmailOutbox.Account_Id">
            <summary>
            Email account id
            </summary>
        </member>
        <member name="QF:Query::System#Email#Outbox Emails.EmailOutbox.Status">
            <summary>
            Email outbox status
            </summary>
        </member>
        <member name="O:Page::System#Email#Email Viewer">
            <summary>
            A page to view sent emails.
            </summary>
        </member>
        <member name="O:Table::System#Email#Sent Email">
            <summary>Holds information about the sent emails.</summary>
        </member>
        <member name="M:Table::System#Email#Sent Email.GetMessageId:Guid">
            <summary>
            Get the message id of the sent email.
            </summary>
            <returns>Message id.</returns>
        </member>
        <member name="M:Table::System#Email#Sent Email.GetAccountId:Guid">
            <summary>
            Get the account id of the sent email.
            </summary>
            <returns>Account id.</returns>
        </member>
        <member name="O:Page::System#Email#Sent Emails">
            <summary>
            Provides an overview of all e-mail that were sent out.
            </summary>
        </member>
        <member name="M:Page::System#Email#Sent Emails.SetNewerThan(DateTime)">
            <summary>
            Set date filter for sent emails.
            </summary>
            <param name="NewDate">Earliest date to include sent emails from.</param>
        </member>
        <member name="M:Page::System#Email#Sent Emails.SetRelatedRecord(Integer,Guid)">
            <summary>
            Set filter for related record on sent emails.
            </summary>
            <param name="TableID">The entity table.</param>
            <param name="SystemID">A record to filter on.</param>
        </member>
        <member name="O:Query::System#Email#Sent Emails">
            <summary>
            Query to get all sent emails and their related records.
            The query has an one to many relationship between email and the related records.
            This file contains logic that is identical to the EmailOutbox.Query.al.
            If changes are made to this file, make sure to update EmailOutbox to.
            </summary>
        </member>
        <member name="C:Query::System#Email#Sent Emails.SentEmail.RelatedRecord.Table_Id">
            <summary>
            Table id for related record
            </summary>
        </member>
        <member name="C:Query::System#Email#Sent Emails.SentEmail.RelatedRecord.System_Id">
            <summary>
            System id for related record
            </summary>
        </member>
        <member name="C:Query::System#Email#Sent Emails.SentEmail.Id">
            <summary>
            Email id
            </summary>
        </member>
        <member name="C:Query::System#Email#Sent Emails.SentEmail.Message_Id">
            <summary>
            Email message id
            </summary>
        </member>
        <member name="C:Query::System#Email#Sent Emails.SentEmail.User_Security_Id">
            <summary>
            User security id
            </summary>
        </member>
        <member name="QF:Query::System#Email#Sent Emails.SentEmail.Account_Id">
            <summary>
            Email account id
            </summary>
        </member>
        <member name="QF:Query::System#Email#Sent Emails.SentEmail.Date_Time_Sent">
            <summary>
            Date and time for when email was sent
            </summary>
        </member>
        <member name="O:Page::System#Email#Sent Emails List Part">
            <summary>
            Provides an overview of all e-mail that were sent out in a ListPart.
            </summary>
        </member>
        <member name="M:Page::System#Email#Sent Emails List Part.Load">
            <summary>
            Loads the relevant sent emails.
            </summary>
        </member>
        <member name="M:Page::System#Email#Sent Emails List Part.SetNewerThan(DateTime)">
            <summary>
            Set date filter for sent emails.
            </summary>
            <param name="NewDate">Earliest date to include sent emails from.</param>
        </member>
        <member name="M:Page::System#Email#Sent Emails List Part.SetRelatedRecord(Integer,Guid)">
            <summary>
            Set filter for related record on sent emails.
            </summary>
            <param name="TableID">The entity table.</param>
            <param name="SystemID">A record to filter on.</param>
        </member>
        <member name="M:Page::System#Email#Sent Emails List Part.SetRelatedRecord(Variant)">
            <summary>
            Set filter for related record on sent emails.
            </summary>
            <param name="RecordVariant">Source record.</param>
        </member>
        <member name="O:Query::System#Email#Email Related Record">
            <summary>
            Gets the email message IDs based on the filters on the email related records.
            </summary>
        </member>
        <member name="C:Query::System#Email#Email Related Record.RelatedRecord.Email_Message_Id">
            <summary>
            Email message id
            </summary>
        </member>
        <member name="QF:Query::System#Email#Email Related Record.RelatedRecord.Table_Id">
            <summary>
            Table id for related record
            </summary>
        </member>
        <member name="QF:Query::System#Email#Email Related Record.RelatedRecord.System_Id">
            <summary>
            System id for related record
            </summary>
        </member>
        <member name="O:Enum::System#Email#Email View Policy">
            <summary>
            Available policies that can be assigned to a user.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email View Policy.OwnEmails">
            <summary>
            Policy allowing users to view their own emails.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email View Policy.AllEmails">
            <summary>
            Policy allowing users to view all emails.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email View Policy.AllRelatedRecordsEmails">
            <summary>
            Policy allowing users to view emails if they have direct permissions to all its related records.
            Authors can always see their own emails.
            </summary>
        </member>
        <member name="E:Enum::System#Email#Email View Policy.AnyRelatedRecordEmails">
            <summary>
            Policy allowing users to view emails if they have direct permissions to one or more of its related records.
            Authors can always see their own emails.
            </summary>
        </member>
        <member name="O:Interface::System#Email#Email View Policy">
            <summary>
            The interface for a email view policy.
            Email view policies decide the emails that a given User can view.
            </summary>
        </member>
        <member name="M:Interface::System#Email#Email View Policy.GetSentEmails(Sent Email@)">
            <summary>
            Get sent emails that policy allow.
            </summary>
            <param name="SentEmails">The record to contain the sent emails.</param>
        </member>
        <member name="M:Interface::System#Email#Email View Policy.GetOutboxEmails(Email Outbox@)">
            <summary>
            Get outbox email that policy allow.
            </summary>
            <param name="OutboxEmails">The record to contain the outbox emails.</param>
        </member>
        <member name="M:Interface::System#Email#Email View Policy.GetSentEmails(Integer,Sent Email@)">
            <summary>
            Get sent emails that policy allow for a given entity.
            </summary>
            <param name="SourceTableId">Table id for the entity.</param>
            <param name="SentEmails">The record to contain the sent emails.</param>
        </member>
        <member name="M:Interface::System#Email#Email View Policy.GetOutboxEmails(Integer,Email Outbox@)">
            <summary>
            Get outbox emails that policy allow for a given entity.
            </summary>
            <param name="SourceTableId">Table id for the entity.</param>
            <param name="OutboxEmails">The record to contain the outbox emails.</param>
        </member>
        <member name="M:Interface::System#Email#Email View Policy.GetSentEmails(Integer,Guid,Sent Email@)">
            <summary>
            Get sent emails that policy allow for a given record.
            </summary>
            <param name="SourceTableId">Table id for the entity.</param>
            <param name="SourceSystemId">System id for the record.</param>
            <param name="SentEmails">The record to contain the sent emails.</param>
        </member>
        <member name="M:Interface::System#Email#Email View Policy.GetOutboxEmails(Integer,Guid,Email Outbox@)">
            <summary>
            Get outbox emails that policy allow for a given record.
            </summary>
            <param name="SourceTableId">Table id for the entity.</param>
            <param name="SourceSystemId">System id for the record.</param>
            <param name="OutboxEmails">The record to contain the outbox emails.</param>
        </member>
        <member name="M:Interface::System#Email#Email View Policy.HasAccess(Sent Email):Boolean">
            <summary>
            Establish if User has access to sent email.
            </summary>
            <param name="SentEmail">Record in Sent Email</param>
            <returns>Returns true if User has access to view sent email.
            Otherwise false.</returns>
        </member>
        <member name="M:Interface::System#Email#Email View Policy.HasAccess(Email Outbox):Boolean">
            <summary>
            Establish if User has access to email in outbox.
            </summary>
            <param name="OutboxEmail">Record in Email Outbox</param>
            <returns>Returns true if User has access to view sent email.
            Otherwise false.</returns>
        </member>
        <member name="O:Table::System#Email#Email View Policy">
            <summary>
            Contains what policy each user is given in the system
            </summary>
        </member>
        <member name="F:Table::System#Email#Email View Policy.User Security ID">
            <summary>
            Security id of user
            </summary>
        </member>
        <member name="F:Table::System#Email#Email View Policy.User ID[50]">
            <summary>
            Name of user
            </summary>
        </member>
        <member name="F:Table::System#Email#Email View Policy.Email View Policy">
            <summary>
            Policy that user is given
            </summary>
        </member>
        <member name="O:Page::System#Email#Email View Policy List">
            <summary>
            Page to display and control what view policies users have been assigned.
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#View All Emails Policy">
            <summary>
            Email policy that show all emails to a given user, even if user has no relation to the email.
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#View If All Related Records">
            <summary>
            Email policy that show emails to a given user,
            if that user has access to all of the related records on the email.
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#View If Any Related Records">
            <summary>
            Email policy that show emails to a given user,
            if that user has access to any of the related records on the email.
            </summary>
        </member>
        <member name="O:Codeunit::System#Email#View Only Own Emails Policy">
            <summary>
            Email policy that show emails to a given user,
            if that user is author of the email.
            </summary>
        </member>
        <member name="O:Codeunit::System#ExternalFileStorage#File Account">
            <summary>
            Provides functionality to work with file accounts.
            </summary>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Account.GetAllAccounts(Boolean,File Account@)">
            <summary>
            Gets all of the file accounts registered in Business Central.
            </summary>
            <param name="LoadLogos">Flag, used to determine whether to load the logos for the accounts.</param>
            <param name="TempFileAccount">Out parameter holding the file accounts.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Account.GetAllAccounts(File Account@)">
            <summary>
            Gets all of the file accounts registered in Business Central.
            </summary>
            <param name="TempFileAccount">Out parameter holding the file accounts.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Account.IsAnyAccountRegistered:Boolean">
            <summary>
            Checks if there is at least one file account registered in Business Central.
            </summary>
            <returns>True if there is any account registered in the system, otherwise - false.</returns>
        </member>
        <member name="O:Table::System#ExternalFileStorage#File Account">
            <summary>
            A common representation of a file account.
            </summary>
        </member>
        <member name="O:Page::System#ExternalFileStorage#File Accounts">
            <summary>
            Lists all of the registered file accounts
            </summary>
        </member>
        <member name="M:Page::System#ExternalFileStorage#File Accounts.GetAccount(File Account@)">
            <summary>
            Gets the selected file account.
            </summary>
            <param name="TempFileAccount">The selected file account</param>
        </member>
        <member name="M:Page::System#ExternalFileStorage#File Accounts.SetAccount(File Account@)">
            <summary>
            Sets a file account to be selected.
            </summary>
            <param name="TempFileAccount">The file account to be initially selected on the page</param>
        </member>
        <member name="M:Page::System#ExternalFileStorage#File Accounts.EnableLookupMode">
            <summary>
            Enables the lookup mode on the page.
            </summary>
        </member>
        <member name="O:Page::System#ExternalFileStorage#File Account Wizard">
            <summary>
            Step by step guide for adding a new file account in Business Central
            </summary>
        </member>
        <member name="O:Interface::System#ExternalFileStorage#External File Storage Connector">
            <summary>
            A External File Storage Connector interface "used to create file accounts and handle external files."
            </summary>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.ListFiles(Guid,Text,Codeunit::System#ExternalFileStorage#File Pagination Data,File Account Content@)">
            <summary>
            Gets a List of Files stored on the provided account.
            </summary>
            <param name="AccountId">The file account ID which is used to get the file.</param>
            <param name="Path">The file path to list.</param>
            <param name="FilePaginationData">Defines the pagination data.</param>
            <param name="Files">A list with all files stored in the path.</param>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.GetFile(Guid,Text,InStream)">
            <summary>
            Gets a file from the provided account.
            </summary>
            <param name="AccountId">The file account ID which is used to get the file.</param>
            <param name="Path">The file path inside the file account.</param>
            <param name="Stream">The Stream were the file is read to.</param>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.CreateFile(Guid,Text,InStream)">
            <summary>
            Gets a file to the provided account.
            </summary>
            <param name="AccountId">The file account ID which is used to send out the file.</param>
            <param name="Path">The file path inside the file account.</param>
            <param name="Stream">The Stream were the file is read from.</param>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.CopyFile(Guid,Text,Text)">
            <summary>
            Copies as file inside the provided account.
            </summary>
            <param name="AccountId">The file account ID which is used to send out the file.</param>
            <param name="SourcePath">The source file path.</param>
            <param name="TargetPath">The target file path.</param>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.MoveFile(Guid,Text,Text)">
            <summary>
            Move as file inside the provided account.
            </summary>
            <param name="AccountId">The file account ID which is used to send out the file.</param>
            <param name="SourcePath">The source file path.</param>
            <param name="TargetPath">The target file path.</param>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.FileExists(Guid,Text):Boolean">
            <summary>
            Checks if a file exists on the provided account.
            </summary>
            <param name="AccountId">The file account ID which is used to send out the file.</param>
            <param name="Path">The file path inside the file account.</param>
            <returns>Returns true if the file exists</returns>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.DeleteFile(Guid,Text)">
            <summary>
            Deletes a file exists on the provided account.
            </summary>
            <param name="AccountId">The file account ID which is used to send out the file.</param>
            <param name="Path">The file path inside the file account.</param>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.ListDirectories(Guid,Text,Codeunit::System#ExternalFileStorage#File Pagination Data,File Account Content@)">
            <summary>
            Gets a List of Directories stored on the provided account.
            </summary>
            <param name="AccountId">The file account ID which is used to get the file.</param>
            <param name="Path">The file path to list.</param>
            <param name="FilePaginationData">Defines the pagination data.</param>
            <param name="Files">A list with all directories stored in the path.</param>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.CreateDirectory(Guid,Text)">
            <summary>
            Creates a directory on the provided account.
            </summary>
            <param name="Path">The directory path inside the file account.</param>
            <param name="AccountId">The file account ID which is used to send out the file.</param>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.DirectoryExists(Guid,Text):Boolean">
            <summary>
            Checks if a directory exists on the provided account.
            </summary>
            <param name="AccountId">The file account ID which is used to send out the file.</param>
            <param name="Path">The directory path inside the file account.</param>
            <returns>Returns true if the directory exists</returns>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.DeleteDirectory(Guid,Text)">
            <summary>
            Deletes a directory exists on the provided account.
            </summary>
            <param name="AccountId">The file account ID which is used to send out the file.</param>
            <param name="Path">The directory path inside the file account.</param>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.GetAccounts(File Account@)">
            <summary>
            Gets the file accounts registered for the connector.
            </summary>
            <param name="Accounts">Out variable that holds the registered file accounts for the connector.</param>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.ShowAccountInformation(Guid)">
            <summary>
            Shows the information for a file account.
            </summary>
            <param name="AccountId">The ID of the file account</param>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.RegisterAccount(File Account@):Boolean">
            <summary>
            Registers a file account for the connector.
            </summary>
            <remarks>The out parameter must hold the account ID of the added account.</remarks>
            <param name="Account">Out parameter with the details of the registered Account.</param>
            <returns>True if an account was registered.</returns>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.DeleteAccount(Guid):Boolean">
            <summary>
            Deletes a file account for the connector.
            </summary>
            <param name="AccountId">The ID of the file account</param>
            <returns>True if an account was deleted.</returns>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.GetLogoAsBase64:Text">
            <summary>
            Provides a custom logo for the connector that shows in the Setup File Account Guide.
            </summary>
            <returns>Base64 encoded image.</returns>
            <remarks>The recommended image size is 128x128.</remarks>
            <returns>The logo of the connector is Base64 format</returns>
        </member>
        <member name="M:Interface::System#ExternalFileStorage#External File Storage Connector.GetDescription:Text[250]">
            <summary>
            Provides a more detailed description of the connector.
            </summary>
            <returns>A more detailed description of the connector.</returns>
        </member>
        <member name="O:Enum::System#ExternalFileStorage#Ext# File Storage Connector">
            <summary>
            Enum that holds all of the available file connectors.
            </summary>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.Initialize(Enum::System#ExternalFileStorage#File Scenario)">
            <summary>
            Initializes the File Storage for the given scenario.
            </summary>
            <param name="Scenario">File Scenario to use.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.Initialize(File Account)">
            <summary>
            Initializes the File Storage for the give file account.
            </summary>
            <param name="TempFileAccount"> File Account to use.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.ListFiles(Text,Codeunit::System#ExternalFileStorage#File Pagination Data,File Account Content@)">
            <summary>
            List all files from the given path.
            </summary>
            <param name="Path">Folder to list</param>
            <param name="FilePaginationData">Defines the pagination data.</param>
            <param name="TempFileAccountContent">File account content.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.GetFile(Text,InStream):Boolean">
            <summary>
            Retrieves a file from the file account.
            </summary>
            <param name="Path">File Path to open.</param>
            <param name="Stream">Stream which contains the file content.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.CreateFile(Text,InStream):Boolean">
            <summary>
            Stores a file in to the file account.
            </summary>
            <param name="Path">File Path inside the file account.</param>
            <param name="Stream">Stream to store.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.CopyFile(Text,Text):Boolean">
            <summary>
            Copies a file in the file account.
            </summary>
            <param name="SourcePath">Source path of the file.</param>
            <param name="TargetPath">Target Path of the file copy.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.MoveFile(Text,Text):Boolean">
            <summary>
            Moves a file in the file account.
            </summary>
            <param name="SourcePath">Source path of the file.</param>
            <param name="TargetPath">Target Path of the file.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.FileExists(Text):Boolean">
            <summary>
            Checks if a specific file exists in the file account.
            </summary>
            <param name="Path">File path to check.</param>
            <returns>Returns true if the file exists.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.DeleteFile(Text):Boolean">
            <summary>
            Deletes a file from the file account.
            </summary>
            <param name="Path">File path of the file to delete.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.ListDirectories(Text,Codeunit::System#ExternalFileStorage#File Pagination Data,File Account Content@):Boolean">
            <summary>
            List all directories from the given path.
            </summary>
            <param name="Path">Folder to list</param>
            <param name="FilePaginationData">Defines the pagination data.</param>
            <param name="FileAccountContent">File account content.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.CreateDirectory(Text):Boolean">
            <summary>
            Creates a directory in the file account.
            </summary>
            <param name="Path">Path of the new Directory to create.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.DirectoryExists(Text):Boolean">
            <summary>
            Checks if a specific directory exists in the file account.
            </summary>
            <param name="Path">Path of the directory to check.</param>
            <returns>Returns true if directory exists.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.DeleteDirectory(Text):Boolean">
            <summary>
            Deletes a directory from the file account.
            </summary>
            <param name="Path">Directory to remove.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.CombinePath(Text,Text):Text">
            <summary>
            Combines to paths together.
            </summary>
            <param name="Path">First part to combine.</param>
            <param name="ChildPath">Second part to combine.</param>
            <returns>Correctly combined path.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.GetParentPath(Text):Text">
            <summary>
            Gets the Parent Path of the given path.
            </summary>
            <param name="Path">File or directory path.</param>
            <returns>The parent of the specified path.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.SelectAndGetFolderPath(Text):Text">
            <summary>
            Opens a folder selection dialog.
            </summary>
            <param name="Path">Start path of the dialog.</param>
            <returns>Returns the selected Folder.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.SelectAndGetFolderPath(Text,Text):Text">
            <summary>
            Opens a folder selection dialog.
            </summary>
            <param name="Path">Start path of the dialog.</param>
            <param name="DialogTitle">Title of the selection dialog.</param>
            <returns>Returns the selected Folder.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.SelectAndGetFilePath(Text,Text):Text">
            <summary>
            Opens a select file dialog.
            </summary>
            <param name="Path">Start path.</param>
            <param name="FileFilter">A filter string that applies only on files not on folders.</param>
            <returns>Returns the path of the selected file.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.SelectAndGetFilePath(Text,Text,Text):Text">
            <summary>
            Opens a select file dialog.
            </summary>
            <param name="Path">Start path of the dialog.</param>
            <param name="FileFilter">A filter string that applies only on files not on folders.</param>
            <param name="DialogTitle">Title of the selection dialog.</param>
            <returns>Returns the path of the selected file.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.SaveFile(Text,Text):Text">
            <summary>
            Opens a save to dialog.
            </summary>
            <param name="Path">Start path of the dialog.</param>
            <param name="FileExtension">The file extension without dot (like pdf or txt).</param>
            <returns>Returns the selected file path.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.SaveFile(Text,Text,Text):Text">
            <summary>
            Opens a save to dialog.
            </summary>
            <param name="Path">Start path of the dialog.</param>
            <param name="FileExtension">The file extension without dot (like pdf or txt).</param>
             <param name="DialogTitle">Title of the selection dialog.</param>
            <returns>Returns the selected file path.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.SaveFile(Text,Text,Text,Text):Text">
            <summary>
            Opens a save to dialog.
            </summary>
            <param name="Path">Start path of the dialog.</param>
            <param name="FileNameSuggestion">Suggested file name for the dialog.</param>
            <param name="FileExtension">The file extension without dot (like pdf or txt).</param>
             <param name="DialogTitle">Title of the selection dialog.</param>
            <returns>Returns the selected file path.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#External File Storage.BrowseAccount">
            <summary>
            Opens a File Browser
            </summary>
        </member>
        <member name="O:Enum::System#ExternalFileStorage#Ext# File Storage File Type">
            <summary>
            Indicator of what type the resource is.
            </summary>
        </member>
        <member name="E:Enum::System#ExternalFileStorage#Ext# File Storage File Type.Directory">
            <summary>
            Indicates if entry is a directory.
            </summary>
        </member>
        <member name="E:Enum::System#ExternalFileStorage#Ext# File Storage File Type.File">
            <summary>
            Indicates if entry is a file type.
            </summary>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Pagination Data.SetMarker(Text)">
            <summary>
            Sets a marker to see if files and directories can be retrieved in batches.
            </summary>
            <param name="NewMarker">Marker value to set.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Pagination Data.GetMarker:Text">
            <summary>
            Gets the current marker value.
            </summary>
            <returns>Current marker value.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Pagination Data.SetEndOfListing(Boolean)">
            <summary>
            Set this value to true, if all files or directories have been read a from the File Service.
            </summary>
            <param name="NewEndOfListing">End of listing reached.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Pagination Data.IsEndOfListing:Boolean">
            <summary>
            Defines if all batches of directory or file listing has been received.
            </summary>
            <returns>End of listing reached.</returns>
        </member>
        <member name="O:Table::System#ExternalFileStorage#File Account Scenario">
            <summary>
            Temporary table used to display the tree structure in "File Scenario Setup".
            </summary>
        </member>
        <member name="O:Codeunit::System#ExternalFileStorage#File Scenario">
            <summary>
            Provides functionality to work with file scenarios.
            </summary>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Scenario.GetDefaultFileAccount(File Account@):Boolean">
            <summary>
            Gets the default file account.
            </summary>
            <param name="TempFileAccount">Out parameter holding information about the default file account.</param>
            <returns>True if an account for the default scenario was found; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Scenario.GetFileAccount(Enum::System#ExternalFileStorage#File Scenario,File Account@):Boolean">
            <summary>
            Gets the file account used by the given file scenario.
            If the no account is defined for the provided scenario, the default account (if defined) will be returned.
            </summary>
            <param name="Scenario">The scenario to look for.</param>
            <param name="TempFileAccount">Out parameter holding information about the file account.</param>
            <returns>True if an account for the specified scenario was found; otherwise - false.</returns>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Scenario.SetDefaultFileAccount(File Account)">
            <summary>
            Sets a default file account.
            </summary>
            <param name="TempFileAccount">The file account to use.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Scenario.SetFileAccount(Enum::System#ExternalFileStorage#File Scenario,File Account)">
            <summary>
            Sets a file account to be used by the given file scenario.
            </summary>
            <param name="Scenario">The scenario for which to set a file account.</param>
            <param name="TempFileAccount">The file account to use.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Scenario.UnassignScenario(Enum::System#ExternalFileStorage#File Scenario)">
            <summary>
            Unassign an file scenario. The scenario will then use the default file account.
            </summary>
            <param name="Scenario">The scenario to unassign.</param>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Scenario.OnBeforeInsertAvailableFileScenario(Enum::System#ExternalFileStorage#File Scenario,Boolean@)">
            <summary>
            Event for changing whether an file scenario should be added to the list of assignable scenarios.
            If the scenario has already been assigned or is the default scenario, this event won't be published.
            </summary>
            <param name="Scenario">The scenario that is going to be added to the list of assignable scenarios.</param>
            <param name="IsAvailable">The return for whether this scenario should be listed in the assignable scenarios list.</param>
        </member>
        <member name="O:Enum::System#ExternalFileStorage#File Scenario">
            <summary>
            File scenarios.
            Used to decouple file accounts from sending files.
            </summary>
        </member>
        <member name="E:Enum::System#ExternalFileStorage#File Scenario.Default">
            <summary>
            The default file scenario.
            Used in the cases where no other scenario is defined.
            </summary>
        </member>
        <member name="O:Table::System#ExternalFileStorage#File Scenario">
            <summary>
            Holds the mapping between file account and scenarios.
            One scenarios is mapped to one file account.
            One file account can be used for multiple scenarios.
            </summary>
        </member>
        <member name="M:Codeunit::System#ExternalFileStorage#File Scenario Impl#.GetScenariosByFileAccount(File Account Scenario@)">
            <summary>
            Get a list of entries, representing a tree structure with file accounts and the scenarios, assigned to each account.
            </summary>
            <example>
            Account sales@cronus.com has scenarios "Sales Quote" and "Sales Credit Memo" assigned.
            Account purchase@cronus.com has scenarios "Purchase Quote" and "Purchase Invoice" assigned.
            The result of calling the function will be:
            sales@cronus.com, "Sales Quote", "Sales Credit Memo", purchase@cronus.com, "Purchase Quote", "Purchase Invoice"
            </example>
            <param name="TempFileAccountScenario">A flattened tree structure representing all the file accounts and the scenarios assigned to them.</param>
        </member>
        <member name="O:Page::System#ExternalFileStorage#File Scenario Setup">
            <summary>
            Page is used to display file scenarios usage by file accounts.
            </summary>
        </member>
        <member name="O:Page::System#ExternalFileStorage#File Scenarios FactBox">
            <summary>
            Lists of all scenarios assigned to an account.
            </summary>
        </member>
        <member name="O:Page::System#ExternalFileStorage#File Scenarios for Account">
            <summary>
            Displays the scenarios that could be linked to a provided file account.
            </summary>
        </member>
        <member name="O:Codeunit::System#Reflection#Field Selection">
            <summary>
            Exposes functionality to look up fields.
            </summary>
        </member>
        <member name="M:Codeunit::System#Reflection#Field Selection.Open(Field@):Boolean">
            <summary>
            Opens the fields lookup page and assigns the selected fields on the <paramref name="SelectedField"/> parameter.
            </summary>
            <param name="SelectedField">The field record variable to set the selected fields. Any filters on this record will influence the page view.</param>
            <returns>Returns true if a field was selected.</returns>
        </member>
        <member name="O:Page::System#Reflection#Fields Lookup">
            <summary>
            List page that contains table fields.
            </summary>
        </member>
        <member name="M:Page::System#Reflection#Fields Lookup.GetSelectedFields(Field@)">
            <summary>
            Gets the currently selected fields.
            </summary>
            <param name="SelectedField">A record that contains the currently selected fields</param>
        </member>
        <member name="O:Page::System#Reflection#Objects">
            <summary>
            List page that contains all of the application objects.
            </summary>
        </member>
        <member name="O:Codeunit::System#Reflection#Record Reference">
            <summary>
            The Record Reference interface provides a method for delegating read/write operations for tables that require indirect permissions.
            Use the Record Reference codeunit to intialize the interface with an implementation that has the required permissions.
            </summary>
        </member>
        <member name="M:Codeunit::System#Reflection#Record Reference.Initialize(RecordRef,Interface::System#Reflection#Record Reference@)">
            <summary>
            Initializes the Record Reference interface. The method raises the OnInitialize event. If no subscriber initializes the interface, a default implementation is assigned.
            </summary>
            <param name="RecordRef">The RecordRef parameter points to the table for which the read/write operations are to be handled by the interface.</param>
            <param name="RecordReference">The interface providing read/write operations.</param>
        </member>
        <member name="M:Codeunit::System#Reflection#Record Reference.OnInitialize(RecordRef,Interface::System#Reflection#Record Reference@,ModuleInfo,Boolean@)">
            <summary>
            Use this event to initialize the Record Reference interface with an implementation that has the required indirect permissions to read write to the table referenced by the RecordRef parameter.
            </summary>
            <param name="RecordRef">The RecordRef parameter points to the table for which the read/write operations are to be handled by the interface.</param>
            <param name="RecordReference">The interface providing read/write operations.</param>
            <param name="CallerModule">A ModuleInfo pointing to the app information of the app that called the Initialize method.</param>
            <param name="IsInitialized">Set this to true when the interface is initialized.</param>
        </member>
        <member name="O:Interface::System#Reflection#Record Reference">
            <summary>
            The Record Reference interface provides a method for delegating read/write operations for tables that require indirect permissions.
            </summary>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.ReadPermission(RecordRef):Boolean">
            <summary>
            Determines if you can read from a table.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <returns>true if you can read from some or all of the table; otherwise, false.</returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.WritePermission(RecordRef):Boolean">
            <summary>
            Determines if you can write to a table.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <returns>Specifies if you have permission to write to the table</returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Count(RecordRef):Integer">
            <summary>
            Counts the number of records that are in the filters that are currently applied to the table referred to by the RecordRef.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <returns>The number of records in the table.</returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.CountApprox(RecordRef):Integer">
            <summary>
            Gets an approximate count of the number of records in the table
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <returns>Approximate number of records in the table.</returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.IsEmpty(RecordRef):Boolean">
            <summary>
            Determines whether any records exist in a filtered set of records in a table.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <returns>true if the record or table is empty; otherwise, false.</returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Find(RecordRef,Text)">
            <summary>
            Finds a record in a table based on the values stored in the key fields.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="Which">Specifies how to perform the search.</param>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Find(RecordRef,Text,Boolean):Boolean">
            <summary>
            Finds a record in a table based on the values stored in the key fields.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="Which">Specifies how to perform the search.</param>
            <param name="UseReturnValue">If you set UseReturnValue to false and the operation does not execute successfully, a runtime error will occur.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.FindLast(RecordRef)">
            <summary>
            Finds the last record in a table based on the current key and filter.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.FindLast(RecordRef,Boolean):Boolean">
            <summary>
            Finds the last record in a table based on the current key and filter.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="UseReturnValue">If you set UseReturnValue to false and the operation does not execute successfully, a runtime error will occur.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.FindFirst(RecordRef)">
            <summary>
            Finds the first record in a table based on the current key and filter.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.FindFirst(RecordRef,Boolean):Boolean">
            <summary>
            Finds the first record in a table based on the current key and filter.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="UseReturnValue">If you set UseReturnValue to false and the operation does not execute successfully, a runtime error will occur.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.FindSet(RecordRef)">
            <summary>
            Finds a set of records in a table based on the current key and filter. FINDSET can only retrieve records in ascending order.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.FindSet(RecordRef,Boolean):Boolean">
            <summary>
            Finds a set of records in a table based on the current key and filter. FINDSET can only retrieve records in ascending order.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="UseReturnValue">If you set UseReturnValue to false and the operation does not execute successfully, a runtime error will occur.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.FindSet(RecordRef,Boolean,Boolean,Boolean):Boolean">
            <summary>
            Finds a set of records in a table based on the current key and filter. FINDSET can only retrieve records in ascending order.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="ForUpdate">Set this parameter to false if you do not want to modify any records in the set.</param>
            <param name="UpdateKey">This parameter only applies if ForUpdate is true. If you are going to modify any field value within the current key, set this parameter to true.</param>
            <param name="UseReturnValue">If you set UseReturnValue to false and the operation does not execute successfully, a runtime error will occur.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Next(RecordRef,Integer):Integer">
            <summary>
            Steps through a specified number of records and retrieves a record.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="Steps">Defines the direction of the search and how many records to step include.</param>
            <returns>the direction of the search and how many steps taken.</returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Next(RecordRef):Integer">
            <summary>
            Steps through a specified number of records and retrieves a record.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <returns>the direction of the search and how many steps taken.</returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Get(RecordRef,RecordId)">
            <summary>
            Gets a record based on the ID of the record.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="RecordId">The RecordID that contains the table number and the primary key of the table and is used to identify the record that you want to get.</param>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Get(RecordRef,RecordId,Boolean):Boolean">
            <summary>
            Gets a record based on the ID of the record.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="RecordId">The RecordID that contains the table number and the primary key of the table and is used to identify the record that you want to get.</param>
            <param name="UseReturnValue">If you set UseReturnValue to false and the operation does not execute successfully, a runtime error will occur.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.GetBySystemId(RecordRef,Guid)">
            <summary>
            Gets a record based on the ID of the record. The RecordRef must already be opened.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="SystemId">The systemid which uniquely identifies the record that you want to get.</param>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.GetBySystemId(RecordRef,Guid,Boolean):Boolean">
            <summary>
            Gets a record based on the ID of the record. The RecordRef must already be opened.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="SystemId">The systemid which uniquely identifies the record that you want to get.</param>
            <param name="UseReturnValue">If you set UseReturnValue to false and the operation does not execute successfully, a runtime error will occur.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Insert(RecordRef,Boolean)">
            <summary>
            Inserts a record into a table.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="RunTrigger">If this parameter is true, the code in the OnInsert Trigger is executed.</param>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Insert(RecordRef,Boolean,Boolean):Boolean">
            <summary>
            Inserts a record into a table.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="RunTrigger">If this parameter is true, the code in the OnInsert Trigger is executed.</param>
            <param name="UseReturnValue">If you set UseReturnValue to false and the operation does not execute successfully, a runtime error will occur.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Insert(RecordRef,Boolean,Boolean,Boolean):Boolean">
            <summary>
            Inserts a record into a table.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="RunTrigger">If this parameter is true, the code in the OnInsert Trigger is executed.</param>
            <param name="InsertWithSystemId">If this parameter is true, the SystemId field of the record is given a value that you explicitly assign.</param>
            <param name="UseReturnValue">If you set UseReturnValue to false and the operation does not execute successfully, a runtime error will occur.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Modify(RecordRef,Boolean)">
            <summary>
            Modifies a record in a table.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="RunTrigger">Specifies whether to run the AL code in the OnModify Trigger.</param>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Modify(RecordRef,Boolean,Boolean):Boolean">
            <summary>
            Modifies a record in a table.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="RunTrigger">Specifies whether to run the AL code in the OnModify Trigger.</param>
            <param name="UseReturnValue">If you set UseReturnValue to false and the operation does not execute successfully, a runtime error will occur.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Delete(RecordRef,Boolean)">
            <summary>
            Deletes a record in a table.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="RunTrigger">Specifies whether the code in the OnDelete trigger will be executed.</param>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.Delete(RecordRef,Boolean,Boolean):Boolean">
            <summary>
            Deletes a record in a table.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="RunTrigger">Specifies whether the code in the OnDelete trigger will be executed.</param>
            <param name="UseReturnValue">If you set UseReturnValue to false and the operation does not execute successfully, a runtime error will occur.</param>
            <returns>true if the operation was successful; otherwise false. </returns>
        </member>
        <member name="M:Interface::System#Reflection#Record Reference.DeleteAll(RecordRef,Boolean)">
            <summary>
            Deletes all records in a table that fall within a specified range.
            </summary>
            <param name="RecordRef">An instance of the RecordRef data type.</param>
            <param name="RunTrigger">Specifies whether the code in the OnDelete trigger will be executed.</param>
        </member>
        <member name="M:Codeunit::System#Reflection#Record Reference Default Impl#.IsAllowedCallerModuleId(Guid):Boolean">
            <summary>
            Checks whether the CallerModuleId is in the list of allowed app id's
            </summary>
            <param name="CallerModuleId">The app id of the app that called the Initialize method</param>
            <returns>true if the app id is in the list.</returns>
            <example>
            local procedure IsAllowedCallerModuleId(CallerModuleId: Guid): Boolean
            var
                SystemApplicationAppIdTxt: Label '63ca2fa4-4f03-4f2b-a480-172fef340d3f', Locked = true;
                RecordReferenceAppIdTxt: Label '44012bcf-22c2-40d9-bb24-410b1dfc72dc', Locked = true;
            begin
                exit(CallerModuleId in [SystemApplicationAppIdTxt, RecordReferenceAppIdTxt]);
            end;
            </example>
        </member>
        <member name="O:Page::System#Reflection#Record Lookup">
            <summary>
            Look up page for records.
            </summary>
        </member>
        <member name="O:Codeunit::System#Reflection#Record Selection">
            <summary>
            Exposes functionality to look up records.
            </summary>
        </member>
        <member name="M:Codeunit::System#Reflection#Record Selection.Open(Integer,Integer,Record Selection Buffer@):Boolean">
            <summary>
            Opens the record lookup page and assigns the selected records on the <paramref name="SelectedRecord"/> parameter.
            </summary>
            <param name="TableId">The ID of the table from which records should be selected.</param>
            <param name="MaximumCount">The maximum number of records allowed in the table that is being looked up. If there are more records, an error is thrown.</param>
            <param name="SelectedRecord">The variable to set the selected records.</param>
            <error>There is more than <paramref name="MaximumCount"/> records in the table.</error>
            <returns>Returns true if a record was selected.</returns>
        </member>
        <member name="M:Codeunit::System#Reflection#Record Selection.ToText(Integer,Guid):Text">
            <summary>
            Returns a string representation of the record from the given <paramref name="TableId"/> with the given <paramref name="SystemId"/>.
            The string representation is a comma separated string of fields that describes the record.
            </summary>
            <example>
            For the Company Information table, an example return value is "CRONUS International Ltd.".
            For the Bank Account Ledger Entry table, an example return value is "37,Order 106015,GIRO,01/01/24,Payment,108017"
            </example>
            <param name="TableId">The ID of the table from which the record is located.</param>
            <param name="SystemId">The system id of the record.</param>
            <returns>A string representation of the record.</returns>
        </member>
        <member name="O:Table::System#Reflection#Record Selection Buffer">
            <summary>
            Holds information about records to look up.
            </summary>
        </member>
        <member name="O:Codeunit::System#Reflection#Record Selection Impl#">
            <summary>
            Implementation for looking up records.
            </summary>
        </member>
        <member name="O:Codeunit::System#Reflection#Table Key">
            <summary>
            Provides functionality for disabling and re-enabling table indexes.
            </summary>
        </member>
        <member name="M:Codeunit::System#Reflection#Table Key.DisableAll(Integer):Boolean">
            <summary>
            Disables all keys on the provided table. Disabling keys before bulk table write operations can significantly improve performance.
            </summary>
            <param name="TableNo">The table to disable all of the keys for.</param>
            <returns>True, if the keys were disabled successfully, false otherwise.</returns>
            <remarks>
            System tables and non-sql based tables are not supported for this operation.
            Clustered keys, unique keys, SIFT keys, Nonclustered Columnstore Indexes are not affected by this operation.
            The keys are automatically re-enabled when a Commit() is called, or at the end of AL code execution.
            </remarks>
        </member>
        <member name="M:Codeunit::System#Reflection#Table Key.EnableAll(Integer):Boolean">
            <summary>
            Re-enables all keys that have been disabled on the provided table.
            </summary>
            <param name="TableNo">The table to re-enable all of the keys for.</param>
            <returns>True, if the keys were re-enabled successfully, false otherwise.</returns>
            <remarks>This method can be used when keys need to be re-enabled (for example, for searching) before a Commit() is called.</remarks>
        </member>
        <member name="O:PermissionSet::System#Globalization#Language - Edit">
            <summary>
            This permission set allows editing of the list of languages and supported languages.
            </summary>
        </member>
        <member name="O:PermissionSet::System#Globalization#Language - View">
            <summary>
            This permission set allows you to view the language list and set the preferred language for the user
            </summary>
        </member>
        <member name="O:Table::System#Globalization#Allowed Language">
            <summary>
            Table that contains a list of specific application languages available for the users. If the table is empty, then all installed application languages will be available.
            </summary>
        </member>
        <member name="O:Page::System#Globalization#Allowed Languages">
            <summary>
            Page that shows the list of allows languages which is enabled for this environment. If nothing is specified, then the user will be able to use all available languages.
            </summary>
        </member>
        <member name="O:Codeunit::System#Globalization#Language">
            <summary>
            Management codeunit that exposes various functions to work with languages.
            </summary>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetUserLanguageCode:Code[10]">
            <summary>
            Gets the current user's language code.
            The function emits the <see cref="OnGetUserLanguageCode"/> event.
            To change the language code returned from this function, subscribe for this event and change the passed language code.
            </summary>
            <seealso cref="OnGetUserLanguageCode"/>
            <returns>The language code of the user's language</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetLanguageIdOrDefault(Code[10]):Integer">
            <summary>
            Gets the language ID based on its code. Or defaults to the current user language.
            </summary>
            <param name="LanguageCode">The code of the language</param>
            <returns>The ID for the language code that was provided for this function. If no ID is found for the language code, then it returns the ID of the current user's language.</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetFormatRegionOrDefault(Text[80]):Text[80]">
            <summary>
            Returns format region for a given language. If format region is provided it itself will be returned. If format region is empty the region is taken from UserSessionSettings.
            If no valid tag is found, the default 'en-US' tag is returned.
            </summary>
            <param name="FormatRegion">The variable for the format region id.</param>
            <returns>The ID for the format region that was found.</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetLanguageId(Code[10]):Integer">
            <summary>
            Gets the language ID based on its code.
            </summary>
            <param name="LanguageCode">The code of the language</param>
            <returns>The ID for the language code that was provided for this function. If no ID is found for the language code, then it returns 0.</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.SetOverrideLanguageId(Integer)">
            <summary>  
            Overrides the language ID returned by the GetLanguageIdOrDefault function. 
            </summary>  
            <param name="LanguageId">The ID of the language to use. This must be a valid language ID.</param>  
            <remarks>  
            This override will be reset after it's used once in the GetLanguageIdOrDefault function. To keep the override throughout the application, use SetOverrideLanguageId(LanguageId: Integer; ResetOverride: Boolean) method.  
            </remarks>  
        </member>
        <member name="M:Codeunit::System#Globalization#Language.SetOverrideLanguageId(Integer,Boolean)">
            <summary>  
            Overrides the language ID returned by the GetLanguageIdOrDefault function.  
            </summary>  
            <param name="LanguageId">The ID of the language to use. This must be a valid language ID.</param>  
            <param name="ResetOverride">A boolean value indicating whether the override should be reset after use in the GetLanguageIdOrDefault function. If set to true, the override is reset after it's used once. If set to false, the override remains until it's manually reset or the session is restarted.</param>  
        </member>
        <member name="M:Codeunit::System#Globalization#Language.SetOverrideFormatRegion(Text[80])">
            <summary>  
            Overrides the format region returned by the GetFormatRegionOrDefault function.  
            </summary>  
            <param name="FormatRegion">The region to use for formatting purposes. This must be a valid region code.</param>  
            <remarks>  
            This override will be reset after it's used once in the GetFormatRegionOrDefault function. To keep the override throughout the session, use SetOverrideFormatRegion(FormatRegion: Text[80]; ResetOverride: Boolean) method.  
            </remarks>  
        </member>
        <member name="M:Codeunit::System#Globalization#Language.SetOverrideFormatRegion(Text[80],Boolean)">
            <summary>  
            Overrides the format region returned by the GetFormatRegionOrDefault function.
            </summary>  
            <param name="FormatRegion">The region to use for formatting purposes. This must be a valid region code.</param>  
            <param name="ResetOverride">A boolean value indicating whether the override should be reset after use in the GetFormatRegionOrDefault function. If set to true, the override is reset after it's used once. If set to false, the override remains until it's manually reset or the session is restarted.</param>  
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetLanguageCode(Integer):Code[10]">
            <summary>
            Gets the code for a language based on its ID.
            </summary>
            <param name="LanguageId">The ID of the language.</param>
            <returns>The code of the language that corresponds to the ID, or an empty code if the language with the specified ID does not exist.</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetWindowsLanguageName(Code[10]):Text">
            <summary>
            Gets the name of a language based on the language code.
            </summary>
            <param name="LanguageCode">The code of the language.</param>
            <returns>The name of the language corresponding to the code or empty string, if language with the specified code does not exist</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetWindowsLanguageName(Integer):Text">
            <summary>
            Gets the name of a windows language based on its ID.
            </summary>
            <param name="LanguageId">The ID of the language.</param>
            <returns>The name of the language that corresponds to the ID, or an empty string if a language with the specified ID does not exist.</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetApplicationLanguages(Windows Language@)">
            <summary>
            Gets all available languages in the application.
            </summary>
            <param name="TempLanguage">A temporary record to place the result in</param>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetDefaultApplicationLanguageId:Integer">
            <summary>
            Gets the default application language ID.
            </summary>
            <returns>The ID of the default language for the application.</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.ToDefaultLanguage(Variant):Text">
            <summary>
            Formats the provided value in default language.
            </summary>
            <param name="ValueVariant">The provided value to be returned in default language.</param>
            <returns>The value in default language.</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.ValidateApplicationLanguageId(Integer)">
            <summary>
            Checks whether the provided language is a valid application language.
            If it isn't, the function displays an error.
            </summary>
            <param name="LanguageId">The ID of the language to validate.</param>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.ValidateWindowsLanguageId(Integer)">
            <summary>
            Checks whether the provided language exists. If it doesn't, the function displays an error.
            </summary>
            <param name="LanguageId">The ID of the language to validate.</param>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.LookupApplicationLanguageId(Integer@)">
            <summary>
            Opens a list of the languages that are available for the application so that the user can choose a language.
            </summary>
            <param name="LanguageId">Exit parameter that holds the chosen language ID.</param>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.LookupWindowsLanguageId(Integer@)">
            <summary>
            Opens a list of languages that are available for the Windows version.
            </summary>
            <param name="LanguageId">Exit parameter that holds the chosen language ID.</param>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.LookupLanguageCode(Code[10]@)">
            <summary>
            Opens a list of the languages that are available for the application so that the user can choose a language.
            </summary>
            <param name="LanguageCode">Exit parameter that holds the chosen language code.</param>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetParentLanguageId(Integer):Integer">
            <summary>
            Gets the parent language ID based on Windows Culture Info.
            </summary>
            <param name="LanguageId">Exit parameter that holds the chosen language ID.</param>
            <returns>The ID of the parent language</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.SetPreferredLanguageID(Guid,Integer)">
            <summary>
            Sets the preferred language for the provided user.
            </summary>
            <param name="UserSecID">The user security ID for the user for whom the preferred language is changed.</param>
            <param name="NewLanguageID">The new preferred language for the user.</param>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetTwoLetterISOLanguageName(Integer):Text[2]">
            <summary>
            Retrieves the two-letter ISO language name for the specified language ID.
            </summary>
            <param name="LanguageID">The language ID.</param>
            <returns>The two-letter ISO language name. For example, "en" or "es"</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetLanguageIdFromCultureName(Text):Integer">
            <summary>
            Retrieves the language ID for the specified culture name.
            </summary>
            <param name="CultureName">The Culture name.</param>
            <returns>The language ID. See https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/a29e5c28-9fb9-4c49-8e43-4b9b8e733a05.</returns>
            <example>
            <code>
            Language.GetLanguageIdFromLanguageName('en-US');
            Language.GetLanguageIdFromLanguageName('en');
            </code>
            </example>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetCultureName(Integer):Text">
            <summary>
            Retrieves the culture name for the specified language ID.
            </summary>
            <param name="LanguageID">The language ID. See https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/a29e5c28-9fb9-4c49-8e43-4b9b8e733a05.</param>
            <returns>The culture name. For example, 'en-US'.</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.GetCurrentCultureName:Text">
            <summary>
            Retrieves the current culture name for the session.
            </summary>
            <returns>The culture name. For example, 'en-US'.</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Language.OnGetUserLanguageCode(Code[10]@,Boolean@)">
            <summary>
            Integration event, emitted from <see cref="GetUserLanguageCode"/>.
            Subscribe to this event to change the default behavior by changing the provided parameter(s).
            </summary>
            <seealso cref="GetUserLanguageCode"/>
            <param name="UserLanguageCode">Exit parameter that holds the user language code.</param>
            <param name="Handled">To change the default behavior of the function that emits the event, set this parameter to true.</param>
        </member>
        <member name="O:Table::System#Globalization#Language">
            <summary>
            Table that contains the available application languages.
            </summary>
        </member>
        <member name="O:Page::System#Globalization#Languages">
            <summary>
            Page for displaying application languages.
            </summary>
        </member>
        <member name="O:Page::System#Globalization#Windows Languages">
            <summary>
            Page for displaying available windows languages.
            </summary>
        </member>
        <member name="O:PermissionSet::System#Globalization#Translation - Edit">
            <summary>
            This permission set allows the editing of translations from the Translations page. The table is internal but the page is editable.
            </summary>
        </member>
        <member name="O:Codeunit::System#Globalization#Translation">
            <summary>
            Exposes function\alitys to add and retrieve translated texts for table fields.
            </summary>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Any:Boolean">
            <summary>
            Checks if there any translations present at all.
            </summary>
            <returns>True if there is at least one translation; false, otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Get(Variant,Integer):Text">
            <summary>
            Gets the value of a field in the global language for the record.
            </summary>
            <param name="RecVariant">The record to get the translated value for.</param>
            <param name="FieldId">The ID of the field for which the translation is stored.</param>
            <returns>The translated value.</returns>
            <error>If the RecVariant parameter is the type Record, and it is temporary.</error>
            <error>If the RecVariant parameter is the type Record, and the table number is 0.</error>
            <example>
            To get the value of the description field for an item record, call GetValue(Item, Item.FIELDNO(Description)).
            </example>
            <remarks>
            If a translated record for the global language cannot be found it finds the Windows language translation.
            If a Windows language translation cannot be found, return an empty string.
            </remarks>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Get(Variant,Integer,Integer):Text">
            <summary>
            Gets the value of a field in the language that is specified for the record.
            </summary>
            <param name="RecVariant">The record to get the translated value for.</param>
            <param name="FieldId">The ID of the field to store the translation for.</param>
            <param name="LanguageId">The ID of the language in which to get the field value.</param>
            <returns>The translated value.</returns>
            <error>If the RecVariant parameter is the type Record, and it is temporary.</error>
            <error>If the RecVariant parameter is the type Record, and the table number is 0.</error>
            <example>
            To get the value of the Description field for an item record in Danish, call GetValue(Item, Item.FIELDNO(Description), 1030).
            </example>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Set(Variant,Integer,Text[2048])">
            <summary>
            Sets the value of a field to the global language for the record.
            </summary>
            <param name="RecVariant">The record to store the translated value for.</param>
            <param name="FieldId">The ID of the field to store the translation for.</param>
            <param name="Value">The translated value to set.</param>
            <error>If the RecVariant parameter is the type Record, and it is temporary.</error>
            <error>If the RecVariant parameter is the type Record, and the table number is 0.</error>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Set(Variant,Integer,Integer,Text[2048])">
            <summary>
            Sets the value of a field to the language specified for the record.
            </summary>
            <param name="RecVariant">The record to store the translated value for.</param>
            <param name="FieldId">The ID of the field to store the translation for.</param>
            <param name="LanguageId">The language id to set the value for.</param>
            <param name="Value">The translated value to set.</param>
            <error>If the RecVariant parameter is the type Record, and it is temporary.</error>
            <error>If the RecVariant parameter is the type Record, and the table number is 0.</error>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Delete(Variant)">
            <summary>
            Deletes all translations for a persisted (non temporary) record.
            </summary>
            <param name="RecVariant">The record for which the translations will be deleted.</param>
            <error>If the RecVariant parameter is the type Record, and it is temporary.</error>
            <error>If the RecVariant parameter is the type Record, and the table number is 0.</error>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Delete(Variant,Integer)">
            <summary>
            Deletes the translation for a field on a persisted (non temporary) record.
            </summary>
            <param name="RecVariant">The record with a field for which the translation will be deleted.</param>
            <param name="FieldId">Id of the field for which the translation will be deleted.</param>
            <error>If the RecVariant parameter is the type Record, and it is temporary.</error>
            <error>If the RecVariant parameter is the type Record, and the table number is 0.</error>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Delete(Integer)">
            <summary>
            Deletes all the translation for a table ID.
            </summary>
            <param name="TableID">The table that the translations will be deleted for.</param>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Copy(Variant,Variant)">
            <summary>
            Copies the translation for a field from one record to another record on a persisted (non-temporary) record.
            </summary>
            <param name="FromRecVariant">The record from which the translations are copied.</param>
            <param name="ToRecVariant">The record to which the translations are copied.</param>
            <error>If the RecVariant parameter is of type Record, and it is temporary.</error>
            <error>If the RecVariant parameter is of type Record, and the table number is 0.</error>
            <error>If the FromRecVariant parameter is of type Record, the ToRecVariant parameter is of type Record and they are different.</error>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Copy(Variant,Variant,Integer)">
            <summary>
            Copies the translation for a field from one record to another record on a persisted (non-temporary) record.
            </summary>
            <param name="FromRecVariant">The record from which the translations are copied.</param>
            <param name="ToRecVariant">The record to which the translations are copied.</param>
            <param name="FieldId">Id of the field for which the translation will be copied.</param>
            <error>If the RecVariant parameter is of type Record, and it is temporary.</error>
            <error>If the RecVariant parameter is of type Record, and the table number is 0.</error>
            <error>If the FromRecVariant parameter is of type Record, the ToRecVariant parameter is of type Record and they are different.</error>
            <error>If RecVariant passed is not of type Record.</error>
            <error>If the FieldId is 0.</error>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Copy(Variant,Integer,Variant,Integer)">
            <summary>
            Copies the translation from one record's field to another record's field on a persisted (non-temporary) record.
            </summary>
            <param name="FromRecVariant">The record from which the translations are copied.</param>
            <param name="FromFieldId">The id of the field from which the translations are copied.</param>
            <param name="ToRecVariant">The record to which the translations are copied.</param>
            <param name="ToFieldId">The id of the field to which the translations are copied.</param>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Show(Variant,Integer)">
            <summary>
            Shows all language translations that are available for a field in a new page.
            </summary>
            <param name="RecVariant">The record to get the translated value for.</param>
            <param name="FieldId">The ID of the field to get translations for.</param>
            <error>If the RecVariant parameter is the type Record, and it is temporary.</error>
            <error>If the RecVariant parameter is the type Record, and the table number is 0.</error>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.Show(Variant,Integer,Boolean)">
            <summary>
            Shows all language translations that are available for a field in a new page.
            </summary>
            <param name="RecVariant">The record to get the translated value for.</param>
            <param name="FieldId">The ID of the field to get translations for.</param>
            <param name="CheckFieldLength">If this value is true, then it's checked that the translation isn't longer than the field length.</param>
            <error>If the RecVariant parameter is the type Record, and it is temporary.</error>
            <error>If the RecVariant parameter is the type Record, and the table number is 0.</error>
        </member>
        <member name="M:Codeunit::System#Globalization#Translation.ShowForAllRecords(Integer,Integer)">
            <summary>
            Shows all language translations available for a given field for all the records in that table in a new page.
            </summary>
            <param name="TableId">The table ID to get translations for.</param>
            <param name="FieldId">The ID of the field to get translations for.</param>
        </member>
        <member name="O:Page::System#Globalization#Translation">
            <summary>This page shows the target language and the translation for data in a table field.</summary>
        </member>
        <member name="M:Page::System#Globalization#Translation.SetCaption(Text)">
            <summary>
            Sets the page's caption.
            </summary>
            <param name="CaptionText">The caption to set.</param>
        </member>
        <member name="O:Page::System#Tooling#Performance Profile List">
            <summary>
            List for performance profiles generated by profile schedules
            </summary>
        </member>
        <member name="O:Page::System#Tooling#Performance Profiler">
            <summary>
            Sampling-based in-client performance profiler
            </summary>
        </member>
        <member name="O:Enum::System#Tooling#Perf# Profile Activity Type">
            <summary>
            The supported activity types for creating scheduled based sampling profiles
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Perf# Profile Activity Type.Web Client">
            <summary>
            The web client activity type
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Perf# Profile Activity Type.Background">
            <summary>
            The background activity type
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Perf# Profile Activity Type.Web API Client">
            <summary>
            The web api activity type
            </summary>
        </member>
        <member name="O:Page::System#Tooling#Perf# Profiler Schedule Card">
            <summary>
            Card page for schedule based sampling profilers
            </summary>
        </member>
        <member name="O:Page::System#Tooling#Perf# Profiler Schedules List">
            <summary>
            List for schedule based sampling profilers
            </summary>
        </member>
        <member name="O:Enum::System#Tooling#Profiling Aggregation Type">
            <summary>
            The types of aggregation over profiling nodes.
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Profiling Aggregation Type.None">
            <summary>
            No aggregation.
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Profiling Aggregation Type.App Publisher">
            <summary>
            Aggregate by app publisher.
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Profiling Aggregation Type.App Name">
            <summary>
            Aggregate by app publisher and name.
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Profiling Aggregation Type.Object">
            <summary>
            Aggregate by application object.
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Profiling Aggregation Type.Method">
            <summary>
            Aggregate by app application object and method.
            </summary>
        </member>
        <member name="O:Page::System#Tooling#Profiling Call Tree">
            <summary>
            The list showing call tree of methods that occured during the performance profiler recording.
            </summary>
        </member>
        <member name="M:Codeunit::System#Tooling#Profiling Chart Helper.GetChartData(Enum::System#Tooling#Profiling Aggregation Type,Boolean,List of [Text],List of [Integer])">
            <summary>
            Gets the dictionary with aggregation type identifiers as keys, and aggregated self time / full time as values.
            </summary>
            <param name="ProfilingAggregationType">The aggregation type.</param>
            <param name="AggregateBySelfTime">True if aggregation should be performed over self time, false indicates that the aggregation should be made over full time.</param>
            <param name="ChartLabels">The labels for the chart.</param>
            <param name="ChartValues">The measure values associated with the labels.</param>
            <remarks>ProfilingDataProcessor must be initialized for this method to work.</remarks>
        </member>
        <member name="M:Codeunit::System#Tooling#Profiling Chart Helper.UpdateData(ControlAddIn::System#Integration#BusinessChart,Enum::System#Tooling#Profiling Aggregation Type,Enum::System#Visualization#Business Chart Type,Boolean)">
            <summary>
            Updates the contents of the business chart control add-in for performance profiler charts.
            </summary>
            <param name="BusinessChartControlAddIn">The business chart control add-in</param>
            <param name="ProfilingAggregationType">The desired aggregation type for the chart.</param>
            <param name="BusinessChartType">The business chart type</param>
            <param name="AggregateBySelfTime">Specifies if the aggregation should be made over self-time or full time.</param>
        </member>
        <member name="O:Codeunit::System#Tooling#Profiling Data Processor">
            <summary>
            The object providing functionality for processing perfrormance profiling data.
            </summary>
        </member>
        <member name="M:Codeunit::System#Tooling#Profiling Data Processor.Initialize(Profiling Node@,Profiling Node@)">
            <summary>
            Initializes the profiling data processor with the profiling data.
            </summary>
            <param name="RawProfilingNode">The performance profiling data.</param>
            <remarks>The data processor will reference the provided data, not copy it.</remarks>
        </member>
        <member name="M:Codeunit::System#Tooling#Profiling Data Processor.ClearData">
            <summary>
            Clears the previously initialized performance profiling data.
            </summary>
        </member>
        <member name="M:Codeunit::System#Tooling#Profiling Data Processor.IsInitialized:Boolean">
            <summary>
            Checks if the profiling data processor is initialized with <see cref="Initialize"/> method.
            </summary>
            <returns>True, if the profiling data processor is initialized, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Tooling#Profiling Data Processor.GetSelfTimeAggregate(Profiling Node@,Enum::System#Tooling#Profiling Aggregation Type)">
            <summary>
            Gets aggregate self time of profiling nodes using the provided aggregation type.
            </summary>
            <param name="AggregatedProfilingNode">The resulting aggregation.</param>
            <param name="ProfilingAggregationType">The value of what to aggregate self time by.</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Profiling Data Processor.GetSelfTimeAggregate(Profiling Node@,Enum::System#Tooling#Profiling Aggregation Type,Text)">
            <summary>
            Gets aggregate self time of profiling nodes using the provided aggregation type.
            </summary>
            <param name="AggregatedProfilingNode">The resulting aggregation.</param>
            <param name="ProfilingAggregationType">The value of what to aggregate self time by.</param>
            <param name="FilterText">The table view to indicate which profiling nodes should be included in aggregation.</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Profiling Data Processor.GetFullTimeAggregate(Profiling Node@,Enum::System#Tooling#Profiling Aggregation Type)">
            <summary>
            Gets aggregate full time of profiling nodes using the provided aggregation type.
            </summary>
            <param name="AggregatedProfilingNode">The resulting aggregation.</param>
            <param name="ProfilingAggregationType">The value of what to aggregate full time by.</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Profiling Data Processor.GetUniqueIdentifierByAggregationType(Profiling Node,Enum::System#Tooling#Profiling Aggregation Type):Text">
            <summary>
            Constructs and returns a unique string (with respect to aggregation type) from the provided profiling node.
            </summary>
            <param name="ProfilingNode">The node from which to construct a unique identifier.</param>
            <param name="ProfilingAggregationType">The aggregation type.</param>
            <returns>A unique (per aggregation type) string from the provided profiling node.</returns>
        </member>
        <member name="O:Page::System#Tooling#Profiling Duration By Method">
            <summary>
            A details page to be shown on drill-down of time spent aggregated by application object.
            Shows the time spent aggregated per method name.
            </summary>
        </member>
        <member name="O:Page::System#Tooling#Profiling Duration By Object">
            <summary>
            The list showing the breakdown of time spent by application object on the performance profiler page.
            </summary>
        </member>
        <member name="O:Page::System#Tooling#Profiling Full Time Chart">
            <summary>
            The chart showing the breakdown of time full spent by app name / app publisher on the performance profiler page.
            </summary>
        </member>
        <member name="O:Table::System#Tooling#Profiling Node">
            <summary>
            A buffer table containing the information recorded by a performance profiler.
            </summary>
        </member>
        <member name="O:Page::System#Tooling#Profiling Self Time Chart">
            <summary>
            The chart showing the breakdown of self time spent by app name / app publisher on the performance profiler page.
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Sampling Interval.None">
            <summary>
            The sampling interval is not specified.
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Sampling Interval.SampleEvery50ms">
            <summary>
            Sample every 50 milliseconds
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Sampling Interval.SampleEvery100ms">
            <summary>
            Sample every 100 milliseconds
            </summary>
        </member>
        <member name="E:Enum::System#Tooling#Sampling Interval.SampleEvery150ms">
            <summary>
            Sample every 150 milliseconds
            </summary>
        </member>
        <member name="O:Codeunit::System#Tooling#Sampling Performance Profiler">
            <summary>
            The interface for running performance profiling using sampling.
            </summary>
        </member>
        <member name="M:Codeunit::System#Tooling#Sampling Performance Profiler.Start">
            <summary>
            Starts performance profiling.
            </summary>
        </member>
        <member name="M:Codeunit::System#Tooling#Sampling Performance Profiler.Start(Enum::System#Tooling#Sampling Interval)">
            <summary>
            Starts performance profiling.
            </summary>
        </member>
        <member name="M:Codeunit::System#Tooling#Sampling Performance Profiler.Stop">
            <summary>
            Stops performance profiling.
            </summary>
        </member>
        <member name="M:Codeunit::System#Tooling#Sampling Performance Profiler.IsRecordingInProgress:Boolean">
            <summary>
            Checks if the performance profiler recording is in progress.
            </summary>
            <returns>True if the recording is in progress, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#Tooling#Sampling Performance Profiler.GetData:InStream">
            <summary>
            Gets the performance profiling data after the recording (via Start and Stop methods) is finished
            </summary>
            <returns>The recorded performance profiling data in JSON format.</returns>
            <error>If there is no performance profiling data.</error>
        </member>
        <member name="M:Codeunit::System#Tooling#Sampling Performance Profiler.SetData(InStream)">
            <summary>
            Sets the performance profiling data from stream.
            </summary>
            <param name="ProfilingResultsInStream">The stream containing performance profiling data.</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Sampling Performance Profiler.GetProfilingNodes(Profiling Node@)">
            <summary>
            Gets the results of performance profiling.
            </summary>
            <param name="ProfilingNode">The results of performance profiling.</param>
            <error>If there is no performance profiling data.</error>
            <remarks>"Indentation" and "Full Time" fields will not be populated.</remarks>
        </member>
        <member name="M:Codeunit::System#Tooling#Sampling Performance Profiler.GetProfilingCallTree(Profiling Node@)">
            <summary>
            Gets the results of performance profiling into a call tree structure.
            </summary>
            <param name="ProfilingNode">The call tree from performance profiling.</param>
            <error>If there is no performance profiling data.</error>
            <remarks>CPU nodes with multiple parents will be copied for each parent.</remarks>
        </member>
        <member name="O:Codeunit::System#Tooling#Scheduled Perf# Profiler">
            <summary>
            Provides implementation details for working on the Perf. Profiler Schedules list and card pages.
            </summary>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.ValidatePerformanceProfileSchedulerDates(Performance Profile Scheduler,Duration)">
            <summary>
            Validate dates for the "Performance Profile Scheduler" record with all validations.
            </summary>
            <param name="PerformanceProfileScheduler">The "Performance Profile Scheduler" record</param>
            <param name="MaxRetentionPeriod">The maximum retention period</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.ValidatePerformanceProfileSchedulerDatesRelation(Performance Profile Scheduler)">
            <summary>
            Validate the relation between the dates for the "Performance Profile Scheduler" record.
            </summary>
            <param name="PerformanceProfileScheduler">The "Performance Profile Scheduler" record</param>
            <param name="MaxRetentionPeriod">The maximum retention period</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.ValidatePerformanceProfileEndTime(Performance Profile Scheduler)">
            <summary>
            Validates the end time of a schedule.
            </summary>
            <param name="PerformanceProfileScheduler">The record.</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.MapActivityTypeToRecord(Performance Profile Scheduler@,Enum::System#Tooling#Perf# Profile Activity Type)">
            <summary>
            Maps an activity type to a session type.
            </summary>
            <param name="PerformanceProfileScheduler">The "Performance Profile Scheduler" record </param>
            <param name="ActivityType">The activity enum type</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.MapRecordToActivityType(Performance Profile Scheduler,Enum::System#Tooling#Perf# Profile Activity Type@)">
            <summary>
            Maps a session type to an activity type.
            </summary>
            <param name="PerformanceProfileScheduler">The "Performance Profile Scheduler" record </param>
            <param name="ActivityType">The activity enum type</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.FilterUsers(Performance Profile Scheduler@,Guid)">
            <summary>
            Filters the record with the users that are allowed to view the Performance Profile Scheduler page
            </summary>
            <param name="PerformanceProfileScheduler">The record</param>
            <param name="SecurityID">The security ID to filter the opening of the page</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.FilterUsers(Performance Profile Scheduler@,Guid,Boolean)">
            <summary>
            Filters the record with the users that are allowed to view the Performance Profile Scheduler page
            </summary>
            <param name="PerformanceProfileScheduler">The record</param>
            <param name="SecurityID">The security ID to filter the opening of the page</param>
            <param name="ForceFilterToUser">Filter to the passed in user even if the user is an admin.</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.ValidateScheduleCreationPermissions(Guid,Guid)">
            <summary>
            Returns true if the user can make schedules for other users.
            </summary>
            <param name="UserID">The current user ID.</param>
            <param name="ScheduleUserId">The schedule user ID.</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.MapRecordToUserName(Performance Profile Scheduler):Text">
             <summary>
             Maps a session type to an activity type.
             </summary>
             <param name="PerformanceProfileScheduler">The "Performance Profile Scheduler" record </param>
            <returns>The user name if found, else empty</returns>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.InitializeFields(Performance Profile Scheduler@,Enum::System#Tooling#Perf# Profile Activity Type@)">
            <summary>
            Initalizes the fields for the "Performance Profile Scheduler" record
            </summary>
            <param name="PerformanceProfileScheduler">The "Performance Profile Scheduler" record </param>
            <param name="ActivityType">>The activity enum type</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.ValidatePerformanceProfileSchedulerRecord(Performance Profile Scheduler,Enum::System#Tooling#Perf# Profile Activity Type)">
            <summary>
            Validates the consistency of the "Performance Profile Scheduler" record
            </summary>
            <param name="PerformanceProfileScheduler">The "Performance Profile Scheduler" record</param>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.GetRetentionPeriod:Code[20]">
            <summary>
            Gets the retention period for performance profiles
            </summary>
            <returns>The retention period</returns>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.ValidateThreshold(Performance Profile Scheduler@)">
            <summary>
             Validates the threshold field
            </summary>
            <param name="PerformanceProfileScheduler"></param>
        </member>
        <member name="M:Codeunit::System#Tooling#Scheduled Perf# Profiler.IsProfilingEnabled(Guid@):Boolean">
            <summary>
            Returns true if profiling is enabled for the session.
            </summary>
            <param name="ScheduleID">The schedule ID that triggers the profiling.</param>
            <returns>True if profiling is enabled, false otherwise.</returns>
        </member>
        <member name="O:Codeunit::System#RestClient#Http Content">
            <summary>Holder object for the Http Content data.</summary>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(Text):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified Text content.</summary>
            <param name="Content">The content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>The Content-Type header will be set to 'text/plain'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(SecretText):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified SecretText content.</summary>
            <param name="Content">The content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>The Content-Type header will be set to 'text/plain'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(Text,Text):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified Text content and content type.</summary>
            <param name="Content">The content to send to the server.</param>
            <param name="ContentType">The content type of the content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>If the ContentType parameter is not specified, it will be set to 'text/plain'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(SecretText,Text):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified SecretText content and content type.</summary>
            <param name="Content">The content to send to the server.</param>
            <param name="ContentType">The content type of the content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>If the ContentType parameter is not specified, it will be set to 'text/plain'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(JsonObject):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified JsonObject content.</summary>
            <param name="Content">The content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>The Content-Type header will be set to 'application/json'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(JsonArray):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified JsonArray content.</summary>
            <param name="Content">The content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>The Content-Type header will be set to 'application/json'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(JsonToken):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified JsonToken content.</summary>
            <param name="Content">The content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>The Content-Type header will be set to 'application/json'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(XmlDocument):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified XmlDocument content.</summary>
            <param name="Content">The content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>The Content-Type header will be set to 'text/xml'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(Codeunit::System#Utilities#Temp Blob):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified "Temp Blob" Codeunit content.</summary>
            <param name="Content">The content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>The Content-Type header will be set to 'application/octet-stream'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(Codeunit::System#Utilities#Temp Blob,Text):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified "Temp Blob" Codeunit content and content type.</summary>
            <param name="Content">The content to send to the server.</param>
            <param name="ContentType">The content type of the content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>If the ContentType parameter is not specified, it will be set to 'application/octet-stream'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(InStream):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified InStream content.</summary>
            <param name="Content">The content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>The Content-Type header will be set to 'application/octet-stream'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(InStream,Text):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content class with the specified InStream content and content type.</summary>
            <param name="Content">The content to send to the server.</param>
            <param name="ContentType">The content type of the content to send to the server.</param>
            <returns>The Http Content object.</returns>
            <remarks>If the ContentType parameter is not specified, it will be set to 'application/octet-stream'.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.Create(HttpContent):Codeunit::System#RestClient#Http Content">
            <summary>Initializes a new instance of the Http Content object with the specified HttpContent object.</summary>
            <param name="Content">The HttpContent object.</param>
            <returns>The HttpContent object.</returns>
            <remarks>The HttpContent must be properly prepared including the Content-Type header.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.SetContentTypeHeader(Text)">
            <summary>Sets the Content-Type header of the HttpContent object.</summary>
            <param name="ContentType">The value of the header to add.</param>
            <remarks>If the header already exists, it will be overwritten.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.AddContentEncoding(Text)">
            <summary>Sets the Content-Encoding header of the HttpContent object.</summary>
            <param name="ContentEncoding">The value of the header to add.</param>
            <remarks>If the header already exists, the value will be added to the end of the list.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.SetHeader(Text,Text)">
            <summary>Sets a new value for an existing header of the HttpContent object, or adds the header if it does not already exist.</summary>
            <param name="Name">The name of the header to add.</param>
            <param name="Value">The value of the header to add.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.SetHeader(Text,SecretText)">
            <summary>Sets a new value for an existing header of the HttpContent object, or adds the header if it does not already exist.</summary>
            <param name="Name">The name of the header to add.</param>
            <param name="Value">The value of the header to add.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.GetHttpContent:HttpContent">
            <summary>Gets the HttpContent object.</summary>
            <returns>The HttpContent object.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.AsText:Text">
            <summary>Gets the content of the HTTP response message as a string.</summary>
            <returns>The content of the HTTP response message as a string.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.AsSecretText:SecretText">
            <summary>Gets the content of the HTTP response message as a SecretText.</summary>
            <returns>The content of the HTTP response message as a SecretText.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.AsBlob:Codeunit::System#Utilities#Temp Blob">
            <summary>Gets the content of the HTTP response message as a "Temp Blob" Codeunit.</summary>
            <returns>The content of the HTTP response message as a "Temp Blob" Codeunit.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.AsInStream:InStream">
            <summary>Gets the content of the HTTP response message as an InStream.</summary>
            <returns>The content of the HTTP response message as an InStream.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.AsXmlDocument:XmlDocument">
            <summary>Gets the content of the HTTP response message as an XmlDocument.</summary>
            <returns>The content of the HTTP response message as an XmlDocument.</returns>
            <remarks>Fails in case the content is not a valid XML document.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.AsJson:JsonToken">
            <summary>Gets the content of the HTTP response message as a JsonToken.</summary>
            <returns>The content of the HTTP response message as a JsonToken.</returns>
            <remarks>Returns an empty JsonToken in case there is no content. 
            Fails in case the content is not a valid JSON document.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.AsJsonObject:JsonObject">
            <summary>Gets the content of the HTTP response message as a JsonObject.</summary>
            <returns>The content of the HTTP response message as a JsonObject.</returns>
            <remarks>Returns an empty JsonObject in case there is no content.
            Fails in case the content is not a valid JSON document.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Content.AsJsonArray:JsonArray">
            <summary>Gets the content of the HTTP response message as a JsonArray.</summary>
            <returns>The content of the HTTP response message as a JsonArray.</returns>
            <remarks>Returns an empty JsonArray in case there is no content.
            Fails in case the content is not a valid JSON document.</remarks>
        </member>
        <member name="O:Enum::System#RestClient#Http Method">
            <summary>
            This enum contains the REST Http Methods.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Http Method.GET">
            <summary>
            Specifies that the Http method is GET.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Http Method.POST">
            <summary>
            Specifies that the Http method is POST.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Http Method.PATCH">
            <summary>
            Specifies that the Http method is PATCH.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Http Method.PUT">
            <summary>
            Specifies that the Http method is PUT.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Http Method.DELETE">
            <summary>
            Specifies that the Http method is DELETE.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Http Method.HEAD">
            <summary>
            Specifies that the Http method is HEAD.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Http Method.OPTIONS">
            <summary>
            Specifies that the Http method is OPTIONS.
            </summary>
        </member>
        <member name="O:Codeunit::System#RestClient#Http Request Message">
            <summary>Holder object for the HTTP request data.</summary>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.Create(Enum::System#RestClient#Http Method,Text,Codeunit::System#RestClient#Http Content):Codeunit::System#RestClient#Http Request Message">
            <summary>Creates a new instance of the HttpRequestMessage object.</summary>
            <param name="Method">The HTTP method to use. Valid options are GET, POST, PATCH, PUT, DELETE, HEAD, OPTIONS</param>
            <param name="RequestUri">The Uri to use for the HTTP request.</param>
            <param name="Content">The Http Content object to use for the HTTP request.</param>
            <returns>The create Http Request Message</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.SetHttpMethod(Text)">
            <summary>Sets the HTTP method or the HttpRequestMessage object.</summary>
            <param name="Method">The HTTP method to use. Valid options are GET, POST, PATCH, PUT, DELETE, HEAD, OPTIONS</param>
            <remarks>Default method is GET</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.SetHttpMethod(Enum::System#RestClient#Http Method)">
            <summary>Sets the HTTP method for the HttpRequestMessage object.</summary>
            <param name="Method">The HTTP method to use.</param>
            <remarks>Default method is GET</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.GetHttpMethod:Text">
            <summary>Gets the HTTP method for the HttpRequestMessage object.</summary>
            <returns>The HTTP method for the HttpRequestMessage object.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.SetRequestUri(Text)">
            <summary>Sets the Uri used for the HttpRequestMessage object.</summary>
            <param name="Uri">The Uri to use for the HTTP request.</param>
            <remarks>The valued must not be a relative URI.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.GetRequestUri:Text">
            <summary>Gets the Uri used for the HttpRequestMessage object.</summary>
            <returns>The Uri used for the HttpRequestMessage object.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.SetHeader(Text,Text)">
            <summary>Sets a new value for an existing header of the Http Request object, or addds the header if it does not already exist.</summary>
            <param name="HeaderName">The name of the header to add.</param>
            <param name="HeaderValue">The value of the header to add.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.SetHeader(Text,SecretText)">
            <summary>Sets a new value for an existing header of the Http Request object, or addds the header if it does not already exist.</summary>
            <param name="HeaderName">The name of the header to add.</param>
            <param name="HeaderValue">The value of the header to add.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.GetHeaderValues(Text):List of [Text]">
            <summary>Gets the values of the header with the given name from the HttpRequestMessage object.</summary>
            <param name="HeaderName">The name of the header to get.</param>
            <returns>A list of values of the header with the given name.</returns>
            <remarks>If the header is not found, an empty list is returned.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.GetSecretHeaderValues(Text):List of [SecretText]">
            <summary>Gets the secret values of the header with the given name from the HttpRequestMessage object.</summary>
            <param name="HeaderName">The name of the header to get.</param>
            <returns>A list of values of the header with the given name.</returns>
            <remarks>If the header is not found, an empty list is returned.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.SetCookie(Text,Text):Boolean">
            <summary>Sets the cookie given a name and value</summary>
            <param name="Name">The name of the cookie to set.</param>
            <param name="Value">The value of the cookie to set.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.SetCookie(Cookie):Boolean">
            <summary>Sets the cookie given a cookie object</summary>
            <param name="Cookie">The cookie object to set.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.GetCookieNames:List of [Text]">
            <summary>Gets the names of the cookies that are set in the HttpRequestMessage object.</summary>
            <returns>The names of the cookies that are set in the HttpRequestMessage object.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.GetCookies:List of [Cookie]">
            <summary>Gets the cookies that are set in the HttpRequestMessage object.</summary>
            <returns>The cookies that are set in the HttpRequestMessage object.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.GetCookie(Text):Cookie">
            <summary>Gets the cookie with the given name from the HttpRequestMessage object.</summary>
            <param name="Name">The name of the cookie to get.</param>
            <returns>The cookie object.</returns>
            <remarks>If the cookie is not found, an empty cookie object is returned.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.GetCookie(Text,Cookie@):Boolean">
            <summary>Gets the cookie with the given name from the HttpRequestMessage object.</summary>
            <param name="Name">The name of the cookie to get.</param>
            <param name="Cookie">The cookie object to get.</param>
            <returns>True if the cookie was found, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.RemoveCookie(Text):Boolean">
            <summary>Removes the cookie with the given name from the HttpRequestMessage object.</summary>
            <param name="Name">The name of the cookie to remove.</param>
            <returns>True if the cookie was removed, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.SetHttpRequestMessage(HttpRequestMessage@)">
            <summary>Sets the HttpRequestMessage that is represented by the HttpRequestMessage object.</summary>
            <param name="RequestMessage">The HttpRequestMessage to set.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.GetHttpRequestMessage:HttpRequestMessage">
            <summary>Gets the HttpRequestMessage that is represented by the HttpRequestMessage object.</summary>
            <returns>The HttpRequestMessage that is represented by the HttpRequestMessage object.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Request Message.SetContent(Codeunit::System#RestClient#Http Content)">
            <summary>Sets the content of the HttpRequestMessage that is represented by the HttpRequestMessage object.</summary>
            <param name="HttpContent">The Http Content object to set.</param>
        </member>
        <member name="O:Codeunit::System#RestClient#Http Response Message">
            <summary>Holder object for the HTTP response data.</summary>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.Create(HttpResponseMessage):Codeunit::System#RestClient#Http Response Message">
            <summary>Initializes a new instance of the HttpResponseMessage class.</summary>
            <param name="HttpResponseMessage">The HTTP response message.</param>
            <returns>The HttpResponseMessage object.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.SetIsBlockedByEnvironment(Boolean)">
            <summary>Sets whether the request is blocked by the environment.</summary>
            <param name="Value">True if the request is blocked by the environment; otherwise, false.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetIsBlockedByEnvironment:Boolean">
            <summary>Gets whether the request is blocked by the environment.</summary>
            <returns>True if the request is blocked by the environment; otherwise, false.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetHttpStatusCode:Integer">
            <summary>Gets the HTTP status code of the response message.</summary>
            <returns>The HTTP status code.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.SetIsSuccessStatusCode(Boolean)">
            <summary>Sets whether the HTTP response message has a success status code.</summary>
            <param name="Value">True if the HTTP response message has a success status code; otherwise, false.</param>
            <remarks>Any value in the HTTP status code range 2xx is considered to be successful.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetIsSuccessStatusCode:Boolean">
            <summary>Indicates whether the HTTP response message has a success status code.</summary>
            <returns>True if the HTTP response message has a success status code; otherwise, false.</returns>
            <remarks>Any value in the HTTP status code range 2xx is considered to be successful.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.SetReasonPhrase(Text)">
            <summary>Sets the reason phrase which typically is sent by servers together with the status code.</summary>
            <param name="Value">The reason phrase sent by the server.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetReasonPhrase:Text">
            <summary>Gets the reason phrase which typically is sent by servers together with the status code.</summary>
            <returns>The reason phrase sent by the server.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.SetContent(Codeunit::System#RestClient#Http Content)">
            <summary>Sets the HTTP content sent back by the server.</summary>
            <param name="Content">The content of the HTTP response message.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetContent:Codeunit::System#RestClient#Http Content">
            <summary>Gets the HTTP content sent back by the server.</summary>
            <returns>The content of the HTTP response message.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.SetResponseMessage(HttpResponseMessage)">
            <summary>Sets the HTTP response message.</summary>
            <param name="ResponseMessage">The HTTP response message.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetResponseMessage:HttpResponseMessage">
            <summary>Gets the HTTP response message.</summary>
            <returns>The HTTPResponseMessage object.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.SetHeaders(HttpHeaders)">
            <summary>Sets the HTTP headers.</summary>
            <param name="Headers">The HTTP headers.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetHeaders:HttpHeaders">
            <summary>Gets the HTTP headers.</summary>
            <returns>The HTTP headers.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.SetCookies(Dictionary of [Text,Cookie])">
            <summary>Sets the cookies in the HTTP response message.</summary>
            <param name="Cookies">The cookies to set.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetCookies:Dictionary of [Text,Cookie]">
            <summary>Gets the cookies in the HTTP response message.</summary>
            <returns>The cookies in the HTTP response message.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetCookieNames:List of [Text]">
            <summary>Gets the names of the cookies that are set in the HTTP response message.</summary>
            <returns>The names of the cookies that are set in the HTTP response message.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetCookie(Text):Cookie">
            <summary>Gets the cookie with the given name from the HTTP response message.</summary>
            <param name="Name">The name of the cookie to get.</param>
            <returns>The cookie object.</returns>
            <remarks>If the cookie is not found, an empty cookie object is returned.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetCookie(Text,Cookie@):Boolean">
            <summary>Gets the cookie with the given name from the HTTP response message.</summary>
            <param name="Name">The name of the cookie to get.</param>
            <param name="Cookie">The cookie object to get.</param>
            <returns>True if the cookie was found, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.SetErrorMessage(Text)">
            <summary>Sets an error message when the request failed.</summary>
            <param name="Value">The error message.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetErrorMessage:Text">
            <summary>Gets the error message when the request failed.</summary>
            <returns>The error message.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.SetException(ErrorInfo)">
            <summary>Sets the exception information when the request failed.</summary>
            <param name="Exception">The exception information.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Response Message.GetException:ErrorInfo">
            <summary>Gets the exception information when the request failed.</summary>
            <returns>The exception information.</returns>
        </member>
        <member name="O:Codeunit::System#RestClient#Rest Client">
            <summary>Provides functionality to easily work with the HttpClient object.</summary>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Create:Codeunit::System#RestClient#Rest Client">
            <summary>Initializes a new instance of the Rest Client class.</summary>
            <returns>The Rest Client object.</returns>
            <remarks>The default Http Client Handler and anonymous Http authentication will be used.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Create(Interface::System#RestClient#Http Client Handler):Codeunit::System#RestClient#Rest Client">
            <summary>Initializes a new instance of the Rest Client class.</summary>
            <param name="HttpClientHandler">The Http Client Handler to use.</param>
            <returns>The Rest Client object.</returns>
            <remarks>The anynomous Http Authentication will be used.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Create(Interface::System#RestClient#Http Authentication):Codeunit::System#RestClient#Rest Client">
            <summary>Initializes a new instance of the Rest Client class.</summary>
            <param name="HttpAuthentication">The authentication to use.</param>
            <returns>The Rest Client object.</returns>
            <remarks>The default Http Client Handler will be used.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Create(Interface::System#RestClient#Http Client Handler,Interface::System#RestClient#Http Authentication):Codeunit::System#RestClient#Rest Client">
            <summary>Initializes a new instance of the Rest Client class.</summary>
            <param name="HttpClientHandler">The Http Client Handler to use.</param>
            <param name="HttpAuthentication">The authentication to use.</param>
            <returns>The Rest Client object.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Initialize">
            <summary>Initializes the Rest Client with the default Http Client Handler and anonymous Http authentication.</summary>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Initialize(Interface::System#RestClient#Http Client Handler)">
            <summary>Initializes the Reest Client with the given Http Client Handler</summary>
            <param name="HttpClientHandler">The Http Client Handler to use.</param>
            <remarks>The anynomous Http Authentication will be used.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Initialize(Interface::System#RestClient#Http Authentication)">
            <summary>Initializes the Rest Client with the given Http Authentication.</summary>
            <param name="HttpAuthentication">The authentication to use.</param>
            <remarks>The default Http Client Handler will be used.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Initialize(Interface::System#RestClient#Http Client Handler,Interface::System#RestClient#Http Authentication)">
            <summary>Initializes the Rest Client with the given Http Client Handler and Http Authentication.</summary>
            <param name="HttpClientHandler">The Http Client Handler to use.</param>
            <param name="HttpAuthentication">The authentication to use.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.SetDefaultRequestHeader(Text,Text)">
            <summary>Sets a new value for an existing default header of the Http Client object, or addds the header if it does not already exist.</summary>
            <param name="Name">The name of the request header.</param>
            <param name="Value">The header of request header.</param>
            <remarks>Default request headers will be added to every request that is sent with this Rest Client instance
            The Rest Client will be initialized if it was not initialized before.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.SetDefaultRequestHeader(Text,SecretText)">
            <summary>Sets a new value for an existing default header of the Http Client object, or addds the header if it does not already exist.</summary>
            <param name="Name">The name of the request header.</param>
            <param name="Value">The header of request header.</param>
            <remarks>Default request headers will be added to every request that is sent with this Rest Client instance
            The Rest Client will be initialized if it was not initialized before.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.SetBaseAddress(Text)">
            <summary>Sets the base address of the Rest Client.</summary>
            <remarks>The base address will be used for every request that is sent with this Rest Client instance.
            Calls to the Get, Post, Patch, Put and Delete methods must  use a relative path which will be appended to the base address.
            The Rest Client will be initialized if it was not initialized before.</remarks>
            <param name="Url">The base address to use.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.GetBaseAddress:Text">
            <summary>Gets the base address of the Rest Client.</summary>
            <returns>The base address of the Rest Client.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.SetTimeOut(Duration)">
            <summary>Sets the timeout of the Rest Client.</summary>
            <param name="Timeout">The timeout to use.</param>
            <remarks>The timeout will be used for every request that is sent with this Rest Client instance.
            The Rest Client will be initialized if it was not initialized before.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.GetTimeOut:Duration">
            <summary>Gets the timeout of the Rest Client.</summary>
            <returns>The timeout of the Rest Client.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.AddCertificate(Text)">
            <summary>Adds a certificate to the Rest Client.</summary>
            <param name="Certificate">The Base64 encoded certificate</param>
            <remarks>The certificate will be used for every request that is sent with this Rest Client instance.
            The Rest Client will be initialized if it was not initialized before.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.AddCertificate(Text,SecretText)">
            <summary>Adds a certificate to the Rest Client.</summary>
            <param name="Certificate">The Base64 encoded certificate</param>
            <param name="Password">The password of the certificate</param>
            <remarks>The certificate will be used for every request that is sent with this Rest Client instance.
            The Rest Client will be initialized if it was not initialized before.</remarks>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.SetUserAgentHeader(Text)">
            <summary>Sets the user agent header of the Rest Client.</summary>
            <remarks>Use this function to overwrite the default User-Agent header.
            The default user agent header is "Dynamics 365 Business Central - |[Publisher]| [App Name]/[App Version]".
            The Rest Client will be initialized if it was not initialized before.</remarks>
            <param name="Value">The user agent header to use.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.SetAuthorizationHeader(SecretText)">
            <summary>Sets the authorization header of the Rest Client.</summary>
            <remarks>Use this function to set the authorization header.
            The Rest Client will be initialized if it was not initialized before.</remarks>
            <param name="Value">The authorization header to use.</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.SetUseResponseCookies(Boolean)">
            <summary>Sets the use of response cookies in subsequent requests.</summary>
            <remarks>Use this function to enable or disable automatically attach cookies received in the response to all subsequent requests.
            The Rest Client will be initialized if it was not initialized before.</remarks>
            <param name="Value">If true, the client automatically attaches cookies received in the response to all subsequent requests. False to disable</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Get(Text):Codeunit::System#RestClient#Http Response Message">
            <summary>Sends a GET request to the specified Uri and returns the response message.</summary>
            <remarks>The function fails with a collectible error if the request could not be sent or a response was not received.
            If a response was received, then the response message object contains information about the status.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <returns>The response message object</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Post(Text,Codeunit::System#RestClient#Http Content):Codeunit::System#RestClient#Http Response Message">
            <summary>Sends a POST request to the specified Uri and returns the response message.</summary>
            <remarks>The function fails with a collectible error if the request could not be sent or a response was not received.
            If a response was received, then the response message object contains information about the status.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send.</param>
            <returns>The response message object</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Patch(Text,Codeunit::System#RestClient#Http Content):Codeunit::System#RestClient#Http Response Message">
            <summary>Sends a PATCH request to the specified Uri and returns the response message.</summary>
            <remarks>The function fails with a collectible error if the request could not be sent or a response was not received.
            If a response was received, then the response message object contains information about the status.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send.</param>
            <returns>The response message object</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Put(Text,Codeunit::System#RestClient#Http Content):Codeunit::System#RestClient#Http Response Message">
            <summary>Sends a PUT request to the specified Uri and returns the response message.</summary>
            <remarks>The function fails with a collectible error if the request could not be sent or a response was not received.
            If a response was received, then the response message object contains information about the status.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send.</param>
            <returns>The response message object</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Delete(Text):Codeunit::System#RestClient#Http Response Message">
            <summary>Sends a DELETE request to the specified Uri and returns the response message.</summary>
            <remarks>The function fails with a collectible error if the request could not be sent or a response was not received.
            If a response was received, then the response message object contains information about the status.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <returns>The response message object</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.GetAsJson(Text):JsonToken">
            <summary>Sends a GET request to the specified Uri and returns the response content as JsonToken.</summary>
            <remarks>The function fails with a collectible error if the request could not be sent or a response was not received.
            The function also fails with a collectible error in case the response does not contain a success status code.
            In case the response contains no content, an empty JsonToken is returned. 
            In case the response contains content, then the function fails with a collectible error if the content is invalid JSON.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <returns>The response content as JsonToken</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.PostAsJson(Text,JsonObject):JsonToken">
            <summary>Sends a POST request to the specified Uri and returns the response content as JsonToken.</summary>
            <remarks>The function fails with an error message if the request could not be sent or a response was not received.
            The function also fails with a collectible error in case the response does not contain a success status code.
            In case the response contains no content, an empty JsonToken is returned. 
            In case the response contains content, then the function fails if the content is invalid JSON.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send as a JsonObject.</param>
            <returns>The response content as JsonToken</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.PostAsJson(Text,JsonArray):JsonToken">
            <summary>Sends a POST request to the specified Uri and returns the response content as JsonToken.</summary>
            <remarks>The function fails with an error message if the request could not be sent or a response was not received.
            The function also fails with a collectible error in case the response does not contain a success status code.
            In case the response contains no content, an empty JsonToken is returned. 
            In case the response contains content, then the function fails if the content is invalid JSON.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send as a JsonArray.</param>
            <returns>The response content as JsonToken</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.PostAsJson(Text,JsonToken):JsonToken">
            <summary>Sends a POST request to the specified Uri and returns the response content as JsonToken.</summary>
            <remarks>The function fails with an error message if the request could not be sent or a response was not received.
            The function also fails with a collectible error in case the response does not contain a success status code.
            In case the response contains no content, an empty JsonToken is returned. 
            In case the response contains content, then the function fails if the content is invalid JSON.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send as a JsonToken.</param>
            <returns>The response content as JsonToken</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.PatchAsJson(Text,JsonObject):JsonToken">
            <summary>Sends a PATCH request to the specified Uri and returns the response content as JsonToken.</summary>
            <remarks>The function fails with an error message if the request could not be sent or a response was not received.
            The function also fails with a collectible error in case the response does not contain a success status code.
            In case the response contains no content, an empty JsonToken is returned. 
            In case the response contains content, then the function fails if the content is invalid JSON.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send as a JsonObject.</param>
            <returns>The response content as JsonToken</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.PatchAsJson(Text,JsonArray):JsonToken">
            <summary>Sends a PATCH request to the specified Uri and returns the response content as JsonToken.</summary>
            <remarks>The function fails with an error message if the request could not be sent or a response was not received.
            The function also fails with a collectible error in case the response does not contain a success status code.
            In case the response contains no content, an empty JsonToken is returned. 
            In case the response contains content, then the function fails if the content is invalid JSON.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send as a JsonArray.</param>
            <returns>The response content as JsonToken</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.PatchAsJson(Text,JsonToken):JsonToken">
            <summary>Sends a PATCH request to the specified Uri and returns the response content as JsonToken.</summary>
            <remarks>The function fails with an error message if the request could not be sent or a response was not received.
            The function also fails with a collectible error in case the response does not contain a success status code.
            In case the response contains no content, an empty JsonToken is returned. 
            In case the response contains content, then the function fails if the content is invalid JSON.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send as a JsonToken.</param>
            <returns>The response content as JsonToken</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.PutAsJson(Text,JsonObject):JsonToken">
            <summary>Sends a PUT request to the specified Uri and returns the response content as JsonToken.</summary>
            <remarks>The function fails with an error message if the request could not be sent or a response was not received.
            The function also fails with a collectible error in case the response does not contain a success status code.
            In case the response contains no content, an empty JsonToken is returned. 
            In case the response contains content, then the function fails if the content is invalid JSON.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send as a JsonObject.</param>
            <returns>The response content as JsonToken</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.PutAsJson(Text,JsonArray):JsonToken">
            <summary>Sends a PUT request to the specified Uri and returns the response content as JsonToken.</summary>
            <remarks>The function fails with an error message if the request could not be sent or a response was not received.
            The function also fails with a collectible error in case the response does not contain a success status code.
            In case the response contains no content, an empty JsonToken is returned. 
            In case the response contains content, then the function fails if the content is invalid JSON.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send as a JsonArray.</param>
            <returns>The response content as JsonToken</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.PutAsJson(Text,JsonToken):JsonToken">
            <summary>Sends a PUT request to the specified Uri and returns the response content as JsonToken.</summary>
            <remarks>The function fails with an error message if the request could not be sent or a response was not received.
            The function also fails with a collectible error in case the response does not contain a success status code.
            In case the response contains no content, an empty JsonToken is returned. 
            In case the response contains content, then the function fails if the content is invalid JSON.</remarks>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send as a JsonToken.</param>
            <returns>The response content as JsonToken</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Send(Enum::System#RestClient#Http Method,Text):Codeunit::System#RestClient#Http Response Message">
            <summary>Sends a request with the specific Http method and an empty content to the specified Uri and returns the response message.</summary>
            <remarks>The function fails with a collectible error if the request could not be sent or a response was not received.
            If a response was received, then the response message object contains information about the status.</remarks>
            <param name="Method">The HTTP method to use.</param>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <returns>The response message object</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Send(Enum::System#RestClient#Http Method,Text,Codeunit::System#RestClient#Http Content):Codeunit::System#RestClient#Http Response Message">
            <summary>Sends a request with the specific Http method and the given content to the specified Uri and returns the response message.</summary>
            <remarks>The function fails with a collectible error if the request could not be sent or a response was not received.
            If a response was received, then the response message object contains information about the status.</remarks>
            <param name="Method">The HTTP method to use.</param>
            <param name="RequestUri">The Uri the request is sent to.</param>
            <param name="Content">The content to send.</param>
            <returns>The response message object</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client.Send(Codeunit::System#RestClient#Http Request Message@):Codeunit::System#RestClient#Http Response Message">
            <summary>Sends the given request message and returns the response message.</summary>
            <remarks>The function fails with a collectible error if the request could not be sent or a response was not received.</remarks>
            <param name="HttpRequestMessage">The request message to send.</param>
            <returns>The response message object</returns>
        </member>
        <member name="O:Interface::System#RestClient#Http Authentication">
            <summary>An interface to support different authorization mechanism in a generic way.</summary>
        </member>
        <member name="M:Interface::System#RestClient#Http Authentication.IsAuthenticationRequired:Boolean">
            <summary>Indicates whether authentication is required for the request.</summary>
            <returns>True if authentication is required, false otherwise.</returns>
        </member>
        <member name="M:Interface::System#RestClient#Http Authentication.GetAuthorizationHeaders:Dictionary of [Text,SecretText]">
            <summary>Gets the authorization headers for the request.</summary>
            <returns>A dictionary of authorization headers.</returns>
        </member>
        <member name="O:Codeunit::System#RestClient#Http Authentication Anonymous">
            <summary>Implementation of the "Http Authentication" interface for a anonymous request.</summary>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Authentication Anonymous.IsAuthenticationRequired:Boolean">
            <summary>Indicates if authentication is required.</summary>
            <returns>False, because no authentication is required.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Authentication Anonymous.GetAuthorizationHeaders:Dictionary of [Text,SecretText]">
            <summary>Gets the authorization headers.</summary>
            <returns>Empty dictionary, because no authentication is required.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Authentication Basic.Initialize(Text,SecretText)">
            <summary>Initializes the authentication object with the given username and password</summary>
            <param name="Username">The username to use for authentication</param>
            <param name="Password">The password to use for authentication</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Authentication Basic.Initialize(Text,Text,SecretText)">
            <summary>Initializes the authentication object with the given username, domain and password</summary>
            <param name="Username">The username to use for authentication</param>
            <param name="Domain">The domain to use for authentication</param>
            <param name="Password">The password to use for authentication</param>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Authentication Basic.IsAuthenticationRequired:Boolean">
            <summary>Checks if authentication is required for the request</summary>
            <returns>Returns true because authentication is required</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Http Authentication Basic.GetAuthorizationHeaders:Dictionary of [Text,SecretText]">
            <summary>Gets the authorization headers for the request</summary>
            <returns>Returns a dictionary of headers that need to be added to the request</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#HttpAuthOAuthClientCredentials.Initialize(Text,Text,SecretText,List of [Text])">
            <summary>
            Initializes the authentication object with the given AuthorityUrl, ClientId, ClientSecret and scopes
            </summary>
            <param name="OAuthAuthorityUrl">The OAuthAuthorityUrl to use for authentication</param>
            <param name="ClientId">The ClientId to use for authentication</param>
            <param name="ClientSecret">The ClientSecret to use for authentication</param>
            <param name="Scopes">The Scopes to use for authentication</param>
        </member>
        <member name="M:Codeunit::System#RestClient#HttpAuthOAuthClientCredentials.Initialize(Text,Text,SecretText,SecretText,List of [Text])">
            <summary>
            Initializes the authentication object with the given AuthorityUrl, ClientId, Certificate, Certifacte Password  and Scopes
            </summary>
            <param name="OAuthAuthorityUrl">The OAuthAuthorityUrl to use for authentication</param>
            <param name="ClientId">The ClientId to use for authentication</param>
            <param name="Certificate">The Base64-encoded certificate for the Application (client) configured in the Azure Portal - Certificates &amp; Secrets.</param>
            <param name="CertificatePassword">Password for the certificate.</param>
            <param name="Scopes">The Scopes to use for authentication</param>
        </member>
        <member name="M:Codeunit::System#RestClient#HttpAuthOAuthClientCredentials.IsAuthenticationRequired:Boolean">
            <summary>Checks if authentication is required for the request</summary>
            <returns>Returns true because authentication is required</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#HttpAuthOAuthClientCredentials.GetAuthorizationHeaders:Dictionary of [Text,SecretText]">
            <summary>Gets the authorization headers for the request</summary>
            <returns>Returns a dictionary of headers that need to be added to the request</returns>
        </member>
        <member name="O:Enum::System#RestClient#Rest Client Exception">
            <summary>
            This enum contains the exceptions of the Rest Client.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Rest Client Exception.UnknownException">
            <summary>
            Specifies that the exception is an unknown exception.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Rest Client Exception.ConnectionFailed">
            <summary>
            Specifies that the connection failed.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Rest Client Exception.BlockedByEnvironment">
            <summary>
            Specifies that the request is blocked by the environment.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Rest Client Exception.RequestFailed">
            <summary>
            Specifies that the request failed.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Rest Client Exception.InvalidJson">
            <summary>
            Specifies that the content is not valid JSON.
            </summary>
        </member>
        <member name="E:Enum::System#RestClient#Rest Client Exception.InvalidXml">
            <summary>
            Specifies that the content is not valid XML.
            </summary>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client Exception Builder.CreateException(Enum::System#RestClient#Rest Client Exception,Text):ErrorInfo">
            <summary>
            Creates an exception with the specified error code and message. The exception is collectible if the errors are currently being collected.
            </summary>
            <param name="RestClientException">The error code for the exception.</param>
            <param name="ErrorMessage">The message for the exception.</param>
            <returns>The exception with the specified error code and message.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client Exception Builder.CreateException(Enum::System#RestClient#Rest Client Exception,Text,Boolean):ErrorInfo">
            <summary>
            Creates an exception with the specified error code, message, and collectible flag.
            </summary>
            <param name="RestClientException">The error code for the exception.</param>
            <param name="ErrorMessage">The message for the exception.</param>
            <param name="Collectible">Whether the exception is collectible.</param>
            <returns>The exception with the specified error code, message, and collectible flag.</returns>
        </member>
        <member name="M:Codeunit::System#RestClient#Rest Client Exception Builder.GetRestClientException(ErrorInfo):Enum::System#RestClient#Rest Client Exception">
            <summary>
            Gets the exception code from the error info.
            </summary>
            <param name="ErrInfo">The error info of the exception.</param>
            <returns>The exception code.</returns>
        </member>
        <member name="O:Codeunit::System#Upgrade#Upgrade Tag">
            <summary>
            The interface for registering upgrade tags.
            Format of the upgrade tag is:
            [CompanyPrefix]-[TFSID]-[Description]-[YYYYMMDD]
            Example:
            MS-29901-UpdateGLEntriesIntegrationRecordIDs-20161206
            </summary>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.HasUpgradeTag(Code[250]):Boolean">
            <summary>
            Verifies if the upgrade tag exists.
            </summary>
            <param name="Tag">Tag code to check</param>
            <returns>True if the Tag with given code exist.</returns>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.HasUpgradeTag(Code[250],Code[30]):Boolean">
            <summary>
            Verifies if the upgrade tag exists.
            </summary>
            <param name="Tag">Tag code to check</param>
            <param name="TagCompanyName">Name of the company to check existance of tag</param>
            <returns>True if the Tag with given code exist.</returns>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.HasDatabaseUpgradeTag(Code[250]):Boolean">
            <summary>
            Verifies if the database upgrade tag exists.
            </summary>
            <param name="Tag">Tag code to check</param>
            <returns>True if the Tag with the given code exists.</returns>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.SetDatabaseUpgradeTag(Code[250])">
            <summary>
            Sets the upgrade tag for database upgrades.
            </summary>
            <param name="NewTag">Tag code to save</param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.SetUpgradeTag(Code[250])">
            <summary>
            Sets the upgrade tag.
            </summary>
            <param name="NewTag">Tag code to save</param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.SetSkippedUpgrade(Code[250],Boolean)">
            <summary>
            Sets the upgrade tag to skipped.
            </summary>
            <param name="ExistingTag">Tag code to set the Skipped Upgrade field</param>
            <param name="SkipUpgrade">Sets the Skipped Upgrade field</param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.SetSkippedUpgrade(Code[250],Code[30],Boolean)">
            <summary>
            Sets the upgrade tag to skipped.
            </summary>
            <param name="ExistingTag">Tag code to set the Skipped Upgrade field</param>
            <param name="TagCompanyName">Name of the company to check existance of tag</param>
            <param name="SkipUpgrade">Sets the Skipped Upgrade field</param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.HasUpgradeTagSkipped(Code[250],Code[30]):Boolean">
            <summary>
            Check if the upgrade tag is skipped.
            </summary>
            <param name="ExistingTag">Tag code to set the Skipped Upgrade field</param>
            <param name="TagCompanyName">Name of the company to check existance of tag</param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.SetAllUpgradeTags">
            <summary>
            This method should be used to set all upgrade tags in a new company.
            The method is called from codeunit 2 - Company Initialize.
            </summary>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.SetAllUpgradeTags(Code[30])">
            <summary>
            This method should be used to set all upgrade tags in a new company.
            </summary>
            <param name="NewCompanyName">Name of the company set the upgrade tags</param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.CopyUpgradeTags(Code[30],Code[30])">
            <summary>
            This method should be used to copy all upgrade tags from a company to another company.
            </summary>
            <param name="FromCompanyName">Name of the company from which to take the upgrade tags.</param>
            <param name="ToCompanyName">Name of the company to which to copy the upgrade tags.</param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.GetPerCompanyUpgradeTags(List of [Code]@)">
            <summary>
            With this method you get all the upgrade tags by company in a list.
            </summary>
            <param name="PerCompanyUpgradeTags">
            List of upgrade tags that should be inserted if they do not exist.
            </param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.GetPerDatabaseUpgradeTags(List of [Code]@)">
            <summary>
            With this method you get all the upgrade tags by database in a list.
            </summary>
            <param name="PerCompanyUpgradeTags">
            List of upgrade tags that should be inserted if they do not exist.
            </param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.BackupUpgradeTags:Integer">
            <summary>
            This function is used for cloud migration to backup upgrade tags before cloud migration is triggered.
            Using the function if cloud migration is not enabled will throw an error.
            </summary>
            <returns>ID of the backup, used in <see cref="RestoreUpgradeTagsFromBackup"/> method.</returns>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.RestoreUpgradeTagsFromBackup(Integer,Boolean)">
            <summary>
            This function is used to restore Upgrade tags after cloud migration.
            Using the function if cloud migration is not enabled will throw an error.
            </summary>
            <param name="BackupId">ID of the backup, created by <see cref="BackupUpgradeTags"/> method.</param>
            <param name="RestoreMissingTagsOnly">This parameter indicates if the function should restore the entire table or only insert back the missing upgrade tags.</param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.OnGetPerCompanyUpgradeTags(List of [Code]@)">
            <summary>
            Use this event if you want to add upgrade tag for PerCompany upgrade method for a new company.
            </summary>
            <param name="PerCompanyUpgradeTags">
            List of upgrade tags that should be inserted if they do not exist.
            </param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.OnGetPerDatabaseUpgradeTags(List of [Code]@)">
            <summary>
            Use this event if you want to add upgrade tag for PerDatabase upgrade method for a new company.
            </summary>
            <param name="PerDatabaseUpgradeTags">
            List of upgrade tags that should be inserted if they do not exist.
            </param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag.OnSetAllUpgradeTags(Text,Boolean@)">
            <summary>
            Use this event if you want to skip or run logic when we register all tags for a company.
            </summary>
            <param name="NewCompanyName">Name of the company to set the upgrade tags.</param>
            <param name="SkipSetAllUpgradeTags">Specifies if the setting of the tags for the company should be skipped.</param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag Impl#.RestoreUpgradeTagsFromBackup(Integer,Boolean)">
            <summary>
            Use function is used to restore Upgrade tags after Cloud Migration.
            </summary>
            <param name="BackupId">ID of the backup, used in RestoreUpgradeTagsFromBackup method.</param>
            <param name="RestoreMissingTagsOnly">This parameter indicates if the function should restore the entire table or only insert back the missing upgrade tags.</param>
        </member>
        <member name="M:Codeunit::System#Upgrade#Upgrade Tag - Tags.GetUpgradeTagInitializedTag:Code[250]">
            <summary>
            Upgrade tag used to mark that the upgrade tags have been initialized for PerCompany and PerDatabase
            </summary>
            <returns>Tag value - format is: Publisher - TFSID - Name - Date. Purpose of the naming is to make the tag unique.</returns>
        </member>
        <member name="O:Codeunit::System#Xml#Xml Validation">
            <summary>
            Provides helper functions for xml validation against a schema.
            </summary>
        </member>
        <member name="M:Codeunit::System#Xml#Xml Validation.TryValidateAgainstSchema(Text,Text,Text):Boolean">
            <summary>
            Performs validation of an XML from a string against a schema from a string.
            </summary>
            <param name="Xml">Xml string to validate.</param>
            <param name="XmlSchema">Xml schema string to validate against.</param>
            <param name="Namespace">Namespace of the xml schema.</param>
            <error>If xml definition is not well-formed</error>
            <error>If xml schema definition is not well-formed</error>
        </member>
        <member name="M:Codeunit::System#Xml#Xml Validation.TryValidateAgainstSchema(XmlDocument,XmlDocument,Text):Boolean">
            <summary>
            Performs validation of a XmlDocument against a schema in a XmlDocument.
            </summary>
            <param name="XmlDoc">Xml document to validate.</param>
            <param name="XmlSchemaDoc">Xml document with the schema to validate against.</param>
            <param name="Namespace">Namespace of the xml schema.</param>
        </member>
        <member name="M:Codeunit::System#Xml#Xml Validation.TryValidateAgainstSchema(InStream,InStream,Text):Boolean">
            <summary>
            Performs validation of a XmlDocument against a schema in a stream.
            </summary>
            <param name="XmlDocInStream">InStream holding the xml document to validate.</param>
            <param name="XmlSchemaInStream">InStream holding the schema to validate against.</param>
            <param name="Namespace">Namespace of the xml schema.</param>
        </member>
        <member name="M:Codeunit::System#Xml#Xml Validation.TrySetValidatedDocument(Text):Boolean">
            <summary>
            Sets validated document from a string.
            </summary>
            <param name="Xml">Xml string to validate.</param>
        </member>
        <member name="M:Codeunit::System#Xml#Xml Validation.TrySetValidatedDocument(XmlDocument):Boolean">
            <summary>
            Sets validated document in a XmlDocument.
            </summary>
            <param name="XmlDoc">Xml document to validate.</param>
        </member>
        <member name="M:Codeunit::System#Xml#Xml Validation.TrySetValidatedDocument(InStream):Boolean">
            <summary>
            Sets validated document from a stream.
            </summary>
            <param name="XmlDocInStream">InStream holding the XML document to validate.</param>
        </member>
        <member name="M:Codeunit::System#Xml#Xml Validation.TryAddValidationSchema(Text,Text):Boolean">
            <summary>
            Adds validation schema to validated document from a string.
            </summary>
            <param name="XmlSchema">Xml schema string to validate against.</param>
            <param name="Namespace">Namespace of the XML schema.</param>
        </member>
        <member name="M:Codeunit::System#Xml#Xml Validation.TryAddValidationSchema(XmlDocument,Text):Boolean">
            <summary>
            Adds validation schema to validated document in a XmlDocument.
            </summary>
            <param name="XmlSchemaDoc">Xml document with the schema to validate against.</param>
            <param name="Namespace">Namespace of the XML schema.</param>
        </member>
        <member name="M:Codeunit::System#Xml#Xml Validation.TryAddValidationSchema(InStream,Text):Boolean">
            <summary>
            Adds validation schema to validated document from a stream.
            </summary>
            <param name="XmlSchemaInStream">InStream holding the XSD schema to validate against.</param>
            <param name="Namespace">Namespace of the XML schema.</param>
        </member>
        <member name="M:Codeunit::System#Xml#Xml Validation.TryValidateAgainstSchema:Boolean">
            <summary>
            Performs validation of a XML document against one or multiple XSD schemas.
            </summary>
        </member>
        <member name="O:Codeunit::System#Xml#XmlWriter">
            <summary>
            Provides helper functions for System.Xml.XmlWriter
            </summary>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteStartDocument">
            <summary>
            Initializes the XmlWriter and creates the XmlWriter Document
            </summary>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteProcessingInstruction(Text,Text)">
            <summary>
            Writes the Processing Instruction.
            </summary>
            <remarks>This function reinitializes the XML Writer.</remarks>
            <param name="Name">The name of the processing instruction.</param>
            <param name="Text">The text to include in the processing instruction.</param>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteStartElement(Text)">
            <summary>
            Writes the specified start tag.
            </summary>
            <param name="LocalName">The local name of the element.</param>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteStartElement(Text,Text,Text)">
            <summary>
            Writes the specified start tag and associates it with the given namespace and prefix.
            </summary>
            <param name="Prefix">The namespace prefix of the element.</param>
            <param name="LocalName">The local name of the element.</param>
            <param name="NameSpace">The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.</param>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteElementString(Text,Text)">
            <summary>
            Writes an element with the specified local name and value.
            </summary>
            <param name="LocalName">The local name of the element.</param>
            <param name="ElementValue">The value of the element.</param>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteElementString(Text,Text,Text)">
            <summary>
            Writes an element with the specified local name, value and namespace.
            </summary>
            <param name="LocalName">The local name of the element.</param>
            <param name="ElementValue">The value of the element.</param>
            <param name="Namespace">The namespace URI of the element.</param>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteElementString(Text,Text,Text,Text)">
            <summary>
            Writes an element with the specified local name, value, namespace and prefix.
            </summary>
            <param name="LocalName">The local name of the element.</param>
            <param name="ElementValue">The value of the element.</param>
            <param name="Namespace">The namespace URI of the element.</param>
            <param name="Prefix">The prefix of the element.</param>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteString(Text)">
            <summary>
            Writes the given text content.
            </summary>
            <param name="ElementText">Text to write.</param>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteEndElement">
            <summary>
            Closes one element and pops the corresponding namespace scope.
            </summary>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteAttributeString(Text,Text,Text,Text)">
            <summary>
            Writes an attribute with the specified local name, namespace URI, and value.
            </summary>
            <param name="Prefix">The namespace prefix of the attribute.</param>
            <param name="LocalName">The local name of the attribute.</param>
            <param name="Namespace">The namespace URI of the attribute.</param>
            <param name="ElementValue">The value of the attribute.</param>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteAttributeString(Text,Text)">
            <summary>
            Writes out the attribute with the specified local name and value.
            </summary>
            <param name="LocalName">The local name of the attribute.</param>
            <param name="ElementValue">The value of the attribute.</param>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteComment(Text)">
            <summary>
            Writes out a comment <!--...--> containing the specified text.
            </summary>
            <param name="Comment">Text to place inside the comment.</param>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.WriteEndDocument">
            <summary>
            Closes any open elements or attributes and puts the writer back in the Start state.
            </summary>
        </member>
        <member name="M:Codeunit::System#Xml#XmlWriter.ToBigText(BigText@)">
            <summary>
            Writes the text within Xml Writer to the BigText variable.
            </summary>
            <param name="XmlBigText">The BigText the Xml Writer has to be write to.</param>
        </member>
        <member name="O:Enum::System#AI#DocumentIntelligence#ADI Model Type">
            <summary>
            The supported model types for Azure Document Intelligence.
            </summary>
        </member>
        <member name="E:Enum::System#AI#DocumentIntelligence#ADI Model Type.Invoice">
            <summary>
            Invoice model type.
            </summary>
        </member>
        <member name="E:Enum::System#AI#DocumentIntelligence#ADI Model Type.Receipt">
            <summary>
            Receipt model type.
            </summary>
        </member>
        <member name="O:Codeunit::System#AI#DocumentIntelligence#Azure DI Impl#">
            <summary>
            Azure Document Intelligence implementation.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#DocumentIntelligence#Azure DI Impl#.AnalyzeInvoice(Text,ModuleInfo):Text">
            <summary>
            Analyze a single invoice.
            </summary>
            <param name="Base64Data">Data to analyze.</param>
            <param name="CallerModuleInfo">The module info of the caller.</param>
            <returns>The analyzed result.</returns>
        </member>
        <member name="M:Codeunit::System#AI#DocumentIntelligence#Azure DI Impl#.AnalyzeReceipt(Text,ModuleInfo):Text">
            <summary>
            Analyze a single receipt.
            </summary>
            <param name="Base64Data">Data to analyze.</param>
            <param name="CallerModuleInfo">The module info of the caller.</param>
            <returns>The analyzed result.</returns>
        </member>
        <member name="O:Codeunit::System#AI#DocumentIntelligence#Azure Document Intelligence">
            <summary>
            Provides functionality to invoke Azure Document Intelligence services.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#DocumentIntelligence#Azure Document Intelligence.AnalyzeInvoice(Text):Text">
            <summary>
            Analyze the invoice.
            </summary>
            <param name="Base64Data">Data to analyze.</param>
            <returns>The analyzed result.</returns>
        </member>
        <member name="M:Codeunit::System#AI#DocumentIntelligence#Azure Document Intelligence.AnalyzeReceipt(Text):Text">
            <summary>
            Analyze the Receipt.
            </summary>
            <param name="Base64Data">Data to analyze.</param>
            <returns>The analyzed result.</returns>
        </member>
        <member name="M:Codeunit::System#AI#DocumentIntelligence#Azure Document Intelligence.RegisterCopilotCapability(Enum::System#AI#Copilot Capability,Enum::System#AI#Copilot Availability,Text[2048])">
            <summary>
            Register a capability for Azure Document Intelligence.
            </summary>
            <param name="CopilotCapability">The capability.</param>
            <param name="CopilotAvailability">The availability.</param>
            <param name="LearnMoreUrl">The learn more url.</param>
        </member>
        <member name="M:Codeunit::System#AI#DocumentIntelligence#Azure Document Intelligence.SetCopilotCapability(Enum::System#AI#Copilot Capability)">
            <summary>
            Sets the copilot capability that the API is running for.
            </summary>
            <param name="CopilotCapability">The copilot capability to set.</param>
        </member>
        <member name="O:Codeunit::System#AI#AOAI Authorization">
            <summary>
            Store the authorization information for the AOAI service.
            </summary>
        </member>
        <member name="O:Codeunit::System#AI#AOAI Deployments">
            <summary>
            This codeunit is used to get the AOAI deployment names.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Deployments.GetTurbo0301:Text">
            <summary>
            Returns the name of the AOAI deployment model Turbo 0301.
            </summary>
            <returns>The deployment name.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Deployments.GetGPT40613:Text">
            <summary>
            Returns the name of the AOAI deployment model GPT4 0613.
            </summary>
            <returns>The deployment name.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Deployments.GetTurbo0613:Text">
            <summary>
            Returns the name of the AOAI deployment model Turbo 0613.
            </summary>
            <returns>The deployment name.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Deployments.GetGPT35TurboLatest:Text">
            <summary>
            Returns the name of the latest AOAI deployment model of GPT3.5 Turbo.
            </summary>
            <returns>The deployment name.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Deployments.GetGPT35TurboPreview:Text">
            <summary>
            Returns the name of preview AOAI deployment model of GPT3.5 Turbo.
            </summary>
            <returns>The deployment name.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Deployments.GetGPT4Latest:Text">
            <summary>
            Returns the name of the latest AOAI deployment model of GPT4.
            </summary>
            <returns>The deployment name.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Deployments.GetGPT4Preview:Text">
            <summary>
            Returns the name of preview AOAI deployment model of GPT4.
            </summary>
            <returns>The deployment name.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Deployments.GetGPT4oLatest:Text">
            <summary>
            Returns the name of the latest AOAI deployment model of GPT4o.
            </summary>
            <returns>The deployment name.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Deployments.GetGPT4oPreview:Text">
            <summary>
            Returns the name of preview AOAI deployment model of GPT4o.
            </summary>
            <returns>The deployment name.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Deployments.GetGPT4oMiniLatest:Text">
            <summary>
            Returns the name of the latest AOAI deployment model of GPT4o-Mini.
            </summary>
            <returns>The deployment name.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Deployments.GetGPT4oMiniPreview:Text">
            <summary>
            Returns the name of preview AOAI deployment model of GPT4o-Mini.
            </summary>
            <returns>The deployment name.</returns>
        </member>
        <member name="O:Enum::System#AI#AOAI Model Type">
            <summary>
            The supported model types for Azure OpenAI.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Model Type.Embeddings">
            <summary>
            Embedding model type.
            Details: https://aka.ms/AOAIUnderstandEmbeddings
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Model Type.Text Completions">
            <summary>
            Completions model type.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Model Type.Chat Completions">
            <summary>
            Chat completions model type.
            </summary>
        </member>
        <member name="O:Enum::System#AI#AOAI Resource Utilization">
            <summary>
            The supported utilization models for Azure OpenAI resources.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Resource Utilization.First Party">
            <summary>
            The first party utilization (only available for Microsoft first party apps).
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Resource Utilization.Microsoft Managed">
            <summary>
            The Microsoft managed utilization (the resource used for the LLM call is provided and managed by Microsoft).
            </summary>
            <remarks>A valid resource is still required to validate that the developer has access to Azure OpenAI.</remarks>
        </member>
        <member name="E:Enum::System#AI#AOAI Resource Utilization.Self-Managed">
            <summary>
            The Self-managed utilization (the resource used for the LLM call is the one provided by the developer).
            </summary>
        </member>
        <member name="O:Codeunit::System#AI#AOAI Token">
            <summary>
            Provides functionality to get the token count for an input according to the model family they'd be used with.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Token.GetGPT35TokenCount(SecretText):Integer">
            <summary>
            Gets the token count for the input according to GPT3.5 models.
            </summary>
            <param name="Input">The input to get the token count for.</param>
            <returns>The token count.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Token.GetGPT4TokenCount(SecretText):Integer">
            <summary>
            Gets the token count for the input according to GPT4 models.
            </summary>
            <param name="Input">The input to get the token count for.</param>
            <returns>The token count.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Token.GetAdaTokenCount(SecretText):Integer">
            <summary>
            Gets the token count for the input according to embedding Ada models.
            </summary>
            <param name="Input">The input to get the token count for.</param>
            <returns>The token count.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Token.GetDavinciTokenCount(SecretText):Integer">
            <summary>
            Gets the token count for the input according to text Davinci models.
            </summary>
            <param name="Input">The input to get the token count for.</param>
            <returns>The token count.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Token.GetTotalServerSessionTokensConsumed:Integer">
            <summary>
            Gets the total tokens used till now for the server session.
            The total tokens used is aggregated for all the models.
            Note: this method is expected to change in future.
            </summary>
            <returns>The total token consumed for the session.</returns>
        </member>
        <member name="O:Codeunit::System#AI#Azure OpenAI">
            <summary>
            Provides functionality for using the Azure OpenAI API.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.IsEnabled(Enum::System#AI#Copilot Capability):Boolean">
            <summary>
            Checks if the Azure OpenAI API is enabled for the environment and if the capability is active on the environment.
            </summary>
            <param name="CopilotCapability">The copilot capability to check.</param>
            <returns>True if API and capability is enabled for environment.</returns>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.IsEnabled(Enum::System#AI#Copilot Capability,Boolean):Boolean">
            <summary>
            Checks if the Azure OpenAI API is enabled for the environment and if the capability is active on the environment.
            </summary>
            <param name="CopilotCapability">The copilot capability to check.</param>
            <param name="Silent">If true, no error message will be shown if API is not enabled.</param>
            <returns>True if API and capability is enabled for environment.</returns>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.IsEnabled(Enum::System#AI#Copilot Capability,Boolean,Guid):Boolean">
            <summary>
            Checks if the Azure OpenAI API is enabled for the environment and if the capability is active on the environment.
            </summary>
            <param name="CopilotCapability">The copilot capability to check.</param>
            <param name="Silent">If true, no error message will be shown if API is not enabled.</param>
            <param name="AppId">The id of the app, which registered the copilot capability.</param>
            <returns>True if API and capability is enabled for environment.</returns>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.IsAuthorizationConfigured(Enum::System#AI#AOAI Model Type):Boolean">
            <summary>
            Checks if the Azure OpenAI API authorization is configured for the environment.
            </summary>
            <param name="ModelType">The model type to check authorization for.</param>
            <returns>True if API is authorized for environment.</returns>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.IsInitialized(Enum::System#AI#Copilot Capability,Enum::System#AI#AOAI Model Type):Boolean">
            <summary>
            Checks if the Azure OpenAI API is enabled for the environment and authorization is configured for the modeltype.
            </summary>
            <param name="CopilotCapability">The copilot capability to check.</param>
            <param name="ModelType">The model type to check authorization for.</param>
            <returns>True if the API is enabled and model authorization has been configured.</returns>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.SetManagedResourceAuthorization(Enum::System#AI#AOAI Model Type,Text,Text,SecretText,Text)">
            <summary>
            Sets the managed Azure OpenAI API authorization to use for a specific model type.
            This will send the Azure OpenAI call to the deployment specified in <paramref name="ManagedResourceDeployment"/>, and will use the other parameters to verify that you have access to Azure OpenAI.
            </summary>
            <param name="ModelType">The model type to set authorization for.</param>
            <param name="Endpoint">The endpoint to use to verify access to Azure OpenAI. This is used only for verification, not for actual Azure OpenAI calls.</param>
            <param name="Deployment">The deployment to use to verify access to Azure OpenAI. This is used only for verification, not for actual Azure OpenAI calls.</param>
            <param name="ApiKey">The API key to use  to verify access to Azure OpenAI. This is used only for verification, not for actual Azure OpenAI calls.</param>
            <param name="ManagedResourceDeployment">The managed deployment to use for the model type.</param>
            <remarks> NOTE: This function is currently only available to selected partners.
            Endpoint would look like: https://resource-name.openai.azure.com/
            Deployment would look like: gpt-35-turbo-16k
            </remarks>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.SetManagedResourceAuthorization(Enum::System#AI#AOAI Model Type,Text,SecretText,Text)">
            <summary>
            Sets the managed Azure OpenAI API authorization to use for a specific model type.
            This will send the Azure OpenAI call to the deployment specified in <paramref name="ManagedResourceDeployment"/>, and will use the other parameters to verify that you have access to Azure OpenAI.
            </summary>
            <param name="ModelType">The model type to set authorization for.</param>
            <param name="AOAIAccountName">Name of the Azure Open AI resource like "MyAzureOpenAIResource"</param>
            <param name="ApiKey">The API key to access the Azure Open AI resource. This is used only for verification of access, not for actual Azure Open AI calls.</param>
            <param name="ManagedResourceDeployment">The managed deployment to use for the model type.</param>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.SetAuthorization(Enum::System#AI#AOAI Model Type,Text,Text,SecretText)">
            <summary>
            Sets the Azure OpenAI API authorization to use for a specific model type and endpoint.
            </summary>
            <param name="ModelType">The model type to set authorization for.</param>
            <param name="Endpoint">The endpoint to use for the model type.</param>
            <param name="Deployment">The deployment to use for the endpoint.</param>
            <param name="ApiKey">The API key to use for the endpoint.</param>
            <remarks>Endpoint would look like: https://resource-name.openai.azure.com/
            Deployment would look like: gpt-35-turbo-16k
            </remarks>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.SetAuthorization(Enum::System#AI#AOAI Model Type,Text)">
            <summary>
            Sets the Azure OpenAI API authorization to use for a specific model type.
            </summary>
            <param name="ModelType">The model type to set authorization for.</param>
            <param name="Deployment">The deployment name to use for the model type.</param>
            <remarks>Deployment would look like: gpt-35-turbo-16k</remarks>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.GenerateTextCompletion(SecretText,Codeunit::System#AI#AOAI Operation Response@):Text">
            <summary>
            Generates a text completion given a prompt.
            </summary>
            <param name="Prompt">The prompt to generate completion for.</param>
            <param name="AOAIOperationResponse">The response of the operation upon successful or failure execution.</param>
            <returns>The generated completion.</returns>
            <error>The completion authentication was not configured.</error>
            <error>The completion generation failed with status code %1.</error>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.GenerateTextCompletion(SecretText,Codeunit::System#AI#AOAI Text Completion Params,Codeunit::System#AI#AOAI Operation Response@):Text">
            <summary>
            Generates a completion given a prompt and completion parameters.
            </summary>
            <param name="Prompt">The prompt to generate completion for.</param>
            <param name="AOAICompletionParams">The optional completion parameters to use.</param>
            <param name="AOAIOperationResponse">The response of the operation upon successful or failure execution.</param>
            <returns>The generated completion.</returns>
            <error>The completion authentication was not configured.</error>
            <error>The completion generation failed with status code %1.</error>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.GenerateTextCompletion(SecretText,SecretText,Codeunit::System#AI#AOAI Operation Response@):Text">
            <summary>
            Generates a text completion given a prompt.
            </summary>
            <param name="Metaprompt">The metaprompt to be appended with the prompt.</param>
            <param name="Prompt">The prompt to generate completion for.</param>
            <param name="AOAIOperationResponse">The response of the operation upon successful or failure execution.</param>
            <returns>The generated completion.</returns>
            <error>The completion authentication was not configured.</error>
            <error>The completion generation failed with status code %1.</error>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.GenerateTextCompletion(SecretText,SecretText,Codeunit::System#AI#AOAI Text Completion Params,Codeunit::System#AI#AOAI Operation Response@):Text">
            <summary>
            Generates a completion given a prompt and completion parameters.
            </summary>
            <param name="Metaprompt">The metaprompt to be appended with the prompt.</param>
            <param name="Prompt">The prompt to generate completion for.</param>
            <param name="AOAICompletionParams">The optional completion parameters to use.</param>
            <param name="AOAIOperationResponse">The response of the operation upon successful or failure execution.</param>
            <returns>The generated completion.</returns>
            <error>The completion authentication was not configured.</error>
            <error>The completion generation failed with status code %1.</error>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.GenerateEmbeddings(SecretText,Codeunit::System#AI#AOAI Operation Response@):List of [Decimal]">
            <summary>
            Generates embeddings given an input.
            </summary>
            <param name="Input">The input to generate embedding for.</param>
            <param name="AOAIOperationResponse">The response of the operation upon successful or failure execution.</param>
            <returns>The generated list of embeddings.</returns>
            <error>The embedding authentication was not configured.</error>
            <error>The embedding generation failed with status code %1.</error>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.GenerateChatCompletion(Codeunit::System#AI#AOAI Chat Messages@,Codeunit::System#AI#AOAI Operation Response@)">
            <summary>
            Generates a chat completion given a list of chat messages.
            </summary>
            <param name="AOAIChatMessages">The chat messages to generate completion for.</param>
            <param name="AOAIOperationResponse">The response of the operation upon successful or failure execution.</param>
            <returns>The generated chat completion.</returns>
            <error>The chat completion authentication was not configured.</error>
            <error>The chat completion generation failed with status code %1.</error>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.GenerateChatCompletion(Codeunit::System#AI#AOAI Chat Messages@,Codeunit::System#AI#AOAI Chat Completion Params,Codeunit::System#AI#AOAI Operation Response@)">
            <summary>
            Generates a chat completion given a list of chat messages and completion parameters.
            </summary>
            <param name="AOAIChatMessages">The chat messages to generate completion for.</param>
            <param name="AOAIChatCompletionParams">The optional chat completion parameters to use.</param>
            <param name="AOAIOperationResponse">The response of the operation upon successful or failure execution.</param>
            <returns>The generated chat completion.</returns>
            <error>The chat completion authentication was not configured.</error>
            <error>The chat completion generation failed with status code %1.</error>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.SetCopilotCapability(Enum::System#AI#Copilot Capability)">
            <summary>
            Sets the copilot capability that the API is running for.
            </summary>
            <param name="CopilotCapability">The copilot capability to set.</param>
        </member>
        <member name="M:Codeunit::System#AI#Azure OpenAI.ApproximateTokenCount(Text):Integer">
            <summary>
            Gets the approximate token count for the input.
            </summary>
            <param name="Input">The input to get the approximate token count for.</param>
            <returns>The approximate token count.</returns>
        </member>
        <member name="O:Enum::System#AI#Azure AI Service Type">
            <summary>
            The supported service types for Azure AI.
            </summary>
        </member>
        <member name="E:Enum::System#AI#Azure AI Service Type.Azure OpenAI">
            <summary>
            Azure OpenAI service type.
            </summary>
        </member>
        <member name="E:Enum::System#AI#Azure AI Service Type.Azure Document Intelligence">
            <summary>
            Azure Document Intelligence service type.
            </summary>
        </member>
        <member name="O:Page::System#AI#Copilot AI Capabilities">
            <summary>
            This page is used to set the Copilot settings in the Environment.
            </summary>
        </member>
        <member name="O:Enum::System#AI#Copilot Availability">
            <summary>
            The availability of the Copilot Capability.
            </summary>
        </member>
        <member name="E:Enum::System#AI#Copilot Availability.Preview">
            <summary>
            The Copilot Capability is in preview.
            </summary>
        </member>
        <member name="E:Enum::System#AI#Copilot Availability.Generally Available">
            <summary>
            The Copilot Capability is generally available.
            </summary>
        </member>
        <member name="E:Enum::System#AI#Copilot Availability.Early Preview">
            <summary>
            The Copilot Capability is in early preview.
            </summary>
        </member>
        <member name="O:Page::System#AI#Copilot Capabilities GA">
            <summary>
            Page for listing the Copilot Capabilities which are Generally Available.
            </summary>
        </member>
        <member name="O:Page::System#AI#Copilot Capabilities Preview">
            <summary>
            Page for listing the Copilot Capabilities which are in Preview.
            </summary>
        </member>
        <member name="O:Codeunit::System#AI#Copilot Capability">
            <summary>
            The Copilot Capability codeunit is used to register, modify, and delete Copilot capabilities.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#Copilot Capability.RegisterCapability(Enum::System#AI#Copilot Capability,Text[2048])">
            <summary>
            Register a capability.
            </summary>
            <param name="CopilotCapability">The capability.</param>
            <param name="LearnMoreUrl">The learn more url.</param>
        </member>
        <member name="M:Codeunit::System#AI#Copilot Capability.RegisterCapability(Enum::System#AI#Copilot Capability,Enum::System#AI#Copilot Availability,Text[2048])">
            <summary>
            Register a capability.
            </summary>
            <param name="CopilotCapability">The capability.</param>
            <param name="CopilotAvailability">The availability.</param>
            <param name="LearnMoreUrl">The learn more url.</param>
        </member>
        <member name="M:Codeunit::System#AI#Copilot Capability.ModifyCapability(Enum::System#AI#Copilot Capability,Enum::System#AI#Copilot Availability,Text[2048])">
            <summary>
            Modify an existing capability.
            </summary>
            <param name="CopilotCapability">The capability.</param>
            <param name="CopilotAvailability">The availability.</param>
            <param name="LearnMoreUrl">The learn more url.</param>
        </member>
        <member name="M:Codeunit::System#AI#Copilot Capability.UnregisterCapability(Enum::System#AI#Copilot Capability)">
            <summary>
            Unregister a capability.
            </summary>
            <param name="CopilotCapability">The capability.</param>
        </member>
        <member name="M:Codeunit::System#AI#Copilot Capability.IsCapabilityRegistered(Enum::System#AI#Copilot Capability):Boolean">
            <summary>
            Check if your capability has been registered.
            </summary>
            <param name="CopilotCapability">The capability.</param>
            <returns>True if the capability has been registered.</returns>
            <remarks>Capabilities are tied to the module registering it. Checking for a capability will check if the enum and app id of your module exists.</remarks>
        </member>
        <member name="M:Codeunit::System#AI#Copilot Capability.IsCapabilityRegistered(Enum::System#AI#Copilot Capability,Guid):Boolean">
            <summary>
            Check if a specific capability has been registered.
            </summary>
            <param name="CopilotCapability">The capability.</param>
            <param name="AppId">The app id associated with the capability.</param>
            <returns>True if the capability has been registered.</returns>
            <remarks>Capabilities are tied to the module registering it. Checking for a capability will check if the enum and app id of the module exists.</remarks>
        </member>
        <member name="M:Codeunit::System#AI#Copilot Capability.IsCapabilityActive(Enum::System#AI#Copilot Capability):Boolean">
            <summary>
            Check if your capability is active.
            </summary>
            <param name="CopilotCapability">The capability.</param>
            <returns>True if the capability is active.</returns>
        </member>
        <member name="M:Codeunit::System#AI#Copilot Capability.IsCapabilityActive(Enum::System#AI#Copilot Capability,Guid):Boolean">
            <summary>
            Check if the capability is active.
            </summary>
            <param name="CopilotCapability">The capability.</param>
            <param name="AppId">The app id associated with the capability.</param>
            <returns>True if the capability is active.</returns>
        </member>
        <member name="M:Codeunit::System#AI#Copilot Capability.OnGetRequiredPrivacyNotices(Enum::System#AI#Copilot Capability,Guid,List of [Code]@)">
            <summary>
            Event that is raised to specify if a Copilot capability depends on any additional privacy notices.
            </summary>
            <param name="CopilotCapability">The capability.</param>
            <param name="AppId">The app id associated with the capability.</param>
            <param name="RequiredPrivacyNotices">The list of required privacy notices for the capability to be enabled.</param>
        </member>
        <member name="O:Page::System#AI#Copilot Cap# Early Preview">
            <summary>
            Page for listing the Copilot Capabilities which are in Early Preview.
            </summary>
        </member>
        <member name="O:Page::System#AI#Copilot Deactivate Capability">
            <summary>
            Page for getting the reason for deactivation of a copilot capability.
            </summary>
        </member>
        <member name="O:Page::System#AI#Copilot Not Available">
            <summary>
            Page for when copilot is unavailable due to various reasons. Fx capability disabled, cross region data movement is disabled.
            </summary>
        </member>
        <member name="O:Codeunit::System#AI#Copilot Quota">
            <summary>
            Codeunit that exposes functionality related to Copilot Quota, such as logging quota usage
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#Copilot Quota.TryLogQuotaUsage(Enum::System#AI#Copilot Capability,Integer,Enum::System#AI#Copilot Quota Usage Type):Boolean">
            <summary>
            Try function to log usage of Copilot quota in the system. This function is only available for Microsoft Copilot features.
            </summary>
            <param name="CopilotCapability">The Copilot Capability to log usage for.</param>
            <param name="Usage">The usage to log.</param>
            <param name="CopilotQuotaUsageType">The type of Copilot Quota to log.</param>
        </member>
        <member name="M:Codeunit::System#AI#Copilot Quota.CanConsume:Boolean">
            <summary>
            Checks if the tenant is allowed to consume Copilot quota.
            </summary>
            <returns>True if allowed, false otherwise.</returns>
        </member>
        <member name="O:Enum::System#AI#Copilot Quota Usage Type">
            <summary>
            Enumeration of valid types of usage of the Copilot Quota.
            </summary>
        </member>
        <member name="E:Enum::System#AI#Copilot Quota Usage Type.Generative AI Answer">
            <summary>
            Represents a Generative AI Answer usage type.
            </summary>
        </member>
        <member name="E:Enum::System#AI#Copilot Quota Usage Type.Autonomous Action">
            <summary>
            Represents an Autonomous Action usage type.
            </summary>
        </member>
        <member name="O:Table::System#AI#Copilot Settings">
            <summary>
            Table to keep track of each Copilot Capability settings.
            </summary>
        </member>
        <member name="O:Enum::System#AI#Copilot Status">
            <summary>
            The status of the Copilot Capability.
            </summary>
        </member>
        <member name="E:Enum::System#AI#Copilot Status.Active">
            <summary>
            The Copilot is active.
            </summary>
        </member>
        <member name="E:Enum::System#AI#Copilot Status.Inactive">
            <summary>
            The Copilot is inactive.
            </summary>
        </member>
        <member name="O:Codeunit::System#AI#Copilot Telemetry">
            <summary>
            This codeunit is called from Platform.
            </summary>
        </member>
        <member name="O:Codeunit::System#AI#AOAI Chat Completion Params">
            <summary>
            Represents the Chat Completion parameters used by the API.
            See more details at https://aka.ms/AAlrz36.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.GetTemperature:Decimal">
            <summary>
            What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <returns>The sampling temperature being used.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.GetMaxTokens:Integer">
            <summary>
            Gets the maximum number of tokens allowed for the generated answer.
            </summary>
            <returns>The maximum number of tokens allowed for the generated answer.</returns>
            <remarks>0 or less uses the API default.</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.GetMaxHistory:Integer">
            <summary>
            Gets the maximum number of messages to send back as the message history.
            </summary>
            <returns>The maximum number of messages to send.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.GetPresencePenalty:Decimal">
            <summary>
            Gets the presence penalty value.
            </summary>
            <returns>The presence penalty value.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.GetFrequencyPenalty:Decimal">
            <summary>
            Gets the frequency penalty value.
            </summary>
            <returns>The frequency penalty value.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.SetTemperature(Decimal)">
            <summary>
            Sets the sampling temperature to use, between 0 and 2. A higher temperature increases the likelihood that the next most probable token will not be selected. When requesting structured data, set the temperature to 0. For human sounding speech, 0.7 is a typical value
            </summary>
            <param name="NewTemperature">The new sampling temperature to use.</param>
            <error>Temperature must be between 0.0 and 2.0.</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.SetMaxTokens(Integer)">
            <summary>
            Sets the maximum number of tokens allowed for the generated answer. The maximum number of tokens allowed for the generated answer. By default, the number of tokens the model can return will be (4096 - prompt tokens).
            </summary>
            <param name="NewMaxTokens">The new maximum number of tokens allowed for the generated answer.</param>
            <remarks>If the prompt's tokens + max_tokens exceeds the model's context length, the generate request will return an error.</remarks>
            <remarks>0 or less uses the API default.</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.SetJsonMode(Boolean)">
            <summary>
            Sets if the model should return a valid JSON object as a chat completion.
            </summary>
            <param name="NewJsonMode">The new Json mode for the chat completion: true or false.</param>
            <remarks>Default is false.</remarks>
            <remarks>When true, the model will return a valid JSON object as a chat completion. Including guidance to the model that it should produce JSON as part of the messages conversation is required</remarks>
            <remarks>When true, the word 'json' must be included in at least one message.</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.SetMaxHistory(Integer)">
            <summary>
            Sets the maximum number of messages to send back as the message history.
            </summary>
            <param name="NewMaxHistory">The new maximum number of messages to send.</param>
            <error>Max history cannot be less than 1.</error>
            <remarks>The default is 10 messages including the primary System Message.</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.SetPresencePenalty(Decimal)">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.
            </summary>
            <param name="NewPresencePenalty">The new presence penalty value.</param>
            <error>Presence penalty must be between -2.0 and 2.0.</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.SetFrequencyPenalty(Decimal)">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
            <param name="NewFrequencyPenalty">The new frequency penalty value.</param>
            <error>Frequency penalty must be between -2.0 and 2.0.</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Completion Params.AddChatCompletionsParametersToPayload(JsonObject@)">
            <summary>
            Adds the Chat Completion parameters to the payload.
            </summary>
            <param name="Payload">JsonObject to add parameters to.</param>
        </member>
        <member name="O:Codeunit::System#AI#AOAI Chat Messages">
            <summary>
            Helper functions for the AOAI Chat Message table.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.SetPrimarySystemMessage(SecretText)">
            <summary>
            Sets the system message which is always at the top of the chat messages history provided to the model.
            </summary>
            <param name="Message">The primary system message.</param>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.AddSystemMessage(Text)">
            <summary>
            Adds a system message to the chat messages history.
            </summary>
            <param name="NewMessage">The message to add.</param>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.AddUserMessage(Text)">
            <summary>
            Adds a user message to the chat messages history.
            </summary>
            <param name="NewMessage">The message to add.</param>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.AddUserMessage(Text,Text[2048])">
            <summary>
            Adds a user message to the chat messages history.
            </summary>
            <param name="NewMessage">The message to add.</param>
            <param name="NewName">The name of the user.</param>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.AddAssistantMessage(Text)">
            <summary>
            Adds a assistant message to the chat messages history.
            </summary>
            <param name="NewMessage">The message to add.</param>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.AddToolCalls(JsonArray)">
            <summary>
            Adds a assistant message containing the tool calls returned from the model to the chat messages history.
            </summary>
            <param name="ToolCalls">The tool calls to add.</param>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.AddToolMessage(Text,Text,Text)">
            <summary>
            Adds a tool result to the chat messages history.
            </summary>
            <param name="ToolCallId">The id of the tool call.</param>
            <param name="FunctionName">The name of the called function.</param>
            <param name="FunctionResult">The result of the tool call.</param>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.ModifyMessage(Integer,Text,Enum::System#AI#AOAI Chat Roles,Text[2048])">
            <summary>
            Modifies a message in the chat messages history.
            </summary>
            <param name="Id">Id of the message.</param>
            <param name="NewMessage">The new message.</param>
            <param name="NewRole">The new role.</param>
            <param name="NewName">The new name.</param>
            <error>Message id does not exist.</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.DeleteMessage(Integer)">
            <summary>
            Deletes a message from the chat messages history.
            </summary>
            <param name="Id">Id of the message.</param>
            <error>Message id does not exist.</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetHistory:List of [Text]">
            <summary>
            Gets the history of chat messages.
            </summary>
            <returns>List of chat messages.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetHistoryNames:List of [Text]">
            <summary>
            Gets the history names of chat messages.
            </summary>
            <returns>List of names of chat messages.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetHistoryRoles:List of [AOAI Chat Roles]">
            <summary>
            Gets the history roles of chat messages.
            </summary>
            <returns>List of roles of chat messages.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetLastMessage:Text">
            <summary>
            Gets the last chat message.
            </summary>
            <returns>The last chat message.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetLastRole:Enum::System#AI#AOAI Chat Roles">
            <summary>
            Gets the last chat message role.
            </summary>
            <returns>The last chat message role.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetLastName:Text[2048]">
            <summary>
            Gets the last chat message name.
            </summary>
            <returns>The last chat message name.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetLastToolCalls:JsonArray">
            <summary>
            Gets a copy of the last chat message tool calls array.
            </summary>
            <returns>The last tool calls array.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.SetHistoryLength(Integer)">
            <summary>
            Set the length of history that is used by the model.
            </summary>
            <param name="NewLength">The new length.</param>
            <error>History length must be greater than 0.</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.AssembleHistory(Integer@,Integer@):JsonArray">
            <summary>
            Prepares the history of messages to be sent to the deployment model.
            </summary>
            <param name="SystemMessageTokenCount">The number tokens used by the primary system messages.</param>
            <param name="MessagesTokenCount">The number tokens used by all other messages.</param>
            <returns>History of messages in a JsonArray.</returns>
            <remarks>Use this after adding messages, to construct a json array of all messages.</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetHistoryTokenCount:Integer">
            <summary>
            Gets the number of tokens used by the primary system messages and all other messages.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.AddTool(JsonObject)">
            <summary>
            Appends a Tool to the payload.
            </summary>
            <param name="NewTool">The Tool to be added to the payload.</param>
            <remarks>See more details here: https://go.microsoft.com/fwlink/?linkid=2254538</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.ModifyTool(Integer,JsonObject)">
            <summary>
            Modifies a Tool in the list of Tool.
            </summary>
            <param name="Id">Id of the message.</param>
            <param name="NewTool">The new Tool.</param>
            <error>Message id does not exist.</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.DeleteTool(Integer)">
            <summary>
            Deletes a Tool from the list of Tool.
            </summary>
            <param name="Id">Id of the Tool.</param>
            <error>Message id does not exist.</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.AddTool(Interface::System#AI#AOAI Function)">
            <summary>
            Adds a function to the payload.
            </summary>
            <param name="Function">The function to be added</param>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.DeleteFunctionTool(Text):Boolean">
            <summary>
            Deletes a Function from the list of Functions.
            </summary>
            <param name="Name">Name of the Function.</param>
            <error>Message id does not exist.</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.ClearTools">
            <summary>
            Remove all tools.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetFunctionTool(Text,Interface::System#AI#AOAI Function@):Boolean">
            <summary>
            Gets the function associated with the specified name.
            </summary>
            <param name="Name">Name of the function to get.</param>
            <returns>The function codeunit.</returns>
            <error>Tool not found.</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetFunctionTools:List of [Text]">
            <summary>
            Gets the list of names of Function Tools that have been added.
            </summary>
            <returns>List of function tool names.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetTools:List of [JsonObject]">
            <summary>
            Gets the list of Tools.
            </summary>
            <returns>List of Tools.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.ToolsExists:Boolean">
            <summary>
            Checks if at least one Tools exists in the list.
            </summary>
            <returns>True if Tools exists, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.SetAddToolsToPayload(Boolean)">
            <summary>
            Sets the Tools to be added to the payload.
            </summary>
            <param name="AddToolsToPayload">True if Tools is to be added to the payload, false otherwise.</param>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.SetToolChoice(Text)">
            <summary>
            Sets the Tool choice, which allow model to determine how Tools should be called.
            </summary>
            <param name="Toolchoice">The Tool choice parameter. </param>
            <remarks>See more details here: https://go.microsoft.com/fwlink/?linkid=2254538</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.SetFunctionAsToolChoice(Text)">
            <summary>
            Sets the function as the tool choice to be called.
            </summary>
            <param name="FunctionName">The function name parameter. </param>
            <remarks>See more details here: https://go.microsoft.com/fwlink/?linkid=2254538</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.SetFunctionAsToolChoice(Interface::System#AI#AOAI Function)">
            <summary>
            Sets the function as the tool choice to be called.
            </summary>
            <param name="Function">The function codeunit.</param>
            <remarks>See more details here: https://go.microsoft.com/fwlink/?linkid=2254538</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetToolChoice:Text">
            <summary>
            Gets the Tool choice parameter.
            </summary>
            <returns>The Tool choice parameter.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.SetToolInvokePreference(Enum::System#AI#AOAI Tool Invoke Preference)">
            <summary>
            Sets the tool invocation preference, controls how a tool calls response should be handled.
            </summary>
            <remarks>The default behavior is to execute the tools and append the results to the chat history.</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.GetToolInvokePreference:Enum::System#AI#AOAI Tool Invoke Preference">
            <summary>
            Gets the tool invocation preference, controls how a tool calls response should be handled.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Chat Messages.AssembleTools:JsonArray">
            <summary>
            Prepares the Tools to be sent to the deployment model.
            </summary>
            <returns>Tools in a JsonArray.</returns>
            <remarks>Use this after adding Tools, to construct a json array of all Tools.</remarks>
        </member>
        <member name="O:Enum::System#AI#AOAI Chat Roles">
            <summary>
            The chat roles that are available for Chat Completion.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Chat Roles.User">
            <summary>
            User chat role messages are the messages that the user sends to the model.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Chat Roles.System">
            <summary>
            System chat role messages provides the initial instructions to the model.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Chat Roles.Assistant">
            <summary>
            Assistant chat role messages are the messages that the model sends to the user.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Chat Roles.Tool">
            <summary>
            Tool chat role messages provides the results of tool calling to the model.
            </summary>
        </member>
        <member name="O:Enum::System#AI#AOAI Tool Invoke Preference">
            <summary>
            The tool invocation preference for tool call responses.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Tool Invoke Preference.Invoke Tools Only">
            <summary>
            Only invoke the tool calls returned from the LLM, do not send the results back to the LLM.
            Appends the tool results to the chat history.
            </summary>
            <remarks>This is the default preference.</remarks>
        </member>
        <member name="E:Enum::System#AI#AOAI Tool Invoke Preference.Manual">
            <summary>
            Require manual invocation of the tool calls (i.e. the Copilot toolkit will not invoke the tools).
            Does not append the tool results to the chat history.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Tool Invoke Preference.Automatic">
            <summary>
            Invoke the tool calls returned from the LLM, and send them back to the LLM until no more tool calls are returned.
            Appends all the tool results to the chat history.
            </summary>
        </member>
        <member name="O:Codeunit::System#AI#AOAI Function Response">
            <summary>
            The status and result of an functions.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Function Response.IsSuccess:Boolean">
            <summary>
            Get whether the function call was successful.
            </summary>
            <returns>True if the call was successful, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Function Response.GetStatus:Enum::System#AI#AOAI Function Response Status">
            <summary>
            Gets the function response status.
            </summary>
            <returns>The function response status</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Function Response.GetResult:Variant">
            <summary>
            Get the return value of the function that was called.
            </summary>
            <returns>The return value from the function</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Function Response.GetArguments:JsonObject">
            <summary>
            Get the arguments for the function call.
            </summary>
            <returns>The arguments for the function</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Function Response.GetError:Text">
            <summary>
            Get the error message from the function that was called.
            </summary>
            <returns>The error message from the function.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Function Response.GetFunctionName:Text">
            <summary>
            Get the name of the function that was called.
            </summary>
            <returns>The name of the function that was called.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Function Response.GetFunctionId:Text">
            <summary>
            Get the id of the function that was called.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Function Response.GetErrorCallstack:Text">
            <summary>
            Get the error call stack from the function that was called.
            </summary>
            <returns>The error call stack from the function.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Function Response.AppendResultToChatMessages(Codeunit::System#AI#AOAI Chat Messages@)">
            <summary>
            Appends the function result to the provided AOAIChatMessages instance.
            </summary>
            <param name="AOAIChatMessages">The chat messages instance to append the result to.</param>
        </member>
        <member name="O:Enum::System#AI#AOAI Function Response Status">
            <summary>
            The status of the function response.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Function Response Status.Not Invoked">
            <summary>
            The function has not been invoked.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Function Response Status.Invoke Success">
            <summary>
            The function was invoked and completed without error.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Function Response Status.Invoke Error">
            <summary>
            The function was invoked and completed with error.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Function Response Status.Function Not Found">
            <summary>
            The requested function could not be found.
            </summary>
        </member>
        <member name="E:Enum::System#AI#AOAI Function Response Status.Function Invalid">
            <summary>
            The requested function was invalid.
            </summary>
        </member>
        <member name="O:Codeunit::System#AI#AOAI Operation Response">
            <summary>
            The status and result of an operation.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Operation Response.IsSuccess:Boolean">
            <summary>
            Check whether the operation was successful.
            </summary>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Operation Response.GetStatusCode:Integer">
            <summary>
            Get the status code of the operation.
            </summary>
            <returns>The status code of the operation.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Operation Response.GetResult:Text">
            <summary>
            Get the result of the operation.
            </summary>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Operation Response.GetError:Text">
            <summary>
            Get the error text of the operation.
            </summary>
            <returns>The error text of the operation.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Operation Response.IsFunctionCall:Boolean">
            <summary>
            Get whether the operation was a function call.
            </summary>
            <returns>True if it was a function call, false otherwise.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Operation Response.HasFunctionResponsesByName(Text):Boolean">
            <summary>
            Get whether there are any function responses for a given function name.
            </summary>
            <param name="FunctionName">The case sensitive function name to search for.</param>
            <returns>True if any function responses were found</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Operation Response.TryGetFunctionReponsesByName(Text,List of [AOAI Function Response]@):Boolean">
            <summary>
            Get all the function responses for a specified function name.
            </summary>
            <param name="FunctionName">The case sensitive function name to search for.</param>
            <param name="MatchedAOAIFunctionResponses">The function responses that match the given function name</param>
            <returns>True if any function responses were found</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Operation Response.GetFunctionResponse:Codeunit::System#AI#AOAI Function Response">
            <summary>
            Get the function response codeunit which contains the response details.
            </summary>
            <returns>The codeunit which contains response details for the function call.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Operation Response.AppendFunctionResponsesToChatMessages(Codeunit::System#AI#AOAI Chat Messages@)">
            <summary>
            Appends all of the successful function results to the provided AOAIChatMessages instance.
            </summary>
            <remarks>The last chat message in the history must contain the tool calls from this operation.</remarks>
            <param name="AOAIChatMessages">The chat messages instance to append the result to.</param>
        </member>
        <member name="O:Codeunit::System#AI#AOAI Text Completion Params">
            <summary>
            Represents the Completion parameters used by the API.
            See more details at https://aka.ms/AAlsi39.
            </summary>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.GetMaxTokens:Integer">
            <summary>
            Get the maximum number of tokens to generate in the completion.
            </summary>
            <returns>The maximum number of tokens to generate in the completion.</returns>
            <remarks>0 or less uses the API default.</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.GetTemperature:Decimal">
            <summary>
            Get the sampling temperature to use.
            </summary>
            <returns>The sampling temperature to use.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.GetTopP:Decimal">
            <summary>
            Get the nucleus sampling to use.
            </summary>
            <returns>The nucleus sampling to use.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.GetSuffix:Text">
            <summary>
            Get the suffix that comes after a completion of inserted text.
            </summary>
            <returns>The suffix that comes after a completion of inserted text.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.GetPresencePenalty:Decimal">
            <summary>
            Get the presence penalty to use.
            </summary>
            <returns>The presence penalty to use.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.GetFrequencyPenalty:Decimal">
            <summary>
            Get the frequency penalty to use.
            </summary>
            <returns>The frequency penalty to use.</returns>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.SetMaxTokens(Integer)">
            <summary>
            The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens can't exceed the model's context length. Most models have a context length of 2048 tokens (except for the newest models, which support 4096).
            </summary>
            <param name="NewMaxTokens">The new maximum number of tokens to generate in the completion.</param>
            <remarks>If the prompt's tokens + max_tokens exceeds the model's context length, the generate request will return an error.</remarks>
            <remarks>The default value is 256 however a value of 0 or less will use the deployment model's default.</remarks>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.SetTemperature(Decimal)">
            <summary>
            Sets the sampling temperature to use, between 0 and 2. A higher temperature increases the likelihood that the next most probable token will not be selected. When requesting structured data, set the temperature to 0. For human sounding speech, 0.7 is a typical value
            </summary>
            <param name="NewTemperature">The new sampling temperature to use.</param>
            <error>Temperature must be between 0.0 and 2.0</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.SetTopP(Decimal)">
            <summary>
            An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both.
            </summary>
            <param name="NewTopP">New nucleus sampling to use</param>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.SetSuffix(Text)">
            <summary>
            The suffix that comes after a completion of inserted text.
            </summary>
            <param name="NewSuffix">The new suffix that comes after a completion of inserted text.</param>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.SetPresencePenalty(Decimal)">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.
            </summary>
            <param name="NewPresencePenalty">The new presence penalty to use.</param>
            <error>Presence penalty must be between -2.0 and 2.0</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.SetFrequencyPenalty(Decimal)">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
            <param name="NewFrequencyPenalty">The new frequency penalty to use.</param>
            <error>Frequency penalty must be between -2.0 and 2.0</error>
        </member>
        <member name="M:Codeunit::System#AI#AOAI Text Completion Params.AddCompletionsParametersToPayload(JsonObject@)">
            <summary>
            Add the completion parameters to the payload.
            </summary>
            <param name="Payload">The JsonObject payload to add the completion parameters to.</param>
        </member>
        <member name="O:Interface::System#AI#AI Service Name">
            <summary>
            Interface for providing naming information for a given AI service.
            </summary>
        </member>
        <member name="M:Interface::System#AI#AI Service Name.GetServiceName:Text[250]">
            <summary>
            Get the name of the service.
            </summary>
            <returns>The name of the service.</returns>
        </member>
        <member name="M:Interface::System#AI#AI Service Name.GetServiceId:Code[50]">
            <summary>
            Get the id of the service. Will often be the service name in Code form.
            </summary>
            <returns>The id of the service.</returns>
        </member>
        <member name="M:Interface::System#AI#AOAI Function.GetPrompt:JsonObject">
            <summary>
            Get the prompt for the Function. Function prompt object describes the Function and the should contain the following fields:
                - Type: The name of the Function, currently only function type is supported. For functions following fields are allowed:
                -- Name: The name of the Function. (Required)
                -- Description: The description of the Function. (Optional)
                -- Parameters: The parameters of the Function. (Required)
            More details can be found here: https://go.microsoft.com/fwlink/?linkid=2254538
            </summary>
        </member>
        <member name="M:Interface::System#AI#AOAI Function.Execute(JsonObject):Variant">
            <summary>
            This function is invoked as a response from Azure Open AI.
             -Arguments: The expected parameters of the Function defined.
            The function returns a variant, and it's up to the implementation to decide what to return.
            </summary>
        </member>
        <member name="M:Interface::System#AI#AOAI Function.GetName:Text">
            <summary>
            Get the name of the function.
            </summary>
            <remarks>This needs to match the function name in GetPrompt.</remarks>
        </member>
        <member name="O:Codeunit::System#Telemetry#Telemetry Custom Dimensions">
            <summary>
            Provides functionality for adding common custom dimensions to telemetry.
            </summary>
            <remarks>This codeunit is only intended to be used from subscribers of <see cref="OnAddCommonCustomDimensions"/> event.</remarks>
        </member>
        <member name="M:Codeunit::System#Telemetry#Telemetry Custom Dimensions.AddCommonCustomDimension(Text,Text)">
            <summary>
            Add a custom dimension for every telemetry message. Is used in conjunction with <see cref="OnAddCommonCustomDimensions"/>
            </summary>
            <param name="CustomDimensionName">The name of the custom dimension.</param>
            <param name="CustomDimensionValue">The value of the custom dimension.</param>
            <remarks>Only system metadata classified information should be added here as these custom dimensions will be used for all telemetry messages.</remarks>
        </member>
        <member name="M:Codeunit::System#Telemetry#Telemetry Custom Dimensions.OnAddCommonCustomDimensions">
            <summary>
            Allows to provide additional custom dimensions for every telemetry message. Is used in conjunction with <see cref="AddCommonCustomDimensions"/>.
            </summary>
            <remarks>Global language is set to default for the subscribers of this event.</remarks>
            <example>
            [EventSubscriber(ObjectType::Codeunit, Codeunit::"Telemetry Custom Dimensions", 'OnAddCommonCustomDimensions', '', true, true)]
            local procedure OnAddCommonCustomDimensions(var Sender: Codeunit "Telemetry Custom Dimensions")
            begin
                Sender.AddCommonCustomDimension('CommonCustomDimension', 'Some info');
            end;
            </example>
        </member>
        <member name="O:Codeunit::System#Telemetry#Feature Telemetry">
            <summary>
            Provides functionality for emitting telemetry in a universal format. Only system metadata is to be emitted through this codeunit.
            </summary>
            <remarks>
            Every publisher needs to have an implementation of the "Telemetry Logger" interface and a subscriber
            to "Telemetry Loggers".OnRegisterTelemetryLogger event in one of their apps in order for this codeunit
            to work as expected (see "System Telemetry Logger" codeunit).
            </remarks>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Telemetry.LogUsage(Text,Text,Text)">
            <summary>
            Sends telemetry about feature usage.
            </summary>
            <param name="EventId">A unique ID of the event.</param>
            <param name="FeatureName">The name of the feature.</param>
            <param name="EventName">The name of the event.</param>
            <example>FeatureTelemetry.LogUsage('0000XYZ', 'Emailing', 'Email sent');</example>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Telemetry.LogUsage(Text,Text,Text,Dictionary of [Text,Text])">
            <summary>
            Sends telemetry about feature usage.
            </summary>
            <param name="EventId">A unique ID of the event.</param>
            <param name="FeatureName">The name of the feature.</param>
            <param name="EventName">The name of the event.</param>
            <param name="CustomDimensions">A dictionary containing additional information about the event.</param>
            <remarks>Custom dimensions often contain information translated in different languages. It is a common practice to send telemetry in the default language (see example).</remarks>
            <example>
            TranslationHelper.SetGlobalLanguageToDefault();
            CustomDimensions.Add('JobQueueObjectType', Format(JobQueueEntry."Object Type to Run"));
            CustomDimensions.Add('JobQueueObjectId', Format(JobQueueEntry."Object ID to Run"));
            FeatureTelemetry.LogUsage('0000XYZ', 'Job Queue', 'Job executed', CustomDimensions);
            TranslationHelper.RestoreGlobalLanguage();
            </example>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Telemetry.LogUsage(Text,Text,Text,Enum::System#Telemetry#AL Telemetry Scope,Dictionary of [Text,Text])">
            <summary>
            Sends telemetry about feature usage (with the capability to send to ISVs).
            </summary>
            <param name="EventId">A unique ID of the event.</param>
            <param name="FeatureName">The name of the feature.</param>
            <param name="EventName">The name of the event.</param>
            <param name="ALTelemetryScope">The telemetry scope of the message.</param>
            <param name="CustomDimensions">A dictionary containing additional information about the event.</param>
            <remarks>Custom dimensions often contain information translated in different languages. It is a common practice to send telemetry in the default language (see example).</remarks>
            <example>
            TranslationHelper.SetGlobalLanguageToDefault();
            CustomDimensions.Add('JobQueueObjectType', Format(JobQueueEntry."Object Type to Run"));
            CustomDimensions.Add('JobQueueObjectId', Format(JobQueueEntry."Object ID to Run"));
            FeatureTelemetry.LogUsage('0000XYZ', 'Job Queue', 'Job executed', CustomDimensions);
            TranslationHelper.RestoreGlobalLanguage();
            </example>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Telemetry.LogError(Text,Text,Text,Text)">
            <summary>
            Sends telemetry about errors happening during feature usage.
            </summary>
            <param name="EventId">A unique ID of the error.</param>
            <param name="FeatureName">The name of the feature.</param>
            <param name="EventName">The name of the event.</param>
            <param name="ErrorText">The text of the error.</param>
            <example>
            if not Success then
                FeatureTelemetry.LogError('0000XYZ', 'Retention policies', 'Applying a policy', GetLastErrorText(true));
            </example>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Telemetry.LogError(Text,Text,Text,Text,Text)">
            <summary>
            Sends telemetry about errors happening during feature usage.
            </summary>
            <param name="EventId">A unique ID of the error.</param>
            <param name="FeatureName">The name of the feature.</param>
            <param name="EventName">The name of the event.</param>
            <param name="ErrorText">The text of the error.</param>
            <param name="ErrorCallStack">The error call stack.</param>
            <example>
            if not Success then
                FeatureTelemetry.LogError('0000XYZ', 'Configuration packages', 'Importing a package', GetLastErrorText(true), GetLastErrorCallStack());
            </example>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Telemetry.LogError(Text,Text,Text,Text,Text,Dictionary of [Text,Text])">
            <summary>
            Sends telemetry about errors happening during feature usage.
            </summary>
            <param name="EventId">A unique ID of the error.</param>
            <param name="FeatureName">The name of the feature.</param>
            <param name="EventName">The name of the event.</param>
            <param name="ErrorText">The text of the error.</param>
            <param name="ErrorCallStack">The error call stack.</param>
            <param name="CustomDimensions">A dictionary containing additional information about the error.</param>
            <remarks>Custom dimensions often contain infromation translated in different languages. It is a common practice to send telemetry in the default language (see example).</remarks>
            <example>
            if not Success then begin
                TranslationHelper.SetGlobalLanguageToDefault();
                CustomDimensions.Add('UpdateEntity', Format(AzureADUserUpdateBuffer."Update Entity"));
                FeatureTelemetry.LogError('0000XYZ', 'User management', 'Syncing users with M365', GetLastErrorText(true), GetLastErrorCallStack(), CustomDimensions);
                TranslationHelper.RestoreGlobalLanguage();
            end;
            </example>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Telemetry.LogError(Text,Text,Text,Text,Text,Enum::System#Telemetry#AL Telemetry Scope,Dictionary of [Text,Text])">
            <summary>
            Sends telemetry about errors happening during feature usage (with the capability to send to ISVs).
            </summary>
            <param name="EventId">A unique ID of the error.</param>
            <param name="FeatureName">The name of the feature.</param>
            <param name="EventName">The name of the event.</param>
            <param name="ErrorText">The text of the error.</param>
            <param name="ErrorCallStack">The error call stack.</param>
            <param name="ALTelemetryScope">The telemetry scope of the message.</param>
            <param name="CustomDimensions">A dictionary containing additional information about the error.</param>
            <remarks>Custom dimensions often contain information translated in different languages. It is a common practice to send telemetry in the default language (see example).</remarks>
            <example>
            if not Success then begin
                TranslationHelper.SetGlobalLanguageToDefault();
                CustomDimensions.Add('UpdateEntity', Format(AzureADUserUpdateBuffer."Update Entity"));
                FeatureTelemetry.LogError('0000XYZ', 'User management', 'Syncing users with M365', GetLastErrorText(true), GetLastErrorCallStack(), CustomDimensions);
                TranslationHelper.RestoreGlobalLanguage();
            end;
            </example>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Telemetry.LogUptake(Text,Text,Enum::System#Telemetry#Feature Uptake Status)">
            <summary>
            Sends telemetry about feature uptake.
            </summary>
            <param name="EventId">A unique ID of the event.</param>
            <param name="FeatureName">The name of the feature.</param>
            <param name="FeatureUptakeStatus">The new status of the feature uptake.</param>
            <remarks>
            Expected feature uptake transitions:
            "Discovered" -> "Set up" -> "Used" (and only in this order; for example, if for a given feature the first status was logged as "Set up", no telemetry will be emitted)
            *Any state* -> "Undiscovered" (to reset the feature uptake status)
            </remarks>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Telemetry.LogUptake(Text,Text,Enum::System#Telemetry#Feature Uptake Status,Dictionary of [Text,Text])">
            <summary>
            Sends telemetry about feature uptake.
            </summary>
            <param name="EventId">A unique ID of the event.</param>
            <param name="FeatureName">The name of the feature.</param>
            <param name="FeatureUptakeStatus">The new status of the feature uptake.</param>
            <param name="CustomDimensions">A dictionary containing additional information about the event.</param>
            <remarks>
            Expected feature uptake transitions:
            "Discovered" -> "Set up" -> "Used" (and only in this order; for example, if for a given feature the first status was logged as "Set up", no telemetry will be emitted)
            *Any state* -> "Undiscovered" (to reset the feature uptake status)
            </remarks>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Telemetry.LogUptake(Text,Text,Enum::System#Telemetry#Feature Uptake Status,Boolean)">
            <summary>
            Sends telemetry about feature uptake.
            </summary>
            <param name="EventId">A unique ID of the event.</param>
            <param name="FeatureName">The name of the feature.</param>
            <param name="FeatureUptakeStatus">The new status of the feature uptake.</param>
            <param name="IsPerUser">Specifies if the feature is targeted to be uptaken once for the tenant or uptaken individually by different users.</param>
            <remarks>
            Expected feature uptake transitions:
            "Discovered" -> "Set up" -> "Used" (and only in this order; for example, if for a given feature the first status was logged as "Set up", no telemetry will be emitted)
            *Any state* -> "Undiscovered" (to reset the feature uptake status)
            </remarks>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Telemetry.LogUptake(Text,Text,Enum::System#Telemetry#Feature Uptake Status,Boolean,Dictionary of [Text,Text])">
            <summary>
            Sends telemetry about feature uptake.
            </summary>
            <param name="EventId">A unique ID of the event.</param>
            <param name="FeatureName">The name of the feature.</param>
            <param name="FeatureUptakeStatus">The new status of the feature uptake.</param>
            <param name="IsPerUser">Specifies if the feature is targeted to be uptaken once for the tenant or uptaken individually by different users.</param>
            <param name="CustomDimensions">A dictionary containing additional information about the event.</param>
            <remarks>
            Expected feature uptake transitions:
            "Discovered" -> "Set up" -> "Used" (and only in this order; for example, if for a given feature the first status was logged as "Set up", no telemetry will be emitted)
            *Any state* -> "Undiscovered" (to reset the feature uptake status)
            </remarks>
        </member>
        <member name="O:Enum::System#Telemetry#Feature Uptake Status">
            <summary>
            Specifies the uptake status of an application feature.
            </summary>
        </member>
        <member name="E:Enum::System#Telemetry#Feature Uptake Status.Undiscovered">
            <summary>
            The feature has not been discovered.
            </summary>
        </member>
        <member name="E:Enum::System#Telemetry#Feature Uptake Status.Discovered">
            <summary>
            The feature has been discovered.
            </summary>
        </member>
        <member name="E:Enum::System#Telemetry#Feature Uptake Status.Set up">
            <summary>
            The feature has been set up.
            </summary>
        </member>
        <member name="E:Enum::System#Telemetry#Feature Uptake Status.Used">
            <summary>
            The feature has been used.
            </summary>
        </member>
        <member name="M:Codeunit::System#Telemetry#Feature Uptake Status Impl#.WaitForStartedUpdateFeatureUptakeSession">
            <summary>
            The updates to Feature Uptake states must be done in a separate session (e. g. to not interfere with subsequent Page.RunModal() calls).
            Normally we don't need to wait for this separate session to finish, as feature uptake states are expected to not change rapidly, and it only takes a few milliseconds for the session to complete.
            But if the feature registers uptake states one right after another, then the session may not have enough time to start and acquire a lock on the "Feature Uptake" table by the time the next uptake state is registered.
            For such cases, we can wait for this previous session to finish.
            </summary>
            <remarks>We will only ever wait when feature uptake states a registered for the first time, so there is no persistent performance penalty to this.</remarks>
            <remarks>It is not hard requirement to actually wait for the session to finish, we only need to wait long enough, so that it calls FeatureUptake.LockTable().</remarks>
        </member>
        <member name="O:Enum::System#Telemetry#AL Telemetry Scope">
            <summary>
            Represents the emission scope of the telemetry signal.
            An wrapper in AL to provide the capability to send Telemetries to ISVs.
            </summary>
        </member>
        <member name="O:Codeunit::System#Telemetry#Telemetry">
             <summary>
             A wrapper on top of Session.LogMessage that allows for having additional common custom dimensions emitted with every message.
             </summary>
             <remarks>
             Every publisher needs to have an implementation of the "Telemetry Logger" interface and a subscriber
             to "Telemetry Loggers".OnRegisterTelemetryLogger event in one of their apps in order for this codeunit
             to work as expected (see "System Telemetry Logger" codeunit or example below).
             </remarks>
             <example>
             codeunit 50000 "PTE Telemetry Logger" implements "Telemetry Logger"
             {
                Access = Internal;
            
                procedure LogMessage(EventId: Text; Message: Text; Verbosity: Verbosity; DataClassification: DataClassification; TelemetryScope: TelemetryScope; CustomDimensions: Dictionary of [Text, Text])
                begin
                    Session.LogMessage(EventId, Message, Verbosity, DataClassification, TelemetryScope, CustomDimensions);
                end;
            
                // For the functionality to behave as expected, there should be exactly one implementation of the "Telemetry Logger" interface registered per app publisher
                [EventSubscriber(ObjectType::Codeunit, Codeunit::"Telemetry Loggers", 'OnRegisterTelemetryLogger', '', true, true)]
                local procedure OnRegisterTelemetryLogger(var Sender: Codeunit "Telemetry Loggers")
                var
                    TelemetryLogger: Codeunit "PTE Telemetry Logger";
                begin
                    Sender.Register(TelemetryLogger);
                end;
             }
             </example>
        </member>
        <member name="M:Codeunit::System#Telemetry#Telemetry.LogMessage(Text,Text,Verbosity,DataClassification,TelemetryScope,Dictionary of [Text,Text])">
            <summary>
            Logs a telemetry message.
            </summary>
            <param name="EventId">A unique identifier of the telemetry message.</param>
            <param name="Message">The main content of the telemetry message (typically contains text that can be easily read by a person).</param>
            <param name="Verbosity">The verbosity of the telemetry message.</param>
            <param name="DataClassification">The data classification of the telemetry message.</param>
            <param name="TelemetryScope">The telemetry scope of the message.</param>
            <param name="CustomDimensions">Any additional information provided together with the telemetry message.</param>
        </member>
        <member name="M:Codeunit::System#Telemetry#Telemetry.LogMessage(Text,Text,Verbosity,DataClassification,TelemetryScope)">
            <summary>
            Logs a telemetry message.
            </summary>
            <param name="EventId">A unique identifier of the telemetry message.</param>
            <param name="Message">The main content of the telemetry message (typically contains text that can be easily read by a person).</param>
            <param name="Verbosity">The verbosity of the telemetry message.</param>
            <param name="DataClassification">The data classification of the telemetry message.</param>
            <param name="TelemetryScope">The telemetry scope of the message.</param>
        </member>
        <member name="M:Codeunit::System#Telemetry#Telemetry.LogMessage(Text,Text,Verbosity,DataClassification)">
            <summary>
            Logs a telemetry message.
            </summary>
            <param name="EventId">A unique identifier of the telemetry message.</param>
            <param name="Message">The main content of the telemetry message (typically contains text that can be easily read by a person).</param>
            <param name="Verbosity">The verbosity of the telemetry message.</param>
            <param name="DataClassification">The data classification of the telemetry message.</param>
        </member>
        <member name="M:Codeunit::System#Telemetry#Telemetry.LogMessage(Text,Text,Verbosity,DataClassification,Enum::System#Telemetry#AL Telemetry Scope,Dictionary of [Text,Text])">
            <summary>
            Logs a telemetry message (with the capability to send to ISVs).
            </summary>
            <param name="EventId">A unique identifier of the telemetry message.</param>
            <param name="Message">The main content of the telemetry message (typically contains text that can be easily read by a person).</param>
            <param name="Verbosity">The verbosity of the telemetry message.</param>
            <param name="DataClassification">The data classification of the telemetry message.</param>
            <param name="ALTelemetryScope">The telemetry scope of the message.</param>
            <param name="CustomDimensions">Any additional information provided together with the telemetry message.</param>
        </member>
        <member name="O:Interface::System#Telemetry#Telemetry Logger">
             <summary>
             The interface that allows 3d party extensions to emit telemetry to their own telemetry stores when the Telemetry codeunit is used.
             </summary>
             <example>
             codeunit 50100 "My Telemetry Logger" implements "Telemetry Logger"
             {
                 Access = Internal;
            
                 procedure LogMessage(EventId: Text; Message: Text; Verbosity: Verbosity; DataClassification: DataClassification; TelemetryScope: TelemetryScope; CustomDimensions: Dictionary of [Text, Text])
                 begin
                     Session.LogMessage(EventId, Message, Verbosity, DataClassification, TelemetryScope, CustomDimensions);
                 end;
             }
             </example>
        </member>
        <member name="M:Interface::System#Telemetry#Telemetry Logger.LogMessage(Text,Text,Verbosity,DataClassification,TelemetryScope,Dictionary of [Text,Text])">
            <summary>
            Logs a telemetry message.
            </summary>
            <param name="EventId">A unique identifier of the telemetry message.</param>
            <param name="Message">The main content of the telemetry message (typically contains text that can be easily read by a person).</param>
            <param name="Verbosity">The verbosity of the telemetry message.</param>
            <param name="DataClassification">The data classification of the telemetry message.</param>
            <param name="TelemetryScope">The telemetry scope of the message.</param>
            <param name="CustomDimensions">Any additional information provided together with the telemetry message.</param>
        </member>
        <member name="O:Codeunit::System#Telemetry#Telemetry Loggers">
            <summary>
            Provides functionality for registering 3d party telemetry loggers to be used with Telemetry codeunit.
            </summary>
            <remarks>This codeunit is only intended to be used from subscribers of <see cref="OnRegisterTelemetryLogger"/> event.</remarks>
        </member>
        <member name="M:Codeunit::System#Telemetry#Telemetry Loggers.Register(Interface::System#Telemetry#Telemetry Logger)">
            <summary>
            Registers a telemetry logger from a 3d party extension. Is used in conjunction with <see cref="OnRegisterTelemetryLogger"/>
            </summary>
            <param name="TelemetryLogger">The codeunit implementing the Telemetry Logger inteface from a 3d party extension.</param>
        </member>
        <member name="M:Codeunit::System#Telemetry#Telemetry Loggers.OnRegisterTelemetryLogger">
            <summary>
            Allows 3d party extensions to register their own telemetry loggers to be used with Telemetry codeunit. Is used in conjunction with <see cref="Register"/>.
            </summary>
            <example>
            [EventSubscriber(ObjectType::Codeunit, Codeunit::"Telemetry Loggers", 'OnRegisterTelemetryLogger', '', true, true)]
            local procedure OnRegisterTelemetryLogger(var Sender: Codeunit "Telemetry Loggers")
            var
                MyTelemetryLogger: Codeunit "My Telemetry Logger"; // this codeunit must implement the Telemetry Logger interface
            begin
                Sender.Register(MyTelemetryLogger);
            end;
            </example>
        </member>
        <member name="M:Codeunit::System#Telemetry#Telemetry Loggers.GetTelemetryLogger(Text,Interface::System#Telemetry#Telemetry Logger@):Boolean">
            <summary>
            Get the telemetry logger from publisher. If there are multiple telemetry loggers registered for the current publisher, a warning is logged.
            </summary>
        </member>
        <member name="M:Codeunit::System#Telemetry#Telemetry Loggers.GetRelevantTelemetryLoggers(Text):List of [Telemetry Logger]">
            <summary>
            Gets the relevant telemetry loggers based on the CallerCallStack, doesn't include the ExcludePublisher's logger.
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when a data point has been clicked.
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when a data point has been double clicked.
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired when the control add-in is ready for communication.
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired when the control add-in should be refreshed.
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#BusinessChart.Update(JsonObject)">
            <summary>
            Initialize and updates the chart. This method must be called before any controls will work.
            </summary>
            <param name="ChartData">The full set of data needed for initializing the chart.</param>
        </member>
        <member name="EV:">
            <summary>
            Event raised when addin is done loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when error occurs
            </summary>
            <param name="Error">Error name</param>
            <param name="Description">Description of the error.</param>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired when the control add-in should be refreshed.
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#FlowIntegration.Initialize(Text,Text,Text)">
            <summary>
            Function that initializes the Flow API
            </summary>
            <param name="HostName">Flow service url needed by Flow API.</param>
            <param name="Locale">Four-letter language and region code.</param>
            <param name="FlowServiceToken">Microsoft Flow Service Access Token.</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#FlowIntegration.LoadFlows(Text)">
            <summary>
            Function that loads the embedded Flow into a container on a webpage
            </summary>        
            <param name="EnvironmentId">Flow Environmnet ID</param>  
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#FlowIntegration.LoadTemplates(Text,Text,Text,Text)">
            <summary>
            Function that loads embedded Flow templates into a container on a webpage
            </summary>
            <param name="EnvironmentId">Flow Environmnet ID</param>
            <param name="SearchTerm">Filters templates matching the search term</param>
            <param name="PageSize">Number of templates to be displayed in the container</param>
            <param name="Destination">Determines page that opens when one selects a template</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#OAuthIntegration.StartAuthorization(Text)">
            <summary>
            Starts the authorization process.
            </summary>
            <param name="Url">The authentication request AuthRequestUrl.</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#OAuthIntegration.Authorize(Text,Text,Text)">
            <summary>
            Creates link to start the authorization process
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event triggered when an authorization code is retreieved.
            </summary>
            <param name="AuthCode">The authorization code retrieved as part of the authentication process.</param>
        </member>
        <member name="EV:">
            <summary>
            Event triggered when the authorization process has failed.
            </summary>
            <param name="AuthError">The authorization error message received.</param>
            <param name="AuthErrorDescription">A description of the authorization error received.</param>
        </member>
        <member name="EV:">
            <summary>
            Event triggered when the Add-In is loaded and ready to use.
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the AddIn is ready for communication through its API
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when an error occurs in the add-in
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the page of the embedded report changes
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the embedded report finishes loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the embedded dashboard finishes loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the embedded dashboard tile finishes loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event that will be fired when the embedded report visual finishes loading
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.InitializeReport(Text,Text,Text,Text)">
            <summary>
            Initializes the Power BI Embed into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.EmbedReport(Text,Text,Text,Text)">
            <summary>
            Initializes the Power BI embed Report into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.EmbedReportWithOptions(Text,Text,Text,Text,Boolean)">
            <summary>
            Initializes the Power BI embed Report into the page, with additional options
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.EmbedDashboard(Text,Text,Text)">
            <summary>
            Initializes the Power BI embed Dashboard into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.EmbedDashboardTile(Text,Text,Text,Text)">
            <summary>
            Initializes the Power BI embed Dashboard Tile into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.EmbedReportVisual(Text,Text,Text,Text,Text)">
            <summary>
            Initializes the Power BI embed Report Visual into the page
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.ViewMode">
            <summary>
            Changes the current mode into View
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.EditMode">
            <summary>
            Changes the current mode into Edit
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.FullScreen">
            <summary>
            Enters full screen mode for the current embed
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.UpdateReportFilters(Text)">
            <summary>
            Updates the report filters with the provided new filters
            </summary>
            <param name="filters">A serialized JSON array of filters</param>
            <remarks>
            The new filters will replace any existing report filter for the same table columns
            </remarks>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.RemoveReportFilters">
            <summary>
            Removes the current report level filters
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.UpdatePageFilters(Text)">
            <summary>
            Updates the page filters with the provided new filters
            </summary>
            <param name="filters">A serialized JSON array of filters</param>
            <remarks>
            The new filters will replace any existing page filter for the same table columns
            </remarks>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.RemovePageFilters">
            <summary>
            Removes the current page level filters
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.SetPage(Text)">
            <summary>
            Changes the active page of the report
            </summary>
            <param name="pageName">The name of the new page to set as active</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#PowerBIManagement.InitializeFrame(Boolean,Text)">
            <summary>
            Sets the properties for the browser frame containing the embed
            </summary>
        </member>
        <member name="O:ControlAddIn::Microsoft#Dynamics#Nav#Client#VideoPlayer">
            <summary>
            MSN video player
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Raised when addin is ready
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#VideoPlayer.SetFrameAttribute(Text,Text)">
            <summary>
            Used to set the attribute to control how video is played
            </summary>
            <param name="AttributeName">
            The name of the attribute
            </param>
            <param name="AttributeValue">
            Value of the attribute
            </param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#VideoPlayer.RemoveAttribute(Text)">
            <summary>
            Removes specified attribute
            </summary>
            <param name="AttributeName">
            The name of the attribute
            </param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#VideoPlayer.SetWidth(Integer)">
            <summary>
            Set prefered video width
            </summary>
            <param name="VideoWidth">
            Width of the video
            </param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#VideoPlayer.SetHeight(Integer)">
            <summary>
            Set Video Height
            </summary>
            <param name="videoHeight">Video Height</param>
        </member>
        <member name="EV:">
            <summary>
            Event raised when addin is done loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when page is done loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when callback url is triggered
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired when the control add-in should be refreshed.
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WebPageViewer.InitializeIFrame(Text)">
            <summary>
            Function that initializes iframe
            Call this before SetContent or Navigate.
            </summary>        
            <param name="Ratio">The ratio of width to height of iframe. For example "16:9".</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WebPageViewer.InitializeFullIFrame">
            <summary>
            Function that initializes iframe, ignoring ratio values
            Call this before SetContent or Navigate.
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WebPageViewer.SetContent(Text)">
            <summary>
            Function that sets the content html
            </summary>        
            <param name="Html">The html content to display.</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WebPageViewer.SetContent(Text,Text)">
            <summary>
            Function that sets the content html and executes some JavaScript
            </summary>        
            <param name="Html">The html content to display.</param>
            <param name="Javascript">JavaScript to execute.</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WebPageViewer.Navigate(Text)">
            <summary>
            Function that sets the content url
            </summary>        
            <param name="Url">Url to display.</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WebPageViewer.Navigate(Text,Text,Text)">
            <summary>
            Function that sets the content url with parameter data
            </summary>        
            <param name="Url">Url to display.</param>
            <param name="Method">HTTP method to use.</param>
            <param name="Data">Data to send (JSON encoded string).</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WebPageViewer.PostMessage(Text,Text,Boolean)">
            <summary>
            Function to post a message to parent window.
            </summary>
            <param name="Message">Data to be sent to the other window</param>
            <param name="TargetOrigin">Specifies what the origin of otherWindow must be for the event to be dispatched, either as the literal string "*" (indicating no preference) or as a URI.</param>
            <param name="ConvertToJson">Flag indicating whether we must convert message to Json or not.</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WebPageViewer.LinksOpenInNewWindow">
            <summary>
            Function to force hyperlinks to open in a new page
            </summary>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WebPageViewer.InvokeEvent(Text)">
            <summary>
            Function to trigger a WebPageViewerEvent with custom data
            </summary>
            <param name="Data">The data to pass in the event.</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WebPageViewer.SubscribeToEvent(Text,Text)">
            <summary>
            Function to subscribe to window events and trigger a WebPageViewerEvent with
            the data provided by the event
            </summary>
            <param name="EventName">The name of window event</param>
            <param name="Origin">Filters event by origin of the publisher</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WebPageViewer.SetCallbacksFromSubscribedEventToIgnore(Text,JsonArray)">
            <summary>
            Function to ignore callbacks occuring due to subscribed events.
            This will improve performance by telling client not to send messages back
            to server if not required.
            </summary>
            <param name="eventName">The event name passed to <see cref="SubscribeToEvent(string, string)"/> whose callback need to be ignored.</param>
            <param name="callbackResults">The results of the callback that need to be ignored.</param>
            <remarks>Send empty callbackResults to undo previous entry.</remarks>
        </member>
        <member name="EV:">
            <summary>
            Event raised when addin is done loading
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event raised when error occurs
            </summary>
            <param name="Error">Error name</param>
            <param name="Description">Error description</param>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired when the control add-in should be refreshed.
            </summary>
        </member>
        <member name="EV:">
            <summary>
            Event will be fired on the thumbnail onclick
            </summary>
            <param name="Selection">The thumbnail selection</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WelcomeWizard.Initialize(Text,Text,Text,Text,Text,Text,Text,Text,Text,Text,Text,Text,Text)">
            <summary>
            Function that initializes the WelcomeWizard API
            </summary>
            <param name="Title">Welcome Wizard Title</param>
            <param name="Subtitle">Welcome Wizard Sub Title</param>
            <param name="Explanation">Information description</param>
            <param name="Intro">Intro text</param>
            <param name="IntroDescription">Description for the intro video</param>
            <param name="GetStarted">Get started text</param>
            <param name="GetStartedDescription">Description for the get started video</param>
            <param name="GetHelp">Find Help Text</param>
            <param name="GetHelpDescription">Description for the find help video</param>
            <param name="RoleCenters">Role Centers Text</param>
            <param name="RoleCentersDescription">Description about the role centers</param>
            <param name="RoleCenter">Role center</param>
            <param name="LegalDescription">Description explaining demo data is for demonstration purposes</param>
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WelcomeWizard.LoadFlows(Text)">
            <summary>
            Function that loads the embedded Welcome Wizard into a container on a webpage
            </summary>        
            <param name="EnvironmentId">Environmnet ID</param>  
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WelcomeWizard.UpdateProfileId(Text)">
            <summary>
            Function that updates the Role Center Profile ID
            </summary>        
            <param name="ChangedProfileId">Profile ID</param> 
        </member>
        <member name="M:ControlAddIn::Microsoft#Dynamics#Nav#Client#WelcomeWizard.LoadTemplates(Text,Text,Text,Text)">
            <summary>
            Function that loads embedded WelcomeWizard templates into a container on a webpage
            </summary>
            <param name="EnvironmentId">Environmnet ID</param>
            <param name="SearchTerm">Filters templates matching the search term</param>
            <param name="PageSize">Number of templates to be displayed in the container</param>
            <param name="Destination">Determines page that opens when one selects a template</param>
        </member>
    </members>
</doc>
